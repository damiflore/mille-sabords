{
  "version": 3,
  "sources": [
    "./service-worker.js"
  ],
  "names": [
    "self",
    "generatedUrlsConfig",
    "assets/ArrrMateyBb-wn3-3d20259e.ttf",
    "versioned",
    "assets/BarbeRouge-b4a9d8e9.png",
    "assets/boat-dc6ca6cf.png",
    "assets/CapitaineCrochet-0ce0da4f.png",
    "assets/card_1skull-47b3b46a.png",
    "assets/card_2skulls-61ce4149.png",
    "assets/card_2sword-challenge-5c1924fd.png",
    "assets/card_3sword-challenge-4097c59a.png",
    "assets/card_4sword-challenge-f3927ba3.png",
    "assets/card_animals-e97f74ef.png",
    "assets/card_chest-037b957f.png",
    "assets/card_coin-19c1c721.png",
    "assets/card_default-d777c0de.png",
    "assets/card_diamond-ae0da860.png",
    "assets/card_pirate-57c15344.png",
    "assets/card_small-1skull-3c9f4a9f.png",
    "assets/card_small-2skulls-683eae22.png",
    "assets/card_small-animals-b931298f.png",
    "assets/card_small-chest-b171aea9.png",
    "assets/card_small-coin-a99cbd8e.png",
    "assets/card_small-diamond-d3b35497.png",
    "assets/card_small-pirate-ada07362.png",
    "assets/card_small-sword-challenge-dc6ca6cf.png",
    "assets/card_small-witch-5e50e07c.png",
    "assets/card_witch-24c51955.png",
    "assets/card-rules-dialog-50665232.css",
    "assets/character-selection-181bd1c8.css",
    "assets/chest-ecf6979a.css",
    "assets/cursed-grid-d5dc17c3.png",
    "assets/dialog.base-81195bc9.css",
    "assets/dialog-8b512a79.css",
    "assets/dialog.wood-519851b1.css",
    "assets/dice_coin-37896c9d.png",
    "assets/dice_diamond-6c36ed54.png",
    "assets/dice_monkey-044ce09c.png",
    "assets/dice_parrot-21f5c4b5.png",
    "assets/dice_skull-271c6b85.png",
    "assets/dice_sword-f0ac96f9.png",
    "assets/dice-ongoing-401ead15.css",
    "assets/dice-b1c540cc.css",
    "assets/draw-card-dialog-5d3f49fd.css",
    "assets/favicon-25e95a00.png",
    "assets/footer-4991a0c0.css",
    "assets/game-configuration-ebf280f3.css",
    "assets/GinetteBoulette-de6a1ce1.png",
    "assets/header-4c28c2d6.css",
    "assets/home-2e7e167b.css",
    "assets/JackSparrow-f439b5cc.png",
    "assets/loadscreen-f1f98571.css",
    "assets/Luffy-59728a08.png",
    "assets/main-0218d392.css",
    "assets/metal-36435573.jpg",
    "assets/mille-sabord-cee7f4b1.css",
    "assets/mille-sabords.webmanifest",
    "version",
    "assets/MissFortune-4b135ade.png",
    "assets/pirate-hook-02-3db1b696.png",
    "assets/pirate-hook-02fba0b6.png",
    "assets/PirateTreasureDemo-4B3MB-febb1694.otf",
    "assets/pwa-icon-574c1c76.png",
    "assets/round-2b248ac6.css",
    "assets/round.score-00ca4100.css",
    "assets/s-4e88d0d7.js",
    "assets/score-board-c673d856.css",
    "assets/sea-096e0699.jpg",
    "assets/settings-c7b8b010.css",
    "assets/skull-bottle-7c833fb2.png",
    "assets/skull-island-87ab7c27.css",
    "assets/skullsandcrossbones-70af14b1.ttf",
    "assets/star-rain-7a40ced1.css",
    "assets/start-player-round-dialog-2527853b.css",
    "assets/stone-417f342b.png",
    "assets/swords-disabled-124616f0.png",
    "assets/treasure-map-6ec97baa.png",
    "assets/win-treasure-7f39a7fa.png",
    "assets/witch-label-f95d3d2f.png",
    "assets/wood-box-fcdd41cc.jpg",
    "assets/wood-3c23f120.jpg",
    "assets/wood-1edfbf4b.png",
    "assets/wood2-15862f37.png",
    "App-213d4891.js",
    "importmap.prod-f8cc8adf.importmap",
    "main.component-63d73ce7.js",
    "main-e99eaf86.js",
    "main.prod.html",
    "config",
    "cachePrefix",
    "manualUrlsConfig",
    "/",
    "shouldHandleRequest",
    "request",
    "requestWasCachedOnInstall",
    "method",
    "shouldCleanOnActivate",
    "response",
    "logLevel",
    "logsBackgroundColor",
    "navigationPreloadEnabled",
    "actions",
    "ping",
    "assertContextLooksGood",
    "undefined",
    "TypeError",
    "Error",
    "length",
    "getUtil",
    "util",
    "createLogger",
    "createLogMethod",
    "args",
    "console",
    "prefixArgs",
    "debug",
    "info",
    "warn",
    "error",
    "noop",
    "resolveUrl",
    "string",
    "String",
    "URL",
    "location",
    "responseUsesLongTermCaching",
    "responseInCache",
    "cacheControlResponseHeader",
    "headers",
    "get",
    "maxAge",
    "parseMaxAge",
    "cacheControlHeader",
    "matches",
    "match",
    "values",
    "Array",
    "from",
    "forEach",
    "tokens",
    "split",
    "key",
    "value",
    "trim",
    "toLowerCase",
    "parseDuration",
    "duration",
    "Number",
    "parseInt",
    "isFinite",
    "getCacheName",
    "generateCacheId",
    "base",
    "blockSize",
    "discreteValues",
    "Math",
    "pow",
    "pad",
    "number",
    "size",
    "s",
    "substr",
    "getRandomValue",
    "crypto",
    "lim",
    "abs",
    "getRandomValues",
    "Uint32Array",
    "random",
    "randomBlock",
    "toString",
    "Date",
    "getTime",
    "readUrlConfig",
    "urlsConfig",
    "urlsToCacheOnInstall",
    "urlsToReloadOnInstall",
    "urlMapping",
    "forEachUniqueUrlIn",
    "url",
    "urlConfig",
    "cache",
    "alias",
    "push",
    "object",
    "callback",
    "urls",
    "Object",
    "keys",
    "includes",
    "redirectRequest",
    "async",
    "mode",
    "Request",
    "requestClone",
    "clone",
    "body",
    "credentials",
    "integrity",
    "referrer",
    "referrerPolicy",
    "bodyPromise",
    "Promise",
    "resolve",
    "blob",
    "bodyValue",
    "redirect",
    "cacheName",
    "logger",
    "install",
    "total",
    "installed",
    "all",
    "map",
    "requestUrlsInUrlsToReloadOnInstall",
    "fetchAndCache",
    "oncache",
    "e",
    "stack",
    "addEventListener",
    "installEvent",
    "waitUntil",
    "handleRequest",
    "fetchEvent",
    "responseFromCache",
    "caches",
    "responsePreloaded",
    "preloadResponse",
    "fetch",
    "remapRequest",
    "prototype",
    "hasOwnProperty",
    "call",
    "newUrl",
    "responsePromise",
    "respondWith",
    "activate",
    "enableNavigationPreloadIfPossible",
    "deleteOtherUrls",
    "deleteOtherCaches",
    "registration",
    "navigationPreload",
    "enable",
    "open",
    "requestsInCache",
    "requestInCache",
    "delete",
    "cacheKeys",
    "cacheKey",
    "startsWith",
    "activateEvent",
    "activatePromise",
    "skipWaiting",
    "refreshCacheKey",
    "status",
    "addCacheKey",
    "removeCacheKey",
    "data",
    "messageEvent",
    "action",
    "actionFn",
    "payload",
    "actionFnReturnValue",
    "ports",
    "postMessage",
    "fetchUsingNetwork",
    "getCache",
    "cacheWrittenPromise",
    "put",
    "controller",
    "AbortController",
    "signal",
    "abort"
  ],
  "mappings": "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",
  "sourcesContent": [
    "\nself.generatedUrlsConfig = {\n  \"assets/ArrrMateyBb-wn3-3d20259e.ttf\": {\n    \"versioned\": true\n  },\n  \"assets/BarbeRouge-b4a9d8e9.png\": {\n    \"versioned\": true\n  },\n  \"assets/boat-dc6ca6cf.png\": {\n    \"versioned\": true\n  },\n  \"assets/CapitaineCrochet-0ce0da4f.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_1skull-47b3b46a.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_2skulls-61ce4149.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_2sword-challenge-5c1924fd.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_3sword-challenge-4097c59a.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_4sword-challenge-f3927ba3.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_animals-e97f74ef.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_chest-037b957f.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_coin-19c1c721.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_default-d777c0de.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_diamond-ae0da860.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_pirate-57c15344.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_small-1skull-3c9f4a9f.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_small-2skulls-683eae22.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_small-animals-b931298f.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_small-chest-b171aea9.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_small-coin-a99cbd8e.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_small-diamond-d3b35497.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_small-pirate-ada07362.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_small-sword-challenge-dc6ca6cf.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_small-witch-5e50e07c.png\": {\n    \"versioned\": true\n  },\n  \"assets/card_witch-24c51955.png\": {\n    \"versioned\": true\n  },\n  \"assets/card-rules-dialog-50665232.css\": {\n    \"versioned\": true\n  },\n  \"assets/character-selection-181bd1c8.css\": {\n    \"versioned\": true\n  },\n  \"assets/chest-ecf6979a.css\": {\n    \"versioned\": true\n  },\n  \"assets/cursed-grid-d5dc17c3.png\": {\n    \"versioned\": true\n  },\n  \"assets/dialog.base-81195bc9.css\": {\n    \"versioned\": true\n  },\n  \"assets/dialog-8b512a79.css\": {\n    \"versioned\": true\n  },\n  \"assets/dialog.wood-519851b1.css\": {\n    \"versioned\": true\n  },\n  \"assets/dice_coin-37896c9d.png\": {\n    \"versioned\": true\n  },\n  \"assets/dice_diamond-6c36ed54.png\": {\n    \"versioned\": true\n  },\n  \"assets/dice_monkey-044ce09c.png\": {\n    \"versioned\": true\n  },\n  \"assets/dice_parrot-21f5c4b5.png\": {\n    \"versioned\": true\n  },\n  \"assets/dice_skull-271c6b85.png\": {\n    \"versioned\": true\n  },\n  \"assets/dice_sword-f0ac96f9.png\": {\n    \"versioned\": true\n  },\n  \"assets/dice-ongoing-401ead15.css\": {\n    \"versioned\": true\n  },\n  \"assets/dice-b1c540cc.css\": {\n    \"versioned\": true\n  },\n  \"assets/draw-card-dialog-5d3f49fd.css\": {\n    \"versioned\": true\n  },\n  \"assets/favicon-25e95a00.png\": {\n    \"versioned\": true\n  },\n  \"assets/footer-4991a0c0.css\": {\n    \"versioned\": true\n  },\n  \"assets/game-configuration-ebf280f3.css\": {\n    \"versioned\": true\n  },\n  \"assets/GinetteBoulette-de6a1ce1.png\": {\n    \"versioned\": true\n  },\n  \"assets/header-4c28c2d6.css\": {\n    \"versioned\": true\n  },\n  \"assets/home-2e7e167b.css\": {\n    \"versioned\": true\n  },\n  \"assets/JackSparrow-f439b5cc.png\": {\n    \"versioned\": true\n  },\n  \"assets/loadscreen-f1f98571.css\": {\n    \"versioned\": true\n  },\n  \"assets/Luffy-59728a08.png\": {\n    \"versioned\": true\n  },\n  \"assets/main-0218d392.css\": {\n    \"versioned\": true\n  },\n  \"assets/metal-36435573.jpg\": {\n    \"versioned\": true\n  },\n  \"assets/mille-sabord-cee7f4b1.css\": {\n    \"versioned\": true\n  },\n  \"assets/mille-sabords.webmanifest\": {\n    \"versioned\": false,\n    \"version\": \"913835fc\"\n  },\n  \"assets/MissFortune-4b135ade.png\": {\n    \"versioned\": true\n  },\n  \"assets/pirate-hook-02-3db1b696.png\": {\n    \"versioned\": true\n  },\n  \"assets/pirate-hook-02fba0b6.png\": {\n    \"versioned\": true\n  },\n  \"assets/PirateTreasureDemo-4B3MB-febb1694.otf\": {\n    \"versioned\": true\n  },\n  \"assets/pwa-icon-574c1c76.png\": {\n    \"versioned\": true\n  },\n  \"assets/round-2b248ac6.css\": {\n    \"versioned\": true\n  },\n  \"assets/round.score-00ca4100.css\": {\n    \"versioned\": true\n  },\n  \"assets/s-4e88d0d7.js\": {\n    \"versioned\": true\n  },\n  \"assets/score-board-c673d856.css\": {\n    \"versioned\": true\n  },\n  \"assets/sea-096e0699.jpg\": {\n    \"versioned\": true\n  },\n  \"assets/settings-c7b8b010.css\": {\n    \"versioned\": true\n  },\n  \"assets/skull-bottle-7c833fb2.png\": {\n    \"versioned\": true\n  },\n  \"assets/skull-island-87ab7c27.css\": {\n    \"versioned\": true\n  },\n  \"assets/skullsandcrossbones-70af14b1.ttf\": {\n    \"versioned\": true\n  },\n  \"assets/star-rain-7a40ced1.css\": {\n    \"versioned\": true\n  },\n  \"assets/start-player-round-dialog-2527853b.css\": {\n    \"versioned\": true\n  },\n  \"assets/stone-417f342b.png\": {\n    \"versioned\": true\n  },\n  \"assets/swords-disabled-124616f0.png\": {\n    \"versioned\": true\n  },\n  \"assets/treasure-map-6ec97baa.png\": {\n    \"versioned\": true\n  },\n  \"assets/win-treasure-7f39a7fa.png\": {\n    \"versioned\": true\n  },\n  \"assets/witch-label-f95d3d2f.png\": {\n    \"versioned\": true\n  },\n  \"assets/wood-box-fcdd41cc.jpg\": {\n    \"versioned\": true\n  },\n  \"assets/wood-3c23f120.jpg\": {\n    \"versioned\": true\n  },\n  \"assets/wood-1edfbf4b.png\": {\n    \"versioned\": true\n  },\n  \"assets/wood2-15862f37.png\": {\n    \"versioned\": true\n  },\n  \"App-213d4891.js\": {\n    \"versioned\": true\n  },\n  \"importmap.prod-f8cc8adf.importmap\": {\n    \"versioned\": true\n  },\n  \"main.component-63d73ce7.js\": {\n    \"versioned\": true\n  },\n  \"main-e99eaf86.js\": {\n    \"versioned\": true\n  },\n  \"main.prod.html\": {\n    \"versioned\": false,\n    \"version\": \"73dfb0c6\"\n  }\n}\n/* globals self, config */\nself.config = {};\nconst {\n  config\n} = self;\nconfig.cachePrefix = `jsenv`;\n/**\n * Service worker will try to put all config.manualUrlsConfig into browser cache\n * when it is installed (installation happens once).\n * Putting an url in that list means it is mandatory for the website to work offline\n * and that it will be cached as long as service worker is alive.\n *\n * You can tell worker the url is versioned doing\n * \"style-v2.css\": { versioned: true }\n *\n */\n\nconfig.manualUrlsConfig = {\n  \"/\": {}\n};\n/*\n  Decides if the request must be cached or not.\n  When returning true, the response for that request will be stored into cache\n*/\n\nconfig.shouldHandleRequest = (request, {\n  requestWasCachedOnInstall\n}) => {\n  if (request.method !== \"GET\" && request.method !== \"HEAD\") return false;\n  return requestWasCachedOnInstall;\n};\n/*\n  Whenever you change something in this file, such as config.cacheName\n  or config.urlsToCacheOnInstall, browser reinstalls the service worker.\n  When service worker activates, it is responsible to clean the cache\n  used by the previous service worker version.\n\n  This logic must be implemented using config.shouldCleanOnActivate and\n  config.shouldCleanOtherCacheOnActivate functions below.\n*/\n\n/*\n  shouldCleanOnActivate(response, request)\n\n  It is a function that will be used to decide if a cached response must be deleted\n  when service worker activates.\n\n  The implementation below tells to delete cache for any request not listed\n  in config.urlsToCacheOnInstall. It means that if an url was listed in the previous worker\n  but is not anymore it will be deleted. It also means that if a request returns true for\n  config.shouldHandleRequest and is not listed in config.urlsToCacheOnInstall, that request\n  cache will be deleted every time service worker is activated after an update.\n*/\n\n\nconfig.shouldCleanOnActivate = (response, request, {\n  requestWasCachedOnInstall\n}) => !requestWasCachedOnInstall;\n\nconfig.logLevel = \"warn\";\nconfig.logsBackgroundColor = \"#ffdc00\"; // nice yellow\n\nconfig.navigationPreloadEnabled = false;\nconfig.actions = {\n  ping: () => \"pong\"\n};\nconfig.cachePrefix = \"mille-sabords\"; // config.logLevel = \"debug\"\n\n/* globals self, config */\nconst assertContextLooksGood = () => {\n  const {\n    generatedUrlsConfig\n  } = self;\n\n  if (generatedUrlsConfig === undefined) {\n    self.generatedUrlsConfig = {};\n  } else if (typeof generatedUrlsConfig !== \"object\") {\n    throw new TypeError(`self.generatedUrlsConfig should be an object, got ${generatedUrlsConfig}`);\n  }\n\n  if (typeof config === undefined) {\n    throw new Error(`config is not in scope, be sure to import sw.preconfig.js before sw.jsenv.js`);\n  }\n\n  const {\n    manualUrlsConfig\n  } = config;\n\n  if (typeof manualUrlsConfig !== \"object\") {\n    throw new TypeError(`config.manualUrlsConfig should be an array, got ${manualUrlsConfig}`);\n  }\n\n  const {\n    cachePrefix\n  } = config;\n\n  if (typeof cachePrefix !== \"string\") {\n    throw new TypeError(`config.cachePrefix should be a string, got ${cachePrefix}`);\n  }\n\n  if (cachePrefix.length === 0) {\n    throw new TypeError(`config.cachePrefix must not be empty`);\n  }\n\n  const {\n    shouldCleanOnActivate\n  } = config;\n\n  if (typeof shouldCleanOnActivate !== \"function\") {\n    throw new TypeError(`config.shouldCleanOnActivate should be a function, got ${shouldCleanOnActivate}`);\n  }\n\n  const {\n    shouldHandleRequest\n  } = config;\n\n  if (typeof shouldHandleRequest !== \"function\") {\n    throw new TypeError(`config.shouldHandleRequest should be a function, got ${shouldHandleRequest}`);\n  }\n\n  const {\n    logLevel\n  } = config;\n\n  if (typeof logLevel !== \"string\") {\n    throw new TypeError(`config.logLevel should be a boolean, got ${logLevel}`);\n  }\n\n  const {\n    logsBackgroundColor\n  } = config;\n\n  if (typeof logsBackgroundColor !== \"string\") {\n    throw new TypeError(`config.logsBackgroundColor should be a string, got ${logsBackgroundColor}`);\n  }\n\n  const {\n    navigationPreloadEnabled\n  } = config;\n\n  if (typeof navigationPreloadEnabled !== \"boolean\") {\n    throw new TypeError(`config.navigationPreloadEnabled should be a boolean, got ${navigationPreloadEnabled}`);\n  }\n};\n/*\n * util is an object holding utility functions.\n * The utility concept was added just to structure a bit this file.\n * When a utility need private helpers function, it's wrapped in {}\n * to highlight that thoose are private functions\n * The {} pattern was choosed because it allows to have private helpers\n * such as parseMaxAge. Not possible to do that with a plain object.\n */\n\n\nconst getUtil = () => {\n  const util = {};\n\n  util.createLogger = ({\n    logLevel,\n    logsBackgroundColor\n  }) => {\n    const prefixArgs = (...args) => {\n      return [`%csw`, `background: ${logsBackgroundColor}; color: black; padding: 1px 3px; margin: 0 1px`, ...args];\n    };\n\n    const createLogMethod = method => (...args) => console[method](...prefixArgs(...args));\n\n    const debug = createLogMethod(\"debug\");\n    const info = createLogMethod(\"info\");\n    const warn = createLogMethod(\"warn\");\n    const error = createLogMethod(\"error\");\n\n    const noop = () => {};\n\n    if (logLevel === \"debug\") {\n      return {\n        debug,\n        info,\n        warn,\n        error\n      };\n    }\n\n    if (logLevel === \"info\") {\n      return {\n        debug: noop,\n        info,\n        warn,\n        error\n      };\n    }\n\n    if (logLevel === \"warn\") {\n      return {\n        debug: noop,\n        info: noop,\n        warn,\n        error\n      };\n    }\n\n    if (logLevel === \"error\") {\n      return {\n        debug: noop,\n        info: noop,\n        warn: noop,\n        error\n      };\n    }\n\n    if (logLevel === \"off\") {\n      return {\n        debug: noop,\n        info: noop,\n        warn: noop,\n        error: noop\n      };\n    }\n\n    throw new Error(`unknown logLevel, got ${logLevel}`);\n  };\n\n  util.resolveUrl = string => String(new URL(string, self.location));\n\n  {\n    util.responseUsesLongTermCaching = responseInCache => {\n      const cacheControlResponseHeader = responseInCache.headers.get(\"cache-control\");\n      const maxAge = parseMaxAge(cacheControlResponseHeader);\n      return maxAge && maxAge > 0;\n    }; // https://github.com/tusbar/cache-control\n\n\n    const parseMaxAge = cacheControlHeader => {\n      if (!cacheControlHeader || cacheControlHeader.length === 0) return null;\n      const HEADER_REGEXP = /([a-zA-Z][a-zA-Z_-]*)\\s*(?:=(?:\"([^\"]*)\"|([^ \\t\",;]*)))?/g;\n      const matches = cacheControlHeader.match(HEADER_REGEXP) || [];\n      const values = {};\n      Array.from(matches).forEach(match => {\n        const tokens = match.split(\"=\", 2);\n        const [key] = tokens;\n        let value = null;\n\n        if (tokens.length > 1) {\n          value = tokens[1].trim();\n        }\n\n        values[key.toLowerCase()] = value;\n      });\n      return parseDuration(values[\"max-age\"]);\n    };\n\n    const parseDuration = value => {\n      if (!value) {\n        return null;\n      }\n\n      const duration = Number.parseInt(value, 10);\n\n      if (!Number.isFinite(duration) || duration < 0) {\n        return null;\n      }\n\n      return duration;\n    };\n  }\n  {\n    util.getCacheName = ({\n      cachePrefix\n    }) => {\n      return `${cachePrefix}${generateCacheId()}`;\n    };\n\n    const base = 36;\n    const blockSize = 4;\n    const discreteValues = Math.pow(base, blockSize);\n\n    const pad = (number, size) => {\n      var s = `000000000${number}`;\n      return s.substr(s.length - size);\n    };\n\n    const getRandomValue = (() => {\n      const {\n        crypto\n      } = self;\n\n      if (crypto) {\n        const lim = Math.pow(2, 32) - 1;\n        return () => {\n          return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);\n        };\n      }\n\n      return Math.random;\n    })();\n\n    const randomBlock = () => {\n      return pad((getRandomValue() * discreteValues << 0).toString(base), blockSize);\n    };\n\n    const generateCacheId = () => {\n      const timestamp = new Date().getTime().toString(base);\n      const random = `${randomBlock()}${randomBlock()}`;\n      return `${timestamp}${random}`;\n    };\n  }\n  {\n    util.readUrlConfig = () => {\n      const urlsConfig = { ...self.generatedUrlsConfig,\n        ...config.manualUrlsConfig\n      };\n      const urlsToCacheOnInstall = [];\n      const urlsToReloadOnInstall = [];\n      const urlMapping = {};\n      forEachUniqueUrlIn(urlsConfig, (url, urlConfig) => {\n        if (!urlConfig) urlConfig = {\n          cache: false\n        };\n        if (urlConfig === true) urlConfig = {\n          cache: true\n        };\n        const {\n          cache = true,\n          versioned = false,\n          alias\n        } = urlConfig;\n\n        if (cache) {\n          urlsToCacheOnInstall.push(url);\n\n          if (!versioned) {\n            urlsToReloadOnInstall.push(url);\n          }\n        }\n\n        if (alias) {\n          urlMapping[url] = util.resolveUrl(alias);\n        }\n      });\n      return {\n        urlsToCacheOnInstall,\n        urlsToReloadOnInstall,\n        urlMapping\n      };\n    };\n\n    const forEachUniqueUrlIn = (object, callback) => {\n      const urls = [];\n      Object.keys(object).forEach(key => {\n        const url = util.resolveUrl(key);\n\n        if (!urls.includes(url)) {\n          urls.push(url);\n          callback(url, object[key]);\n        }\n      });\n    };\n  }\n\n  util.redirectRequest = async (request, url) => {\n    const {\n      mode\n    } = request; // see https://github.com/GoogleChrome/workbox/issues/1796\n\n    if (mode !== \"navigate\") {\n      return new Request(url, request);\n    }\n\n    const requestClone = request.clone();\n    const {\n      body,\n      credentials,\n      headers,\n      integrity,\n      referrer,\n      referrerPolicy\n    } = requestClone;\n    const bodyPromise = body ? Promise.resolve(body) : requestClone.blob();\n    const bodyValue = await bodyPromise;\n    const requestMutated = new Request(url, {\n      body: bodyValue,\n      credentials,\n      headers,\n      integrity,\n      referrer,\n      referrerPolicy,\n      mode: \"same-origin\",\n      redirect: \"manual\"\n    });\n    return requestMutated;\n  };\n\n  return util;\n};\n\nassertContextLooksGood();\nconst util = getUtil();\nconst cacheName = util.getCacheName(config);\nconst logger = util.createLogger(config);\nconst {\n  urlsToCacheOnInstall,\n  urlsToReloadOnInstall,\n  urlMapping\n} = util.readUrlConfig(config);\nlogger.info(`cache key: ${cacheName}`); // --- installation phase ---\n\nconst install = async () => {\n  logger.info(\"install start\");\n\n  try {\n    const total = urlsToCacheOnInstall.length;\n    let installed = 0;\n    await Promise.all(urlsToCacheOnInstall.map(async url => {\n      try {\n        const requestUrlsInUrlsToReloadOnInstall = urlsToReloadOnInstall.includes(url);\n        const request = new Request(url, { ...(requestUrlsInUrlsToReloadOnInstall ? {\n            // A non versioned url must ignore navigator cache\n            // otherwise we might (99% chances) hit previous worker cache\n            // and miss the new version\n            cache: \"reload\"\n          } : {// If versioned url is the same as before, it's ok to reuse\n            // cache from previous worker or navigator itself.\n          })\n        });\n        await fetchAndCache(request, {\n          oncache: () => {\n            installed += 1;\n          }\n        });\n      } catch (e) {\n        logger.warn(`cannot put ${url} in cache due to error while fetching: ${e.stack}`);\n      }\n    }));\n\n    if (installed === total) {\n      logger.info(`install done (${total} urls added in cache)`);\n    } else {\n      logger.info(`install done (${installed}/${total} urls added in cache)`);\n    }\n  } catch (error) {\n    logger.error(`install error: ${error.stack}`);\n  }\n};\n\nself.addEventListener(\"install\", installEvent => {\n  installEvent.waitUntil(install(installEvent));\n}); // --- fetch implementation ---\n\nconst handleRequest = async (request, fetchEvent) => {\n  logger.debug(`received fetch event for ${request.url}`);\n\n  try {\n    const responseFromCache = await self.caches.match(request);\n\n    if (responseFromCache) {\n      logger.debug(`respond with response from cache for ${request.url}`);\n      return responseFromCache;\n    }\n\n    const responsePreloaded = await fetchEvent.preloadResponse;\n\n    if (responsePreloaded) {\n      logger.debug(`respond with preloaded response for ${request.url}`);\n      return responsePreloaded;\n    }\n  } catch (error) {\n    logger.warn(`error while trying to use cache for ${request.url}`, error.stack);\n    return fetch(request);\n  }\n\n  logger.debug(`no cache for ${request.url}, fetching it`);\n  return fetchAndCache(request);\n};\n\nconst remapRequest = request => {\n  if (Object.prototype.hasOwnProperty.call(urlMapping, request.url)) {\n    const newUrl = urlMapping[request.url];\n    logger.debug(`redirect request from ${request.url} to ${newUrl}`);\n    return util.redirectRequest(request, newUrl);\n  }\n\n  return request;\n};\n\nself.addEventListener(\"fetch\", fetchEvent => {\n  const request = remapRequest(fetchEvent.request);\n\n  if (config.shouldHandleRequest(request, {\n    requestWasCachedOnInstall: urlsToCacheOnInstall.includes(request.url)\n  })) {\n    const responsePromise = handleRequest(request, fetchEvent);\n\n    if (responsePromise) {\n      fetchEvent.respondWith(responsePromise);\n    }\n  }\n}); // --- activation phase ---\n\nconst activate = async () => {\n  logger.info(\"activate start\");\n  await Promise.all([enableNavigationPreloadIfPossible(), deleteOtherUrls(), deleteOtherCaches()]);\n  logger.info(\"activate done\");\n};\n\nconst enableNavigationPreloadIfPossible = async () => {\n  if (config.navigationPreloadEnabled && self.registration.navigationPreload) {\n    await self.registration.navigationPreload.enable();\n  }\n};\n\nconst deleteOtherUrls = async () => {\n  const cache = await self.caches.open(cacheName);\n  const requestsInCache = await cache.keys();\n  await Promise.all(requestsInCache.map(async requestInCache => {\n    const responseInCache = await cache.match(requestInCache);\n\n    if (config.shouldCleanOnActivate(responseInCache, requestInCache, {\n      requestWasCachedOnInstall: urlsToCacheOnInstall.includes(requestInCache.url)\n    })) {\n      logger.info(`delete ${requestInCache.url}`);\n      await cache.delete(requestInCache);\n    }\n  }));\n};\n\nconst deleteOtherCaches = async () => {\n  const cacheKeys = await self.caches.keys();\n  await Promise.all(cacheKeys.map(async cacheKey => {\n    if (cacheKey !== cacheName && cacheKey.startsWith(config.cachePrefix)) {\n      logger.info(`delete cache ${cacheKey}`);\n      await self.caches.delete(cacheKey);\n    }\n  }));\n};\n\nself.addEventListener(\"activate\", activateEvent => {\n  const activatePromise = activate(activateEvent);\n\n  if (activatePromise) {\n    activateEvent.waitUntil(activatePromise);\n  }\n}); // --- postMessage communication ---\n\nconst actions = {\n  skipWaiting: () => {\n    self.skipWaiting();\n  },\n  refreshCacheKey: async url => {\n    url = util.resolveUrl(url);\n    const response = await fetchAndCache(new Request(url, {\n      cache: \"reload\"\n    }));\n    return response.status;\n  },\n  addCacheKey: async url => {\n    url = util.resolveUrl(url);\n    const response = await fetchAndCache(url);\n    return response.status;\n  },\n  removeCacheKey: async url => {\n    url = util.resolveUrl(url);\n    const cache = await self.caches.open(cacheName);\n    const deleted = await cache.delete(url);\n    return deleted;\n  },\n  ...config.actions\n};\nself.addEventListener(\"message\", async messageEvent => {\n  const {\n    data\n  } = messageEvent;\n  if (typeof data !== \"object\") return;\n  const {\n    action\n  } = data;\n  const actionFn = actions[action];\n  if (!actionFn) return;\n  const {\n    payload\n  } = data;\n  let status;\n  let value;\n\n  try {\n    const actionFnReturnValue = await actionFn(payload, {\n      cacheName\n    });\n    status = \"resolved\";\n    value = actionFnReturnValue;\n  } catch (e) {\n    status = \"rejected\";\n    value = e;\n  }\n\n  messageEvent.ports[0].postMessage({\n    status,\n    value\n  });\n});\n\nconst fetchAndCache = async (request, {\n  oncache\n} = {}) => {\n  const [response, cache] = await Promise.all([fetchUsingNetwork(request), getCache()]);\n\n  if (response.status === 200) {\n    logger.debug(`fresh response found for ${request.url}, put it in cache and respond with it`);\n    const cacheWrittenPromise = cache.put(request, response.clone());\n\n    if (oncache) {\n      await cacheWrittenPromise;\n      oncache();\n    }\n\n    return response;\n  }\n\n  logger.warn(`cannot put ${request.url} in cache due to response status (${response.status})`);\n  return response;\n};\n\nconst fetchUsingNetwork = async request => {\n  const controller = new AbortController();\n  const {\n    signal\n  } = controller;\n\n  try {\n    const response = await fetch(request, {\n      signal\n    });\n    return response;\n  } catch (e) {\n    // abort request in any case\n    // I don't know how useful this is ?\n    controller.abort();\n    throw e;\n  }\n};\n\nconst getCache = async () => {\n  const cache = await self.caches.open(cacheName);\n  return cache;\n};\n"
  ]
}