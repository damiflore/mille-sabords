{
  "version": 3,
  "sources": [
    "../../src/home/Home.jsx",
    "../../src/chest/chest.util.js",
    "../../src/round/computeRoundScore.js",
    "../../src/round/round.selectors.js",
    "../../src/round/round.actions.js",
    "../../src/dices/dices.actions.js",
    "../../src/round/round.effects.js",
    "../../src/cards/cards.actions.js",
    "../../src/cards/cards.effects.js",
    "../../src/helper/signal.js",
    "../../src/dice-ongoing/DiceOnGoing.jsx",
    "../../src/animation/startJavaScriptAnimation.js",
    "../../src/animation/useAnimateTransition.js",
    "../../src/animation/ValueWithAnimatedTransition.jsx",
    "../../src/dom/dom.traversal.js",
    "../../src/dialog/focus-trap.js",
    "../../src/dialog/scroll-trap.js",
    "../../src/dialog/DialogBase.jsx",
    "../../src/dialog/dialog.component.jsx",
    "../../src/game-design/StarRain.jsx",
    "../../src/dialog/CloseIcon.jsx",
    "../../src/dialog/dialog.wood.jsx",
    "../../src/round/RoundScoreRulesDialog.jsx",
    "../../src/helper/geometry.js",
    "../../src/helper/rectangle.js",
    "../../src/dom/dom.position.js",
    "../../src/round/RoundScoreParticle.jsx",
    "../../src/round/useRoundScoreParticleEffects.js",
    "../../src/round/RoundScore.jsx",
    "../../src/score/useScoreParticles.js",
    "../../src/dices/dicePosition.js",
    "../../src/chest/chest.component.jsx",
    "../../src/cards/cards-rules.js",
    "../../src/header/CardRulesDialog.jsx",
    "../../src/cards/SmallCard.jsx",
    "../../src/header/SwordChallengeIndicator.jsx",
    "../../src/header/Header.jsx",
    "../../src/dices/rollDices.js",
    "../../src/footer/ButtonRoll.js",
    "../../src/footer/Footer.jsx",
    "../../src/skull-island/SkullIsland.jsx",
    "../../src/generic/Portal.jsx",
    "../../src/helper/render.js",
    "../../src/helper/throttle.js",
    "../../src/drag/drag.js",
    "../../src/dices/Dice.jsx",
    "../../src/dices/DiceContainer.jsx",
    "../../src/footer/DrawCardDialog.jsx",
    "../../src/round/Round.jsx",
    "../../src/score-board/StartPlayerRoundDialog.jsx",
    "../../src/score-board/ScoreBoard.jsx",
    "../../src/game/GameConfiguration.jsx",
    "../../src/players/players.main.js",
    "../../src/game/CharacterSelection.jsx",
    "../../src/game/Game.jsx",
    "../../src/main.actions.js",
    "../../src/settings/add-to-home-screen.hooks.js",
    "../../src/settings/service-worker.hooks.js",
    "../../src/settings/UpdateApplication.jsx",
    "../../src/settings/settings.component.js",
    "../../src/App.jsx"
  ],
  "names": [
    "Home",
    "React",
    "ButtonNewGame",
    "createNewGame",
    "useCreateNewGame",
    "className",
    "Image",
    "src",
    "symbolSwordUrl",
    "onClick",
    "createAction",
    "state",
    "gameCreated",
    "chestSlotContentToSymbol",
    "chestSlotContent",
    "dices",
    "type",
    "value",
    "dice",
    "diceToVisibleSymbol",
    "computeRoundScore",
    "e",
    "card",
    "symbolsInChest",
    "scoreMarked",
    "markScoreAllowed",
    "isSwordChallengeCard",
    "computeScoreForSwordChallenge",
    "goal",
    "numberOfSwords",
    "gamble",
    "gambleAmount",
    "isAnimalsCard",
    "computeScoreForSymbols",
    "map",
    "symbol",
    "SYMBOL_PARROT",
    "SYMBOL_MONKEY",
    "isPirateCard",
    "isCoinCard",
    "isDiamondCard",
    "symbols",
    "countSymbol",
    "SYMBOL_SWORD",
    "symbolArray",
    "filter",
    "symbolCandidate",
    "length",
    "perfectCount",
    "getScoreAndPerfectBonus",
    "score",
    "perfectBonus",
    "usefullSymbol",
    "symbolCountMap",
    "countSymbolsOccurences",
    "Object",
    "values",
    "forEach",
    "symbolCount",
    "SYMBOL_DIAMOND",
    "SYMBOL_COIN",
    "hasOwnProperty",
    "useMemo",
    "useCurrentPlayer",
    "arguments",
    "t",
    "currentPlayerId",
    "useCurrentPlayerId",
    "players",
    "usePlayers",
    "find",
    "playerCandidate",
    "id",
    "useHasNeverRolled",
    "rollCount",
    "useRollCount",
    "useHasRolledOnce",
    "useSymbolsInChest",
    "useDices",
    "chestSlots",
    "useChestSlots",
    "keys",
    "reduce",
    "previous",
    "chestSlot",
    "useRemainingSpotInCursedArea",
    "skullCountInCursedArea",
    "useSkullCountInCursedArea",
    "useHasDicesToCurse",
    "dicesToCurse",
    "useDicesToCurse",
    "diceRolledIds",
    "useDiceRolledIds",
    "witchUncursedDiceId",
    "useWitchUncursedDiceId",
    "remainingSpotInCursedArea",
    "diceRolledId",
    "diceRolled",
    "diceIsOnSkull",
    "slice",
    "useRollDiceAllowed",
    "currentCardId",
    "useCurrentCardId",
    "hasNeverRolled",
    "useScoreMarked",
    "threeSkullsOrMoreInCursedArea",
    "useThreeSkullsOrMoreInCursedArea",
    "hasDicesToCurse",
    "isChestCard",
    "cardIdToCard",
    "useCursedCount",
    "skullBeingCursedCount",
    "cursedCount",
    "diceCursedIds",
    "useDiceCursedIds",
    "symbolsFromCard",
    "useSymbolsFromCard",
    "symbolIsSkull",
    "currentCard",
    "isOneSkullCard",
    "SYMBOL_SKULL",
    "isTwoSkullsCard",
    "useMarkScoreAllowed",
    "useRoundScore",
    "useSwordChallengeOnGoing",
    "quantityKept",
    "quantityRequired",
    "useSwordQuantityRequired",
    "useStartPlayerRound",
    "player",
    "currentCardActivated",
    "roundStarted",
    "ROUND_START_STATE",
    "useEndPlayerRound",
    "useActivateCurrentCard",
    "useSendToSkullIsland",
    "isOnSkullIsland",
    "useMarkScore",
    "currentPlayer",
    "nextScore",
    "witchCardEffectUsed",
    "useSetDiceRolledAreaPosition",
    "zIndex",
    "x",
    "y",
    "rolledAreaPosition",
    "rolledAreaZIndex",
    "useSetDiceChestSlot",
    "previousChestSlot",
    "T",
    "useCurseDice",
    "useUncurseDice",
    "fromLab",
    "diceCursedId",
    "useUnkeepDice",
    "useKeepDice",
    "useEffect",
    "RoundEffects",
    "useRoundEffects",
    "useCurseDiceEffect",
    "useFailSwordChallengeEffect",
    "useFourSkullsOrMoreOnFirstRollEffect",
    "animationsDisabled",
    "useAnimationsDisabled",
    "curseDice",
    "timeout",
    "setTimeout",
    "clearTimeout",
    "markScore",
    "threeSkullsOrMoreInCursedAreaBecomesTrue",
    "useBecomes",
    "threeSkullsOrMoreInCursedAreaPrevious",
    "roundScore",
    "swordChallengeCard",
    "isFirstRoll",
    "useIsOnSkullIsland",
    "sendToSkullIsland",
    "useDrawCard",
    "cardIds",
    "cardUsedIds",
    "cardDrawnId",
    "c",
    "useAddExtraCoin",
    "useAddExtraDiamond",
    "useShuffleDeck",
    "mixDeck",
    "CardsEffects",
    "useCoinCardEffect",
    "useDiamondCardEffect",
    "addExtraCoin",
    "useCurrentCardActivated",
    "currentCardBecomesActivated",
    "currentCardActivatedPrevious",
    "currentCardIsCoinCard",
    "addExtraDiamond",
    "currentCardIsDiamondCard",
    "useSignal",
    "useState",
    "listeners",
    "listen",
    "callback",
    "once",
    "callbackOriginal",
    "stopListening",
    "removed",
    "listenersWithoutCallback",
    "i",
    "searching",
    "listenerCandidate",
    "push",
    "emit",
    "args",
    "listener",
    "signal",
    "useSignalState",
    "stateSetter",
    "DiceOnGoing",
    "rolledAreaRef",
    "offscreenRef",
    "diceOverRolledAreaListener",
    "diceOverRolledArea",
    "ref",
    "style",
    "outline",
    "startJavaScriptAnimation",
    "duration",
    "r",
    "timingFunction",
    "onProgress",
    "o",
    "l",
    "onCancel",
    "u",
    "onComplete",
    "isNaN",
    "console",
    "warn",
    "parseInt",
    "currentRequestAnimationFrameId",
    "startMs",
    "performance",
    "now",
    "done",
    "rawProgress",
    "progress",
    "handler",
    "nowMs",
    "Math",
    "min",
    "window",
    "requestAnimationFrame",
    "cancelAnimationFrame",
    "useAnimateTransitionUsingJs",
    "condition",
    "W",
    "animatedValue",
    "animatedValueSetter",
    "useAnimateTransition",
    "from",
    "to",
    "n",
    "round",
    "animate",
    "a",
    "transition",
    "transitionSetter",
    "valuePrevious",
    "usePrevious",
    "ValueWithAnimatedTransition",
    "findFirstDescendant",
    "rootNode",
    "fn",
    "iterator",
    "createNextNodeIterator",
    "next",
    "node",
    "getNextNode",
    "skipChild",
    "firstChild",
    "nextSibling",
    "parentNode",
    "current",
    "nextNode",
    "Boolean",
    "getDeepestNode",
    "deepestNode",
    "lastChild",
    "createPreviousNodeIterator",
    "fromNode",
    "previousNode",
    "previousSibling",
    "firstFocusableDescendantOrSelf",
    "element",
    "isFocusable",
    "trapFocusInside",
    "nodeType",
    "activeTraps",
    "activeTrap",
    "getFirstTabbable",
    "isDiscoverableWithKeyboard",
    "getLastTabbable",
    "getPreviousTabbableOrLast",
    "root",
    "predicate",
    "document",
    "activeElement",
    "getNextTabbableOrFirst",
    "skipChildren",
    "childrenSkipped",
    "createAfterNodeIterator",
    "deactivate",
    "activate",
    "lock",
    "onmousedown",
    "event",
    "target",
    "contains",
    "preventDefault",
    "stopImmediatePropagation",
    "onkeydown",
    "isTabEvent",
    "activeElementIsBody",
    "body",
    "shiftKey",
    "elementToFocus",
    "focus",
    "addEventListener",
    "capture",
    "passive",
    "removeEventListener",
    "hasAttribute",
    "Number",
    "getAttribute",
    "key",
    "keyCode",
    "previousTrap",
    "unlock",
    "trap",
    "lastTrap",
    "pop",
    "getScrollableParent",
    "arg",
    "_typeof",
    "TypeError",
    "documentElement",
    "getStyleValue",
    "getScrollingElement",
    "ownerDocument",
    "findScrollableParent",
    "scrollingElement",
    "isCompliant",
    "possiblyScrollingElement",
    "test",
    "tagName",
    "getNextBodyElement",
    "bodyIsScrollable",
    "frameset",
    "isBodyElement",
    "isScrollable",
    "isHidden",
    "display",
    "compatMode",
    "testScrollCompliance",
    "iframe",
    "createElement",
    "height",
    "appendChild",
    "iframeDocument",
    "contentWindow",
    "write",
    "close",
    "scrollComplianceResult",
    "scrollHeight",
    "removeChild",
    "verticalOverflowIsVisible",
    "horizontalOverflowIsVisible",
    "position",
    "parent",
    "isDocumentElement",
    "dn",
    "mn",
    "dialogBaseCssUrl",
    "URL",
    "System",
    "import",
    "DialogBase",
    "container",
    "insertTop",
    "insertLeft",
    "insertRight",
    "insertBottom",
    "children",
    "isOpen",
    "requestCloseOnEscape",
    "requestCloseOnClickOutside",
    "closeMethod",
    "p",
    "g",
    "stealFocus",
    "restoreStolenFocus",
    "trapFocus",
    "onAfterOpen",
    "w",
    "onRequestClose",
    "R",
    "onFocusIn",
    "O",
    "onFocusOut",
    "M",
    "backdropProps",
    "rest",
    "q",
    "j",
    "dialogRootNode",
    "dialogRootNodeSetter",
    "isInsideDocument",
    "isOpenPrevious",
    "focusIsInsideDialog",
    "hasOrContainsFocus",
    "onDocumentBlur",
    "blurEvent",
    "relatedTarget",
    "onDialogFocus",
    "focusEvent",
    "onDocumentFocus",
    "elementsToScrollLock",
    "scrollableParents",
    "visitElement",
    "elementOrScrollableParent",
    "scrollableParent",
    "getAllScrollableParent",
    "cleanUpArray",
    "prev",
    "overflow",
    "removeProperty",
    "cleanup",
    "nodeFocusedBeforeTransfer",
    "firstFocusableElement",
    "preventScroll",
    "elementsToHide",
    "Array",
    "child",
    "setAttribute",
    "removeAttribute",
    "ReactDOM",
    "createPortal",
    "role",
    "onKeyDown",
    "keydownEvent",
    "ESC_KEY",
    "tabIndex",
    "visibility",
    "hidden",
    "Stylesheet",
    "href",
    "DialogBackDrop",
    "onMouseDownActive",
    "mousedownEvent",
    "clickEvent",
    "props",
    "backdropElement",
    "setBackdropElement",
    "dialogCssUrl",
    "Dialog",
    "useMainDomNode",
    "useDialogState",
    "initialValue",
    "dialogIsOpen",
    "setDialogIsOpen",
    "openDialog",
    "closeDialog",
    "StarRain",
    "Star",
    "viewBox",
    "fill",
    "d",
    "CloseIcon",
    "width",
    "heiht",
    "Sn",
    "DialogWood",
    "title",
    "spacingClasses",
    "concat",
    "RoundScoreRulesDialog",
    "symbolCoinUrl",
    "symbolDiamondUrl",
    "Rn",
    "rotatePoint",
    "origin",
    "point",
    "degrees",
    "radians",
    "degreesToRadians",
    "cosinus",
    "cos",
    "sinus",
    "sin",
    "run",
    "rise",
    "getRectangleCenterPoint",
    "topLeft",
    "topRight",
    "bottomRight",
    "bottomLeft",
    "PI",
    "someRectangleSideLine",
    "firstPoint",
    "secondPoint",
    "thirdPoint",
    "fourthPoint",
    "rectangleInsideOf",
    "rectangle",
    "parentRectangle",
    "left",
    "right",
    "top",
    "bottom",
    "getDistanceBetweenRectangles",
    "firstRectangle",
    "secondRectangle",
    "horizontalDiff",
    "verticalDiff",
    "firstRectangleCenterPoint",
    "sqrt",
    "getDomNodeRectangle",
    "domNode",
    "domNodeRect",
    "getBoundingClientRect",
    "documentScroll",
    "getDocumentScroll",
    "floor",
    "domNodeCollidesWithRectangle",
    "printPointInDocument",
    "color",
    "autoRemove",
    "autoRemoveAfter",
    "div",
    "background",
    "border",
    "autoRemoveTimeout",
    "remove",
    "RoundScoreParticle",
    "totalScoreDomNodeRef",
    "scoreParticle",
    "animationDelayGetter",
    "ScoreParticleTreasure",
    "ScoreParticleCombo",
    "ScoreParticlePerfect",
    "animationDuration",
    "symbolUrl",
    "symbolToImageUrl",
    "particleDomNodeRef",
    "useRef",
    "particleDomNode",
    "totalScoreDomNode",
    "particlePosition",
    "domNodeToCenterPoint",
    "querySelector",
    "animateScoreParticleMoveToTotalScore",
    "delay",
    "onfinish",
    "oncancel",
    "useSvgFluidSizeEffect",
    "svgDomNodeRef",
    "svgChildDomNodeRef",
    "svgDomNode",
    "animateScoreParticlePopOnPlace",
    "dominantBaseline",
    "particleDomNodeRectangle",
    "totalScoreDomNodeRectangle",
    "particleWidth",
    "particleHeight",
    "startX",
    "startY",
    "intermediateX",
    "intermediateY",
    "endX",
    "endY",
    "animation",
    "opacity",
    "transform",
    "offset",
    "cancel",
    "useLayoutEffect",
    "svgChildDomNodeBox",
    "getBBox",
    "ceil",
    "domNodeRectangle",
    "useComboEffect",
    "addScoreParticle",
    "effectSuspended",
    "SYMBOLS",
    "chestSlotsWithThatSymbol",
    "chestSlotSymbol",
    "compareSymbols",
    "comboScore",
    "COMBO_SCORES",
    "comboScorePreviousRef",
    "animationRef",
    "useUpdateEffect",
    "comboScorePrevious",
    "comboIncreased",
    "comboDecreased",
    "symbolIsParrot",
    "cleanupScoreParticle",
    "chestSlotAnimationCleanups",
    "chestSlotWithThatSymbol",
    "transformOrigin",
    "chestSlotAnimationCleanup",
    "leftSymbol",
    "rightSymbol",
    "symbolIsMonkey",
    "RoundScore",
    "swordChallengeOngoing",
    "useSwordChallengeOngoing",
    "ScoreDisplay",
    "scoreDialogIsOpen",
    "openScoreDialog",
    "closeScoreDialog",
    "DoubleScoreIndicator",
    "ScoreWithoutAnimation",
    "ScoreWithAnimations",
    "NegativeScoreSign",
    "roundScoreDomNodeRef",
    "scoreParticleMergedListener",
    "totalScore",
    "onScoreParticleAdded",
    "onScoreParticleRemoved",
    "onScoreParticleMerged",
    "scoreSetter",
    "h",
    "scoreParticles",
    "scoreParticlesSetter",
    "addScoreParticleToState",
    "scoreParticleCandidate",
    "removeScoreParticleFromState",
    "scoreInParticles",
    "particle",
    "scoreDisplayed",
    "chestSlotContentIsCoin",
    "symbolIsCoin",
    "useCoinEffect",
    "chestSlotContentIsDiamond",
    "symbolIsDiamond",
    "useDiamondEffect",
    "perfect",
    "usePerfectEffect",
    "useScoreParticleMergeEffect",
    "lastScoreParticleMsRef",
    "lastScoreParticleMs",
    "animationDelay",
    "scoreParticleAnimationDelayGetter",
    "Date",
    "previousValue",
    "minDelayBetweenParticles",
    "msToWait",
    "scoreParticleMerged",
    "roundScoreDomNode",
    "animateScoreParticleMerge",
    "easing",
    "quantityRequiredArray",
    "challengeWon",
    "swordNumberIncreased",
    "quantityKeptPrevious",
    "swordSliceAnimation",
    "swordSliceAnimationSetter",
    "index",
    "diceSize",
    "cursedGridImageUrl",
    "Chest",
    "chestRef",
    "diceOverChestListener",
    "diceOverChest",
    "protectedByChestCard",
    "ChestSlot",
    "CursedCover",
    "margin",
    "backgroundColor",
    "color1",
    "borderColor",
    "color2",
    "borderWidth",
    "borderStyle",
    "draggable",
    "alt",
    "cardsRules",
    "animals",
    "name",
    "rule",
    "more",
    "chest",
    "coin",
    "diamond",
    "pirate",
    "witch",
    "CardRulesDialog",
    "cardRules",
    "textAlign",
    "cardToImageUrl",
    "br",
    "SmallCard",
    "forwardRef",
    "cardToSmallImageUrl",
    "swordsDisabledImageUrl",
    "SwordChallengeIndicator",
    "SwordIconActivated",
    "SwordIconDisabled",
    "Header",
    "openScoreboard",
    "headerSmallCardRef",
    "HeaderSmallCard",
    "BackCard",
    "CurrentPlayer",
    "TotalScore",
    "cardDialogIsOpen",
    "cardDialogIsOpenSetter",
    "backgroundImage",
    "cardDefaultUrl",
    "backgroundSize",
    "character",
    "img",
    "totalScoreAnimation",
    "pow",
    "rollDices",
    "rolledAreaDomNode",
    "rolledAreaRectangle",
    "rectangleAllowed",
    "rolledAreaWidth",
    "rolledAreaHeight",
    "otherRotatedRectangles",
    "getRandomAndCollisionFreeInfo",
    "count",
    "rectangleCandidate",
    "getRandomDiceRectangle",
    "rotation",
    "getDiceRandomRotation",
    "rotatedRectangleCandidate",
    "points",
    "degree",
    "some",
    "otherRotatedRectangle",
    "secondRotatedRectangle",
    "firstRotatedRectangleSideLine",
    "line",
    "rectangleSideLine",
    "firstLineStartPoint",
    "firstLineEndPoint",
    "secondLineStartPoint",
    "unknownA",
    "secondLineEndPoint",
    "unknownB",
    "denominator",
    "lineCollidesWithRectangle",
    "rotatedRectangle",
    "visibleFaceIndex",
    "getDiceRandomFace",
    "positionCandidate",
    "getRandomNumberBetweenInterval",
    "faces",
    "max",
    "random",
    "ButtonRoll",
    "rollDiceAllowed",
    "roll",
    "useRoll",
    "disabledNotEnoughDice",
    "disabledChestCard",
    "disabled",
    "symbolSkullUrl",
    "dicesToRoll",
    "Footer",
    "onRoundOver",
    "ButtonMarkScore",
    "ButtonEndRound",
    "markScoreButtonVisible",
    "hasRolledOnce",
    "sign",
    "abs",
    "startNextRoundAllowed",
    "endPlayerRound",
    "swordChallengeOnGoing",
    "reason",
    "wichLabelImageUrl",
    "SkullIsland",
    "cursedAreaRef",
    "isWitchCard",
    "UncurseDiceLabel",
    "ExtraSkull",
    "stroke",
    "Portal",
    "stringifyTransformations",
    "rotate",
    "scale",
    "translate",
    "C",
    "join",
    "throttle",
    "previousMs",
    "ms",
    "trailing",
    "throttled",
    "msEllapsedSincePreviousCall",
    "remaining",
    "enableDragGesture",
    "dragIntentTimeout",
    "pendingGesture",
    "logLevel",
    "onGrip",
    "onLongGrip",
    "f",
    "onDrag",
    "onRelease",
    "longGripMs",
    "logger",
    "createLogger",
    "dragIntent",
    "removeMoveListener",
    "removeReleaseListener",
    "cancelMoveThrottling",
    "debug",
    "pointerPositionPrevious",
    "domNodeStartPosition",
    "gripPointerPosition",
    "longGripTimeout",
    "dropEffect",
    "removeDragstartListener",
    "addDomEventListener",
    "dragstartEvent",
    "removeMousedownListener",
    "which",
    "handleGrip",
    "mouseEventToPagePosition",
    "mousemoveThrottled",
    "mousemoveEvent",
    "handleMove",
    "mouseupEvent",
    "handleRelease",
    "removeTouchstartListener",
    "touchstartEvent",
    "touchEventToPagePosition",
    "touchmoveThrottled",
    "touchmoveEvent",
    "touchendEvent",
    "removeClickListener",
    "pointerPosition",
    "domNodeToPagePosition",
    "handleLongGrip",
    "gripHorizontalShift",
    "gripVerticalShit",
    "movePosition",
    "relativeX",
    "relativeY",
    "setDropEffect",
    "rect",
    "mouseEvent",
    "pageX",
    "pageY",
    "touchEvent",
    "firstChangedTouch",
    "changedTouches",
    "Dice",
    "diceAnimation",
    "anmationDebug",
    "onDiceClick",
    "onDiceDrag",
    "onDiceDrop",
    "onDiceDragEnd",
    "disapear",
    "appear",
    "traceUpdate",
    "mainDomNode",
    "diceDomNode",
    "useDiceDomNode",
    "diceDomNodeSetter",
    "useDiceDomNodeSetter",
    "isDiceKept",
    "includes",
    "S",
    "diceGripped",
    "diceGrippedSetter",
    "A",
    "dragGesture",
    "setDragGesture",
    "parentNodePrevious",
    "portalParentNode",
    "bigMoveOccured",
    "disableDragGesture",
    "diceRectangle",
    "onSkull",
    "diceX",
    "diceY",
    "diceZIndex",
    "cursor",
    "transitionProperty",
    "transitionDuration",
    "transitionTimingFunction",
    "rx",
    "ry",
    "computeDiceColors",
    "strokeWidth",
    "DiceContainer",
    "offscreenDomNode",
    "chestDomNode",
    "cursedAreaDomNode",
    "onDiceOverChestChange",
    "onDiceOverRolledAreaChange",
    "useWitchCardEffectUsed",
    "threeSkullsOrMore",
    "useReducer",
    "action",
    "k",
    "diceAnimationState",
    "dispatchDiceAnimation",
    "setDiceRolledAreaPosition",
    "keepDice",
    "unkeepDice",
    "uncurseDice",
    "setDiceChestSlot",
    "dropTargetRef",
    "diceId",
    "diceLocation",
    "diceToLocation",
    "propsFromLocation",
    "diceLocationToProps",
    "diceIsGoingToBeCursed",
    "diceIsInCursedArea",
    "diceIsInRolledArea",
    "diceIsInRolledAreaGetter",
    "useCallback",
    "clickEffect",
    "getClickEffect",
    "firstAvailableChestSlot",
    "firstAvailableChestSlotGetter",
    "dragDiceGesture",
    "dropTargetGetter",
    "getDropEffect",
    "dropDiceGesture",
    "dropAnimation",
    "dropPosition",
    "closestRolledAreaPosition",
    "closestRolledAreaPositionGetter",
    "highestRolledAreaZIndex",
    "highestRolledAreaZIndexGetter",
    "rolledAreaDropPositionGetter",
    "closestAvailableChestSlot",
    "closestAvailableChestSlotGetter",
    "chestSlotDropPositionGetter",
    "diceToChestSlot",
    "diceChestSlot",
    "keepDiceAllowedGetter",
    "diceIsInChestGetter",
    "unkeepDiceAllowedGetter",
    "uncurseDiceAllowedGetter",
    "rectangleWidth",
    "rectangleHeight",
    "absoluteRolledAreaPositionRectangle",
    "destinationSlotDomNode",
    "chestSlotToChestSlotDomNode",
    "destinationSlotRectangle",
    "requestedRectangle",
    "diceWithHighestZIndex",
    "chestSlotMap",
    "Map",
    "domNodeCandidates",
    "chestSlotDomNode",
    "set",
    "closestDomNode",
    "rectangleCandidates",
    "domNodeCandidate",
    "closestRectangle",
    "smallestDistance",
    "distance",
    "indexOf",
    "findDomNodeClosestToRectangle",
    "get",
    "DrawCardDialog",
    "cardDeck",
    "useCardIds",
    "cardId",
    "backCardRef",
    "topCardRef",
    "smallCardRef",
    "remainingCardCount",
    "TopCard",
    "DeckButton",
    "StartButton",
    "ButtonShuffleDeck",
    "ButtonDrawCard",
    "drawCard",
    "shuffleDeck",
    "shufflePending",
    "sufflePendingSetter",
    "animateDeckShuffle",
    "backCard",
    "timeoutId",
    "activateCurrentCard",
    "cardActivating",
    "cardActivatingSetter",
    "animateCardActivation",
    "headerSmallCard",
    "smallCard",
    "topCard",
    "headerSmallCardRectangle",
    "topCardAnimation",
    "smallCardAnimation",
    "Round",
    "onRoundStart",
    "roundMounted",
    "roundMountedSetter",
    "s",
    "diceOverRolledAreaEmitter",
    "diceOverChestEmitter",
    "RoundGameBoard",
    "onRoundMounted",
    "refs",
    "StartPlayerRoundDialog",
    "startPlayerRound",
    "boxShadow",
    "winTreasureUrl",
    "boarUrl",
    "SCORE_MAX",
    "pathList",
    "path1",
    "path2",
    "path3",
    "path4",
    "ScoreBoard",
    "openedByUser",
    "closeScoreboard",
    "playerAnimation",
    "useRoundStarted",
    "startPlayerRoundDialogIsOpen",
    "startPlayerRoundDialogIsOpenSetter",
    "openStartPlayerRoundDialog",
    "nextPlayer",
    "getNextPlayer",
    "PlayerPath",
    "pathCoordinates",
    "isCurrentPlayer",
    "currentPlayerIndex",
    "findIndex",
    "pathForegroundElementRef",
    "boatElementRef",
    "animation3SkullsElementRef",
    "animationSymbolsElementRef",
    "v",
    "scoreAnimation",
    "scoreAnimationSetter",
    "E",
    "symbolsAnimation",
    "symbolsAnimationSetter",
    "skullsAnimation",
    "skullsAnimationSetter",
    "roundOverReason",
    "boatAnimation",
    "offsetDistance",
    "ratioToOffsetDistance",
    "symbolsElement",
    "pathForegroundElement",
    "pathLength",
    "getTotalLength",
    "log",
    "pathForegroundAnimation",
    "strokeDashoffset",
    "ratioToStrokeDashOffset",
    "playState",
    "strokeDasharray",
    "offsetPath",
    "ThreeSkullsAnimated",
    "Avatar",
    "ratio",
    "item",
    "animateLoaded",
    "GameConfiguration",
    "setPlayerCount",
    "useSetPlayerCount",
    "playerCount",
    "_",
    "number",
    "CHARACTERS",
    "CharacterSelection",
    "setPlayerCharacter",
    "useSetPlayerCharacter",
    "startGame",
    "useStartGame",
    "playerWithoutCharacter",
    "scrollEffect",
    "CrewMembers",
    "characterIsAvailable",
    "CARD_TWO_SWORDS_CHALLENGE",
    "loadWhenIntersecting",
    "gameStarted",
    "itemsLength",
    "getElementsByClassName",
    "getMenuWrapperSize",
    "getElementById",
    "offsetWidth",
    "menuWrapperSize",
    "menuSize",
    "onresize",
    "menuInvisibleSize",
    "leftPaddle",
    "rightPaddle",
    "onscroll",
    "menuPosition",
    "scrollLeft",
    "menuEndOffset",
    "classList",
    "add",
    "onclick",
    "scrollStart",
    "scrollEnd",
    "Game",
    "playerAnimationListener",
    "isOnGameConfigurationScreen",
    "useIsOnGameConfigurationScreen",
    "isOnCharacterSelectionScreen",
    "useIsOnCharacterSelectionScreen",
    "scoreboardOpenedByUser",
    "scoreboardOpenedByUserSetter",
    "m",
    "roundOverPayload",
    "roundOverPayloadSetter",
    "playerAnimationSetter",
    "isOnScoreboardScreen",
    "playerScoreWhenRoundStartedRef",
    "useGameStarted",
    "useDisableAnimations",
    "useEnableAnimations",
    "useDisableSound",
    "soundDisabled",
    "useEnableSound",
    "useCancelGame",
    "defaultState",
    "useAddToHomescreenAvailable",
    "addToHomescreenAvailable",
    "addToHomescreenAvailableSetter",
    "addToHomescreen",
    "listenAvailabilityChange",
    "isAvailable",
    "useCheckServiceWorkerUpdate",
    "checkServiceWorkerUpdate",
    "vo",
    "po",
    "Promise",
    "resolve",
    "apply",
    "this",
    "reject",
    "UpdateApplication",
    "settingsDialogIsOpen",
    "serviceWorkerIsAvailable",
    "ServiceWorkerView",
    "update",
    "updateSetter",
    "checkOnOpen",
    "serviceWorkerUpdate",
    "getServiceWorkerUpdate",
    "listenServiceWorkerUpdate",
    "minHeight",
    "UpdateAvailable",
    "UpdateNotAvailable",
    "shouldBecomeNavigatorController",
    "navigatorWillReload",
    "activateServiceWorkerUpdate",
    "useActivateServiceWorkerUpdate",
    "updatingStatus",
    "updatingStatusSetter",
    "direct",
    "then",
    "onActivating",
    "onActivated",
    "onBecomesNavigatorController",
    "updateAttemptStatus",
    "updateAttemptStatusSetter",
    "check",
    "recover",
    "result",
    "found",
    "error",
    "settingsCssUrl",
    "Settings",
    "openSettingsDialog",
    "closeSettingsDialog",
    "SettingsDialog",
    "disableAnimations",
    "enableAnimations",
    "useSoundDisabled",
    "disableSound",
    "enableSound",
    "cancelGame",
    "confirmCancelGameDialogIsOpen",
    "confirmCancelGameDialogIsOpenSetter",
    "checked",
    "onChange",
    "CheckIcon",
    "requestCancelGame",
    "AddToHomescreen",
    "ConfirmCancelGameDialog",
    "closeConfirmCancelGameDialog",
    "performCancelGame",
    "prompt",
    "useAddToHomescreenPrompt",
    "available",
    "symbolMonkeyUrl",
    "milleSabordsCssUrl",
    "AppBody",
    "useMainDomNodeSetter",
    "useGameCreated"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React from \"react\"\nimport { Image } from \"src/generic/Image.jsx\"\nimport { createAction } from \"src/main.store.js\"\nimport { symbolSwordUrl } from \"src/symbols/symbols.js\"\n\nexport const Home = () => {\n  return <ButtonNewGame />\n}\n\nconst ButtonNewGame = () => {\n  const createNewGame = useCreateNewGame()\n\n  return (\n    <div className=\"new-game\">\n      <Image src={symbolSwordUrl} />\n      <button onClick={createNewGame}>Nouvelle partie</button>\n    </div>\n  )\n}\n\nconst useCreateNewGame = createAction((state) => {\n  return {\n    ...state,\n    gameCreated: true,\n  }\n})\n",
    "import { diceToVisibleSymbol } from \"src/dices/dices.js\"\n\nexport const chestSlotContentToSymbol = (chestSlotContent, dices) => {\n  if (chestSlotContent && chestSlotContent.type === \"symbol\") {\n    return chestSlotContent.value\n  }\n\n  if (chestSlotContent && chestSlotContent.type === \"dice\") {\n    const diceId = chestSlotContent.value\n    const dice = dices[diceId]\n    return diceToVisibleSymbol(dice)\n  }\n\n  return null\n}\n",
    "import {\n  SYMBOL_DIAMOND,\n  SYMBOL_COIN,\n  SYMBOL_PARROT,\n  SYMBOL_MONKEY,\n  SYMBOL_SWORD,\n} from \"src/symbols/symbols.js\"\nimport {\n  isAnimalsCard,\n  isPirateCard,\n  isCoinCard,\n  isDiamondCard,\n  isSwordChallengeCard,\n} from \"src/cards/cards.js\"\n\nexport const computeRoundScore = ({ card, symbolsInChest, scoreMarked, markScoreAllowed }) => {\n  if (isSwordChallengeCard(card)) {\n    if (!scoreMarked && !markScoreAllowed) {\n      return -card.gambleAmount\n    }\n    return computeScoreForSwordChallenge(symbolsInChest, {\n      goal: card.numberOfSwords,\n      gamble: card.gambleAmount,\n    })\n  }\n\n  if (isAnimalsCard(card)) {\n    return computeScoreForSymbols(\n      symbolsInChest.map((symbol) => (symbol === SYMBOL_PARROT ? SYMBOL_MONKEY : symbol)),\n    )\n  }\n\n  if (isPirateCard(card)) {\n    return computeScoreForSymbols(symbolsInChest) * 2\n  }\n\n  if (isCoinCard(card)) {\n    return computeScoreForSymbols(symbolsInChest, 9)\n  }\n\n  if (isDiamondCard(card)) {\n    return computeScoreForSymbols(symbolsInChest, 9)\n  }\n\n  return computeScoreForSymbols(symbolsInChest)\n}\n\nconst computeScoreForSwordChallenge = (symbols, { goal, gamble }) => {\n  const swordChallengeAchieved = countSymbol(symbols, SYMBOL_SWORD) >= goal\n  if (swordChallengeAchieved) {\n    return computeScoreForSymbols(symbols) + gamble\n  }\n  return -gamble\n}\n\nexport const countSymbol = (symbolArray, symbol) => {\n  return symbolArray.filter((symbolCandidate) => symbolCandidate === symbol).length\n}\n\nconst computeScoreForSymbols = (symbols, perfectCount) => {\n  const { score, perfectBonus } = getScoreAndPerfectBonus(symbols, perfectCount)\n  return score + perfectBonus\n}\n\nexport const getScoreAndPerfectBonus = (symbols, perfectCount = 8) => {\n  let score = 0\n  let usefullSymbol = 0\n\n  // add points for dice combinaisons\n  const symbolCountMap = countSymbolsOccurences(symbols)\n  Object.values(symbolCountMap).forEach((symbolCount) => {\n    if (symbolCount === 3) score += 100\n    if (symbolCount === 4) score += 200\n    if (symbolCount === 5) score += 500\n    if (symbolCount === 6) score += 1000\n    if (symbolCount === 7) score += 2000\n    if (symbolCount === 8) score += 4000\n    if (symbolCount > 2) usefullSymbol += symbolCount\n  })\n\n  // add 1 point for each coin and diamond\n  symbols.forEach((symbol) => {\n    if (symbol === SYMBOL_DIAMOND) {\n      score += 100\n      if (symbolCountMap[SYMBOL_DIAMOND] < 3) usefullSymbol += 1\n    }\n    if (symbol === SYMBOL_COIN) {\n      score += 100\n      if (symbolCountMap[SYMBOL_COIN] < 3) usefullSymbol += 1\n    }\n  })\n\n  return {\n    score,\n    perfectBonus: usefullSymbol === perfectCount ? 500 : 0,\n  }\n}\n\nconst countSymbolsOccurences = (symbols) => {\n  const symbolCountMap = {}\n  symbols.forEach((symbol) => {\n    if (symbolCountMap.hasOwnProperty(symbol)) {\n      symbolCountMap[symbol]++\n    } else {\n      symbolCountMap[symbol] = 1\n    }\n  })\n  return symbolCountMap\n}\n",
    "import React from \"react\"\n\nimport {\n  useRollCount,\n  useWitchUncursedDiceId,\n  useCurrentCardId,\n  useScoreMarked,\n  useCardIds,\n  useDiceRolledIds,\n  useDiceCursedIds,\n  useChestSlots,\n  useCurrentPlayerId,\n  usePlayers,\n  useDices,\n} from \"src/main.store.js\"\nimport { diceIsOnSkull } from \"src/dices/dices.js\"\nimport {\n  cardIdToCard,\n  isChestCard,\n  isCoinCard,\n  isDiamondCard,\n  isOneSkullCard,\n  isTwoSkullsCard,\n  isSwordChallengeCard,\n} from \"src/cards/cards.js\"\nimport { chestSlotContentToSymbol } from \"src/chest/chest.util.js\"\n\nimport { computeRoundScore, countSymbol } from \"src/round/computeRoundScore.js\"\nimport {\n  symbolIsSkull,\n  SYMBOL_COIN,\n  SYMBOL_DIAMOND,\n  SYMBOL_SKULL,\n  SYMBOL_SWORD,\n} from \"src/symbols/symbols.js\"\n\nconst { useMemo } = React\n\nexport const useCardDeck = ({ cardIds = useCardIds() } = {}) => {\n  return cardIds.map((cardId) => cardIdToCard(cardId))\n}\n\nexport const useCurrentPlayer = ({\n  currentPlayerId = useCurrentPlayerId(),\n  players = usePlayers(),\n} = {}) => {\n  return players.find(\n    (playerCandidate) => playerCandidate.id === currentPlayerId,\n  )\n}\n\nexport const usePlayer = (playerId, { players = usePlayers() } = {}) =>\n  players.find((playerCandidate) => playerCandidate.id === playerId)\n\nexport const useHasNeverRolled = ({ rollCount = useRollCount() } = {}) =>\n  rollCount === 0\n\nexport const useHasRolledOnce = ({ rollCount = useRollCount() } = {}) =>\n  rollCount > 0\n\nexport const useIsFirstRoll = ({ rollCount = useRollCount() } = {}) =>\n  rollCount === 1\n\nexport const useHasRolledMoreThanOnce = ({ rollCount = useRollCount() } = {}) =>\n  rollCount > 1\n\nexport const useSymbolsInChest = ({\n  dices = useDices(),\n  chestSlots = useChestSlots(),\n} = {}) => {\n  return Object.keys(chestSlots).reduce((previous, chestSlot) => {\n    const symbol = chestSlotContentToSymbol(chestSlots[chestSlot], dices)\n\n    if (symbol) {\n      return [...previous, symbol]\n    }\n\n    return previous\n  }, [])\n}\n\nexport const useRemainingSpotInCursedArea = ({\n  skullCountInCursedArea = useSkullCountInCursedArea(),\n} = {}) => {\n  return 3 - skullCountInCursedArea\n}\n\nexport const useHasDicesToCurse = ({\n  dicesToCurse = useDicesToCurse(),\n} = {}) => {\n  return dicesToCurse.length > 0\n}\n\nexport const useDiceKeptIds = ({ chestSlots = useChestSlots() } = {}) => {\n  return Object.keys(chestSlots).reduce((previous, chestSlot) => {\n    const chestSlotContent = chestSlots[chestSlot]\n    if (chestSlotContent && chestSlotContent.type === \"dice\") {\n      return [...previous, chestSlotContent.value]\n    }\n    return previous\n  }, [])\n}\n\nexport const useDicesToCurse = ({\n  dices = useDices(),\n  diceRolledIds = useDiceRolledIds(),\n  witchUncursedDiceId = useWitchUncursedDiceId(),\n  remainingSpotInCursedArea = useRemainingSpotInCursedArea(),\n} = {}) => {\n  const dicesToCurse = diceRolledIds\n    .map((diceRolledId) => dices[diceRolledId])\n    .filter((diceRolled) => {\n      if (!diceIsOnSkull(diceRolled)) return false\n      if (diceRolled.id === witchUncursedDiceId) return false\n      return true\n    })\n    .slice(0, remainingSpotInCursedArea)\n  return dicesToCurse\n}\n\nexport const useRollDiceAllowed = ({\n  currentCardId = useCurrentCardId(),\n  hasNeverRolled = useHasNeverRolled(),\n  scoreMarked = useScoreMarked(),\n  threeSkullsOrMoreInCursedArea = useThreeSkullsOrMoreInCursedArea(),\n  hasDicesToCurse = useHasDicesToCurse(),\n} = {}) => {\n  if (!currentCardId) {\n    return false\n  }\n\n  if (scoreMarked) {\n    return false\n  }\n\n  if (hasNeverRolled) {\n    return true\n  }\n\n  if (threeSkullsOrMoreInCursedArea) {\n    if (isChestCard(cardIdToCard(currentCardId))) {\n      return true\n    }\n    return false\n  }\n\n  if (hasDicesToCurse) {\n    return false\n  }\n\n  return true\n}\n\nexport const useCursedCount = ({\n  dicesToCurse = useDicesToCurse(),\n  skullCountInCursedArea = useSkullCountInCursedArea(),\n} = {}) => {\n  const skullBeingCursedCount = dicesToCurse.length\n  const cursedCount = skullBeingCursedCount + skullCountInCursedArea\n  return cursedCount\n}\n\nexport const useThreeSkullsOrMore = ({\n  cursedCount = useCursedCount(),\n} = {}) => {\n  return cursedCount > 2\n}\n\nexport const useThreeSkullsOrMoreInCursedArea = ({\n  skullCountInCursedArea = useSkullCountInCursedArea(),\n} = {}) => {\n  return skullCountInCursedArea > 2\n}\n\nexport const useSkullCountInCursedArea = ({\n  diceCursedIds = useDiceCursedIds(),\n  symbolsFromCard = useSymbolsFromCard(),\n} = {}) => {\n  return (\n    diceCursedIds.length +\n    symbolsFromCard.filter((symbol) => symbolIsSkull(symbol)).length\n  )\n}\n\nconst useSymbolsFromCard = ({ currentCardId = useCurrentCardId() } = {}) => {\n  if (!currentCardId) return []\n  const currentCard = cardIdToCard(currentCardId)\n  if (isCoinCard(currentCard)) return [SYMBOL_COIN]\n  if (isDiamondCard(currentCard)) return [SYMBOL_DIAMOND]\n  if (isOneSkullCard(currentCard)) return [SYMBOL_SKULL]\n  if (isTwoSkullsCard(currentCard)) return [SYMBOL_SKULL, SYMBOL_SKULL]\n  return []\n}\n\nexport const useMarkScoreButtonVisible = ({\n  hasRolledOnce = useHasRolledOnce(),\n  scoreMarked = useScoreMarked(),\n  currentCardId = useCurrentCardId(),\n  hasDicesToCurse = useHasDicesToCurse(),\n} = {}) => {\n  if (scoreMarked) {\n    return false\n  }\n\n  if (hasDicesToCurse) {\n    return false\n  }\n\n  if (!currentCardId) {\n    return false\n  }\n\n  if (!hasRolledOnce) {\n    return false\n  }\n\n  return true\n}\n\nexport const useMarkScoreAllowed = ({\n  scoreMarked = useScoreMarked(),\n  currentCardId = useCurrentCardId(),\n  threeSkullsOrMoreInCursedArea = useThreeSkullsOrMoreInCursedArea(),\n  hasDicesToCurse = useHasDicesToCurse(),\n} = {}) => {\n  if (scoreMarked) {\n    return false\n  }\n\n  if (threeSkullsOrMoreInCursedArea) {\n    if (isChestCard(cardIdToCard(currentCardId))) {\n      return true\n    }\n    return false\n  }\n\n  if (hasDicesToCurse) {\n    return false\n  }\n\n  if (!currentCardId) {\n    return false\n  }\n\n  return true\n}\n\nexport const useStartNextRoundAllowed = ({\n  rollDiceAllowed = useRollDiceAllowed(),\n  markScoreAllowed = useMarkScoreAllowed(),\n  hasDicesToCurse = useHasDicesToCurse(),\n} = {}) => {\n  if (rollDiceAllowed) {\n    return false\n  }\n\n  if (markScoreAllowed) {\n    return false\n  }\n\n  if (hasDicesToCurse) {\n    return false\n  }\n\n  return true\n}\n\nexport const useRoundScore = ({\n  currentCardId = useCurrentCardId(),\n  symbolsInChest = useSymbolsInChest(),\n  scoreMarked = useScoreMarked(),\n  markScoreAllowed = useMarkScoreAllowed(),\n} = {}) => {\n  return useMemo(\n    () =>\n      computeRoundScore({\n        card: cardIdToCard(currentCardId),\n        symbolsInChest,\n        scoreMarked,\n        markScoreAllowed,\n      }),\n    [currentCardId, symbolsInChest, scoreMarked, markScoreAllowed],\n  )\n}\n\nexport const useSwordChallengeOnGoing = () => {\n  const currentCardId = useCurrentCardId()\n  const card = cardIdToCard(currentCardId)\n  const symbolsInChest = useSymbolsInChest()\n  const quantityKept = countSymbol(symbolsInChest, SYMBOL_SWORD)\n  const quantityRequired = useSwordQuantityRequired()\n\n  if (!isSwordChallengeCard(card)) {\n    return false\n  }\n  return quantityKept < quantityRequired\n}\n\nexport const useSwordQuantityRequired = ({\n  currentCardId = useCurrentCardId(),\n} = {}) => {\n  const card = cardIdToCard(currentCardId)\n  if (isSwordChallengeCard(card)) return card.numberOfSwords\n  return null\n}\n",
    "import { createAction } from \"src/main.store.js\"\n\nexport const useStartPlayerRound = createAction((state, player) => {\n  return {\n    ...state,\n    currentPlayerId: player.id,\n    currentCardId: null,\n    currentCardActivated: false,\n    roundStarted: true,\n    ...ROUND_START_STATE,\n  }\n})\n\nexport const useEndPlayerRound = createAction((state) => {\n  return {\n    ...state,\n    currentCardId: null,\n    currentCardActivated: false,\n    roundStarted: false,\n  }\n})\n\nexport const useActivateCurrentCard = createAction((state) => {\n  return {\n    ...state,\n    currentCardActivated: true,\n  }\n})\n\nexport const useSendToSkullIsland = createAction((state) => {\n  return {\n    ...state,\n    isOnSkullIsland: true,\n  }\n})\n\nexport const useMarkScore = createAction((state, score) => {\n  const { players, currentPlayerId } = state\n  const currentPlayer = players.find(({ id }) => id === currentPlayerId)\n  const nextScore = currentPlayer.score + score\n  currentPlayer.score = nextScore < 0 ? 0 : nextScore\n\n  return {\n    ...state,\n    players: [...players],\n    scoreMarked: true,\n  }\n})\n\nexport const useResetRound = createAction((state) => {\n  return {\n    ...state,\n    ...ROUND_START_STATE,\n  }\n})\n\nconst ROUND_START_STATE = {\n  witchUncursedDiceId: null,\n  witchCardEffectUsed: false,\n  rollCount: 0,\n  diceRolledIds: [],\n  diceCursedIds: [],\n  chestSlots: {\n    1: null,\n    2: null,\n    3: null,\n    4: null,\n    5: null,\n    6: null,\n    7: null,\n    8: null,\n    9: null,\n  },\n  scoreMarked: false,\n  isOnSkullIsland: false,\n}\n",
    "import { createAction } from \"src/main.store.js\"\n\nexport const useSetDiceRolledAreaPosition = createAction((state, dice, { x, y }, zIndex) => {\n  const { dices } = state\n  dice.rolledAreaPosition = { x, y }\n  dice.rolledAreaZIndex = zIndex\n  return {\n    ...state,\n    dices: { ...dices },\n  }\n})\n\nexport const useSetDiceChestSlot = createAction((state, dice, chestSlot) => {\n  const { chestSlots } = state\n  const previousChestSlot = Object.keys(chestSlots).find((chestSlot) => {\n    const chestSlotContent = chestSlots[chestSlot]\n    return (\n      chestSlotContent && chestSlotContent.type === \"dice\" && chestSlotContent.value === dice.id\n    )\n  })\n  return {\n    ...state,\n    chestSlots: {\n      ...chestSlots,\n      ...(previousChestSlot ? { [previousChestSlot]: null } : {}),\n      [chestSlot]: { type: \"dice\", value: dice.id },\n    },\n  }\n})\n\nexport const useCurseDice = createAction((state, dice) => {\n  const { diceRolledIds, diceCursedIds } = state\n  return {\n    ...state,\n    diceRolledIds: diceRolledIds.filter((diceRolledId) => diceRolledId !== dice.id),\n    diceCursedIds: [...diceCursedIds, dice.id],\n  }\n})\n\nexport const useUncurseDice = createAction((state, dice, fromLab = false) => {\n  const { diceRolledIds, diceCursedIds } = state\n  return {\n    ...state,\n    ...(fromLab\n      ? {}\n      : {\n          witchUncursedDiceId: dice.id,\n          witchCardEffectUsed: true,\n        }),\n    diceRolledIds: [...diceRolledIds, dice.id],\n    diceCursedIds: diceCursedIds.filter((diceCursedId) => diceCursedId !== dice.id),\n  }\n})\n\nexport const useUnkeepDice = createAction((state, dice) => {\n  const { diceRolledIds, chestSlots } = state\n  const previousChestSlot = Object.keys(chestSlots).find((chestSlot) => {\n    const chestSlotContent = chestSlots[chestSlot]\n    return (\n      chestSlotContent && chestSlotContent.type === \"dice\" && chestSlotContent.value === dice.id\n    )\n  })\n  return {\n    ...state,\n    diceRolledIds: [...diceRolledIds, dice.id],\n    chestSlots: {\n      ...chestSlots,\n      [previousChestSlot]: null,\n    },\n  }\n})\n\nexport const useKeepDice = createAction((state, dice, chestSlot) => {\n  const { diceRolledIds, chestSlots } = state\n  return {\n    ...state,\n    diceRolledIds: diceRolledIds.filter((diceRolledId) => diceRolledId !== dice.id),\n    chestSlots: {\n      ...chestSlots,\n      [chestSlot]: {\n        type: \"dice\",\n        value: dice.id,\n      },\n    },\n  }\n})\n",
    "import React from \"react\"\n\nimport { useBecomes } from \"src/hooks.js\"\nimport {\n  useCurrentCardId,\n  useScoreMarked,\n  useIsOnSkullIsland,\n  useAnimationsDisabled,\n} from \"src/main.store.js\"\nimport { cardIdToCard, isSwordChallengeCard } from \"src/cards/cards.js\"\nimport {\n  useIsFirstRoll,\n  useThreeSkullsOrMoreInCursedArea,\n  useDicesToCurse,\n  useSkullCountInCursedArea,\n  useRoundScore,\n} from \"src/round/round.selectors.js\"\nimport { useMarkScore, useSendToSkullIsland } from \"src/round/round.actions.js\"\nimport { useCurseDice } from \"src/dices/dices.actions.js\"\n\nconst { useEffect } = React\n\nexport const RoundEffects = () => {\n  useRoundEffects()\n  return null\n}\n\nexport const useRoundEffects = () => {\n  useCurseDiceEffect()\n  useFailSwordChallengeEffect()\n  useFourSkullsOrMoreOnFirstRollEffect()\n}\n\nconst useCurseDiceEffect = () => {\n  const animationsDisabled = useAnimationsDisabled()\n  const dicesToCurse = useDicesToCurse()\n  const curseDice = useCurseDice()\n\n  useEffect(() => {\n    if (dicesToCurse.length === 0) {\n      return () => {}\n    }\n\n    if (animationsDisabled) {\n      dicesToCurse.forEach((dice) => {\n        curseDice(dice)\n      })\n      return () => {}\n    }\n\n    const timeout = setTimeout(() => {\n      dicesToCurse.forEach((dice) => {\n        curseDice(dice)\n      })\n    }, 1000)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [dicesToCurse])\n}\n\n// auto mark score for failed sword challenges\nconst useFailSwordChallengeEffect = () => {\n  const currentCard = cardIdToCard(useCurrentCardId())\n  const scoreMarked = useScoreMarked()\n  const markScore = useMarkScore()\n  const threeSkullsOrMoreInCursedArea = useThreeSkullsOrMoreInCursedArea()\n  const threeSkullsOrMoreInCursedAreaBecomesTrue = useBecomes(\n    (threeSkullsOrMoreInCursedAreaPrevious) =>\n      !threeSkullsOrMoreInCursedAreaPrevious && threeSkullsOrMoreInCursedArea,\n    [threeSkullsOrMoreInCursedArea],\n  )\n  const roundScore = useRoundScore()\n  const swordChallengeCard = isSwordChallengeCard(currentCard)\n\n  useEffect(() => {\n    if (swordChallengeCard && !scoreMarked && threeSkullsOrMoreInCursedAreaBecomesTrue) {\n      markScore(roundScore)\n    }\n  }, [swordChallengeCard, scoreMarked, threeSkullsOrMoreInCursedAreaBecomesTrue, roundScore])\n}\n\n// go to skull island if 4 skulls or more on first roll\nconst useFourSkullsOrMoreOnFirstRollEffect = () => {\n  const isFirstRoll = useIsFirstRoll()\n  const currentCard = cardIdToCard(useCurrentCardId())\n  const isOnSkullIsland = useIsOnSkullIsland()\n  const skullCountInCursedArea = useSkullCountInCursedArea()\n  const sendToSkullIsland = useSendToSkullIsland()\n\n  useEffect(() => {\n    if (!isFirstRoll) return\n\n    if (isOnSkullIsland) return\n\n    if (isSwordChallengeCard(currentCard)) return\n\n    if (skullCountInCursedArea < 4) return\n\n    sendToSkullIsland()\n  }, [isFirstRoll, isOnSkullIsland, currentCard, skullCountInCursedArea])\n}\n",
    "import { createAction } from \"src/main.store.js\"\nimport { mixDeck } from \"src/cards/cards.js\"\nimport { SYMBOL_COIN, SYMBOL_DIAMOND } from \"src/symbols/symbols.js\"\n\nexport const useDrawCard = createAction((state) => {\n  const { cardIds, cardUsedIds } = state\n  const cardDrawnId = cardIds[0]\n  return {\n    ...state,\n    cardIds: cardIds.slice(1),\n    cardUsedIds: [...cardUsedIds, cardDrawnId],\n    currentCardId: cardDrawnId,\n  }\n})\n\nexport const useAddExtraCoin = createAction((state) => {\n  const { chestSlots } = state\n  return {\n    ...state,\n    chestSlots: {\n      ...chestSlots,\n      1: {\n        type: \"symbol\",\n        value: SYMBOL_COIN,\n      },\n    },\n  }\n})\n\nexport const useAddExtraDiamond = createAction((state) => {\n  const { chestSlots } = state\n  return {\n    ...state,\n    chestSlots: {\n      ...chestSlots,\n      1: {\n        type: \"symbol\",\n        value: SYMBOL_DIAMOND,\n      },\n    },\n  }\n})\n\nexport const useShuffleDeck = createAction((state) => {\n  const { cardIds, cardUsedIds } = state\n  return {\n    ...state,\n    // shuffle deck is conceptually the action of taking all the cards\n    // and shuffling them.\n    // hence the [...cardIds, ...cardUsedIds]\n    // For now shuffleDeck is called when cardsIds is empty.\n    // If we change [...cardIds, ...cardUsedIds] by cardUsedIds\n    // it makes shuffleDeck less robust because it cannot be called twice\n    // or at any time.\n    cardIds: mixDeck([...cardIds, ...cardUsedIds]),\n    cardUsedIds: [],\n  }\n})\n\nexport const useUndrawCard = createAction((state) => {\n  const { currentCardId, cardIds, cardUsedIds } = state\n  return {\n    ...state,\n    currentCardId: null,\n    cardIds: [currentCardId, ...cardIds],\n    cardUsedIds: cardUsedIds.slice(1),\n  }\n})\n",
    "import React from \"react\"\n\nimport { useCurrentCardId, useCurrentCardActivated } from \"src/main.store.js\"\nimport { useBecomes } from \"src/hooks.js\"\nimport { cardIdToCard, isCoinCard, isDiamondCard } from \"src/cards/cards.js\"\nimport { useAddExtraCoin, useAddExtraDiamond } from \"src/cards/cards.actions.js\"\n\nexport const CardsEffects = () => {\n  useCoinCardEffect()\n  useDiamondCardEffect()\n  return null\n}\n\nconst useCoinCardEffect = () => {\n  const addExtraCoin = useAddExtraCoin()\n  const currentCardId = useCurrentCardId()\n  const currentCardActivated = useCurrentCardActivated()\n\n  const currentCardBecomesActivated = useBecomes(\n    (currentCardActivatedPrevious) => !currentCardActivatedPrevious === currentCardActivated,\n    [currentCardActivated],\n  )\n  const currentCardIsCoinCard = currentCardId && isCoinCard(cardIdToCard(currentCardId))\n\n  React.useEffect(() => {\n    if (currentCardIsCoinCard) {\n      addExtraCoin()\n    }\n  }, [])\n\n  React.useEffect(() => {\n    if (currentCardBecomesActivated && currentCardIsCoinCard) {\n      addExtraCoin()\n    }\n  }, [currentCardBecomesActivated, currentCardIsCoinCard])\n}\n\nconst useDiamondCardEffect = () => {\n  const addExtraDiamond = useAddExtraDiamond()\n  const currentCardId = useCurrentCardId()\n  const currentCardActivated = useCurrentCardActivated()\n\n  const currentCardBecomesActivated = useBecomes(\n    (currentCardActivatedPrevious) => !currentCardActivatedPrevious === currentCardActivated,\n    [currentCardActivated],\n  )\n  const currentCardIsDiamondCard = currentCardId && isDiamondCard(cardIdToCard(currentCardId))\n\n  React.useEffect(() => {\n    if (currentCardIsDiamondCard) {\n      addExtraDiamond()\n    }\n  }, [])\n\n  React.useEffect(() => {\n    if (currentCardBecomesActivated && currentCardIsDiamondCard) {\n      addExtraDiamond()\n    }\n  }, [currentCardBecomesActivated, currentCardIsDiamondCard])\n}\n",
    "import React from \"react\"\n\nexport const createSignal = () => {\n  let listeners = []\n\n  const listen = (callback, { once = false } = {}) => {\n    if (once) {\n      const callbackOriginal = callback\n      callback = (...args) => {\n        stopListening()\n        callbackOriginal(...args)\n      }\n    }\n\n    listeners = [...listeners, callback]\n\n    let removed = false\n    const stopListening = () => {\n      if (removed) return\n      removed = true\n      const listenersWithoutCallback = []\n      let i = listeners.length\n      let searching = true\n      while (i--) {\n        const listenerCandidate = listeners[i]\n        if (searching) {\n          if (listenerCandidate === callback) {\n            searching = false\n          } else {\n            listenersWithoutCallback.push(listenerCandidate)\n          }\n        } else {\n          listenersWithoutCallback.push(listenerCandidate)\n        }\n      }\n      listeners = listenersWithoutCallback\n    }\n    return stopListening\n  }\n\n  const emit = (...args) => {\n    listeners.forEach((listener) => {\n      listener(...args)\n    })\n  }\n\n  return {\n    listen,\n    emit,\n  }\n}\n\nexport const useSignal = () => {\n  const [signal] = React.useState(() => createSignal())\n  return [signal.listen, signal.emit]\n}\n\nexport const useSignalState = (listen) => {\n  const [state, stateSetter] = React.useState()\n  React.useEffect(() => {\n    return listen(stateSetter)\n  }, [])\n  return state\n}\n",
    "import React from \"react\"\nimport { useSignalState } from \"src/helper/signal.js\"\n\nexport const DiceOnGoing = ({ rolledAreaRef, offscreenRef, diceOverRolledAreaListener }) => {\n  const diceOverRolledArea = useSignalState(diceOverRolledAreaListener)\n  return (\n    <div className=\"dice-ongoing\">\n      <div className=\"map\"></div>\n      <div\n        className=\"area\"\n        ref={rolledAreaRef}\n        style={{\n          ...(diceOverRolledArea ? { outline: \"2px dotted\" } : {}),\n        }}\n      ></div>\n      <div className=\"offscreen-area\" ref={offscreenRef}>\n        {/* we will move the dice into this zone when they are offgame (first roll) */}\n      </div>\n    </div>\n  )\n}\n",
    "export const startJavaScriptAnimation = ({\n  duration = 300,\n  timingFunction = (t) => t, // https://easings.net/\n  onProgress = () => {},\n  onCancel = () => {},\n  onComplete = () => {},\n}) => {\n  if (isNaN(duration)) {\n    console.warn(`duration must be a number, received ${duration}`)\n    return () => {}\n  }\n  duration = parseInt(duration, 10)\n  const startMs = performance.now()\n  let currentRequestAnimationFrameId\n  let done = false\n  let rawProgress = 0\n  let progress = 0\n  const handler = () => {\n    currentRequestAnimationFrameId = null\n    const nowMs = performance.now()\n    rawProgress = Math.min((nowMs - startMs) / duration, 1)\n    progress = timingFunction(rawProgress)\n    done = rawProgress === 1\n    onProgress({\n      done,\n      rawProgress,\n      progress,\n    })\n    if (done) {\n      onComplete()\n    } else {\n      currentRequestAnimationFrameId = window.requestAnimationFrame(handler)\n    }\n  }\n  handler()\n  const stop = () => {\n    if (currentRequestAnimationFrameId) {\n      window.cancelAnimationFrame(currentRequestAnimationFrameId)\n      currentRequestAnimationFrameId = null\n    }\n    if (!done) {\n      done = true\n      onCancel({\n        rawProgress,\n        progress,\n      })\n    }\n  }\n  return stop\n}\n",
    "// https://usehooks.com/useAnimation/\n\nimport React from \"react\"\nimport { usePrevious } from \"src/hooks.js\"\nimport { startJavaScriptAnimation } from \"./startJavaScriptAnimation.js\"\n\nexport const useAnimateTransitionUsingJs = (\n  value,\n  { duration = 300, timingFunction, condition } = {},\n) => {\n  const [animatedValue, animatedValueSetter] = React.useState(null)\n  useAnimateTransition(\n    value,\n    (from, to) => {\n      animatedValueSetter({ value: from })\n      return startJavaScriptAnimation({\n        duration,\n        timingFunction,\n        onProgress: ({ progress }) => {\n          const value = Math.round(from + (to - from) * progress)\n          animatedValueSetter({\n            value,\n          })\n        },\n        onComplete: () => {\n          animatedValueSetter(null)\n        },\n      })\n    },\n    { condition },\n  )\n  return animatedValue\n}\n\nexport const useAnimateTransitionUsingWebAnimation = (value, animate) => {\n  useAnimateTransition(value, (from, to) => {\n    const animation = animate(from, to)\n    return () => {\n      animation.cancel()\n    }\n  })\n}\n\nconst useAnimateTransition = (value, animate, { condition = () => true } = {}) => {\n  const [transition, transitionSetter] = React.useState(null)\n\n  const valuePrevious = usePrevious(value)\n  React.useEffect(() => {\n    if (valuePrevious !== value && condition(value, valuePrevious)) {\n      transitionSetter({\n        from: valuePrevious,\n        to: value,\n      })\n    }\n  }, [valuePrevious, value])\n  React.useEffect(() => {\n    if (transition) {\n      return animate(transition.from, transition.to)\n    }\n    return () => {}\n  }, [transition])\n}\n",
    "import { useAnimateTransitionUsingJs } from \"./useAnimateTransition.js\"\n\nexport const ValueWithAnimatedTransition = ({ value, duration, condition }) => {\n  const animatedValue = useAnimateTransitionUsingJs(value, { duration, condition })\n  return animatedValue ? animatedValue.value : value\n}\n",
    "export const findFirstAncestor = (node, predicate) => {\n  let ancestor = node.parentNode\n  while (ancestor) {\n    if (predicate(ancestor)) {\n      return ancestor\n    }\n    ancestor = ancestor.parentNode\n  }\n  return null\n}\n\nexport const findFirstDescendant = (rootNode, fn) => {\n  const iterator = createNextNodeIterator(rootNode, rootNode)\n  let { done, value: node } = iterator.next()\n  while (done === false) {\n    if (fn(node)) {\n      return node\n    }\n    ;({ done, value: node } = iterator.next())\n  }\n  return null\n}\n\nexport const findLastDescendant = (rootNode, fn) => {\n  const deepestNode = getDeepestNode(rootNode)\n  if (deepestNode) {\n    const iterator = createPreviousNodeIterator(deepestNode, rootNode)\n    let { done, value: node } = iterator.next()\n    while (done === false) {\n      if (fn(node)) {\n        return node\n      }\n      ;({ done, value: node } = iterator.next())\n    }\n  }\n  return null\n}\n\nexport const findAfter = ({ from, root = null, predicate, skipChildren = false }) => {\n  const iterator = createAfterNodeIterator(from, root, skipChildren)\n  let { done, value: node } = iterator.next()\n  while (done === false) {\n    if (predicate(node)) {\n      return node\n    }\n    ;({ done, value: node } = iterator.next())\n  }\n  return null\n}\n\nexport const findAfterSkippingChildren = (param) => findAfter({ ...param, skipChildren: true })\n\nexport const findBefore = ({ from, root = null, predicate }) => {\n  const iterator = createPreviousNodeIterator(from, root)\n  let { done, value: node } = iterator.next()\n  while (done === false) {\n    if (predicate(node)) {\n      return node\n    }\n    ;({ done, value: node } = iterator.next())\n  }\n  return null\n}\n\nconst getNextNode = (node, rootNode, skipChild = false) => {\n  if (!skipChild) {\n    const firstChild = node.firstChild\n    if (firstChild) {\n      return firstChild\n    }\n  }\n\n  const nextSibling = node.nextSibling\n  if (nextSibling) {\n    return nextSibling\n  }\n\n  const parentNode = node.parentNode\n  if (parentNode && parentNode !== rootNode) {\n    return getNextNode(parentNode, rootNode, true)\n  }\n\n  return null\n}\n\nconst createNextNodeIterator = (node, rootNode) => {\n  let current = node\n  const next = () => {\n    const nextNode = getNextNode(current, rootNode)\n    current = nextNode\n    return {\n      done: Boolean(nextNode) === false,\n      value: nextNode,\n    }\n  }\n  return { next }\n}\n\nconst createAfterNodeIterator = (fromNode, rootNode, skipChildren = false) => {\n  let current = fromNode\n  let childrenSkipped = false\n  const next = () => {\n    const nextNode = getNextNode(current, rootNode, skipChildren && childrenSkipped === false)\n    childrenSkipped = true\n    current = nextNode\n    return {\n      done: Boolean(nextNode) === false,\n      value: nextNode,\n    }\n  }\n  return { next }\n}\n\nconst getDeepestNode = (node) => {\n  let deepestNode = node.lastChild\n  while (deepestNode) {\n    const lastChild = deepestNode.lastChild\n    if (lastChild) {\n      deepestNode = lastChild\n    } else {\n      break\n    }\n  }\n  return deepestNode\n}\n\nconst getPreviousNode = (node, rootNode) => {\n  const previousSibling = node.previousSibling\n  if (previousSibling) {\n    const deepestChild = getDeepestNode(previousSibling)\n\n    if (deepestChild) {\n      return deepestChild\n    }\n    return previousSibling\n  }\n  if (node !== rootNode) {\n    const parentNode = node.parentNode\n    if (parentNode && parentNode !== rootNode) {\n      return parentNode\n    }\n  }\n  return null\n}\n\nconst createPreviousNodeIterator = (fromNode, rootNode) => {\n  let current = fromNode\n  const next = () => {\n    const previousNode = getPreviousNode(current, rootNode)\n    current = previousNode\n    return {\n      done: Boolean(previousNode) === false,\n      value: previousNode,\n    }\n  }\n  return {\n    next,\n  }\n}\n",
    "import { isFocusable } from \"src/dom/dom.util.js\"\nimport {\n  findAfter,\n  findBefore,\n  findFirstDescendant,\n  findLastDescendant,\n} from \"src/dom/dom.traversal.js\"\n\nexport const firstFocusableDescendantOrSelf = (element) => {\n  const firstFocusableDescendant = findFirstDescendant(element, isFocusable)\n  if (firstFocusableDescendant) return firstFocusableDescendant\n\n  if (isFocusable(element)) return element\n\n  return null\n}\n\nexport const trapFocusInside = (element) => {\n  if (element.nodeType === 3) {\n    console.warn(\"cannot trap focus inside a text node\")\n    return () => {}\n  }\n\n  const trappedElement = activeTraps.find((activeTrap) => activeTrap.element === element)\n  if (trappedElement) {\n    console.warn(\"focus already trapped inside this element\")\n    return () => {}\n  }\n\n  const isEventOutside = (event) => {\n    if (event.target === element) return false\n    if (element.contains(event.target)) return false\n    return true\n  }\n\n  const getFirstTabbable = () => findFirstDescendant(element, isDiscoverableWithKeyboard)\n\n  const getLastTabbable = () => findLastDescendant(element, isDiscoverableWithKeyboard)\n\n  const getPreviousTabbableOrLast = () => {\n    const previous = findBefore({\n      from: document.activeElement,\n      root: element,\n      predicate: isDiscoverableWithKeyboard,\n    })\n    return previous || getLastTabbable()\n  }\n\n  const getNextTabbableOrFirst = () => {\n    const next = findAfter({\n      from: document.activeElement,\n      root: element,\n      predicate: isDiscoverableWithKeyboard,\n    })\n    return next || getFirstTabbable()\n  }\n\n  const performTabEventNavigation = (event) => {\n    const activeElement = document.activeElement\n    const activeElementIsBody = activeElement === document.body\n\n    if (event.shiftKey) {\n      const elementToFocus = activeElementIsBody\n        ? getLastTabbable()\n        : getPreviousTabbableOrLast(activeElement)\n      if (elementToFocus) {\n        elementToFocus.focus()\n      }\n    } else {\n      const elementToFocus = activeElementIsBody\n        ? getFirstTabbable()\n        : getNextTabbableOrFirst(activeElement)\n      if (elementToFocus) {\n        elementToFocus.focus()\n      }\n    }\n  }\n\n  const lock = () => {\n    const onmousedown = (event) => {\n      if (isEventOutside(event)) {\n        event.preventDefault()\n        event.stopImmediatePropagation()\n      }\n    }\n\n    const onkeydown = (event) => {\n      if (isTabEvent(event)) {\n        event.preventDefault()\n        performTabEventNavigation(event)\n      }\n    }\n\n    document.addEventListener(\"mousedown\", onmousedown, { capture: true, passive: false })\n    document.addEventListener(\"keydown\", onkeydown, { capture: true, passive: false })\n\n    return () => {\n      document.removeEventListener(\"mousedown\", onmousedown, { capture: true, passive: false })\n      document.removeEventListener(\"keydown\", onkeydown, { capture: true, passive: false })\n    }\n  }\n\n  const deactivate = activate({ element, lock })\n\n  const untrap = () => {\n    deactivate()\n  }\n\n  return untrap\n}\n\nconst hasNegativeTabIndex = (element) => {\n  return (\n    element.hasAttribute &&\n    element.hasAttribute(\"tabIndex\") &&\n    Number(element.getAttribute(\"tabindex\")) < 0\n  )\n}\n\nconst isDiscoverableWithKeyboard = (element) => {\n  if (hasNegativeTabIndex(element)) {\n    return false\n  }\n  return isFocusable(element)\n}\n\nconst isTabEvent = (event) => event.key === \"Tab\" || event.keyCode === 9\n\nconst activeTraps = []\nconst activate = ({ lock }) => {\n  // unlock any trap currently activated\n  let previousTrap\n  if (activeTraps.length > 0) {\n    previousTrap = activeTraps[activeTraps.length - 1]\n    previousTrap.unlock()\n  }\n\n  // store trap methods to lock/unlock as traps are acivated/deactivated\n  const trap = { lock, unlock: lock() }\n  activeTraps.push(trap)\n\n  return () => {\n    if (activeTraps.length === 0) {\n      console.warn(\"cannot deactivate an already deactivated trap\")\n      return\n    }\n    const lastTrap = activeTraps[activeTraps.length - 1]\n    if (trap !== lastTrap) {\n      // TODO: investigate this and maybe remove this requirment\n      console.warn(\"you must deactivate trap in the same order they were activated\")\n      return\n    }\n    activeTraps.pop()\n    trap.unlock()\n    // if any,reactivate the previous trap\n    if (previousTrap) {\n      previousTrap.unlock = previousTrap.lock()\n    }\n  }\n}\n",
    "import { getStyleValue, isDocumentElement } from \"src/dom/dom.util.js\"\n\nexport const trapScrollInside = (element) => {\n  const elementsToScrollLock = []\n  let previous = element.previousSibling\n  while (previous) {\n    if (previous.nodeType === 1) {\n      if (isScrollable(previous)) {\n        elementsToScrollLock.push(previous)\n      }\n    }\n    previous = previous.previousSibling\n  }\n\n  const scrollableParents = getAllScrollableParent(element)\n  elementsToScrollLock.push(...scrollableParents)\n  const cleanUpArray = elementsToScrollLock.map((element) => {\n    const prev = element.style.overflow\n    element.style.overflow = \"hidden\"\n    return () => {\n      if (prev) {\n        element.style.overflow = prev\n      } else {\n        element.style.removeProperty(\"overflow\")\n      }\n    }\n  })\n\n  return () => {\n    cleanUpArray.forEach((cleanup) => {\n      cleanup()\n    })\n  }\n}\n\nconst getAllScrollableParent = (element) => {\n  const scrollableParents = []\n\n  const visitElement = (elementOrScrollableParent) => {\n    const scrollableParent = getScrollableParent(elementOrScrollableParent)\n    if (scrollableParent) {\n      scrollableParents.push(scrollableParent)\n      if (scrollableParent === document) {\n        return\n      }\n      visitElement(scrollableParent)\n    }\n  }\n  visitElement(element)\n\n  return scrollableParents\n}\n\nconst getScrollableParent = (arg) => {\n  if (typeof arg !== \"object\" || arg.nodeType !== 1) {\n    throw new TypeError(\"getScrollableParent first argument must be DOM node\")\n  }\n  const element = arg\n  if (element === document.documentElement) {\n    return null\n  }\n  const position = getStyleValue(element, \"position\")\n\n  if (position === \"fixed\") {\n    return getScrollingElement(element.ownerDocument)\n  }\n  return findScrollableParent(element) || getScrollingElement(element.ownerDocument)\n}\n\nconst getScrollingElement = (document) => {\n  if (\"scrollingElement\" in document) {\n    return document.scrollingElement\n  }\n\n  if (isCompliant(document)) {\n    return document.documentElement\n  }\n\n  const body = document.body\n  const isFrameset = body && !/body/i.test(body.tagName)\n  const possiblyScrollingElement = isFrameset ? getNextBodyElement(body) : body\n\n  // If `body` is itself scrollable, it is not the `scrollingElement`.\n  return possiblyScrollingElement && bodyIsScrollable(possiblyScrollingElement)\n    ? null\n    : possiblyScrollingElement\n}\n\nconst getNextBodyElement = (frameset) => {\n  // We use this function to be correct per spec in case `document.body` is\n  // a `frameset` but there exists a later `body`. Since `document.body` is\n  // a `frameset`, we know the root is an `html`, and there was no `body`\n  // before the `frameset`, so we just need to look at siblings after the\n  // `frameset`.\n  let current = frameset\n  while ((current = current.nextSibling)) {\n    if (current.nodeType === 1 && isBodyElement(current)) {\n      return current\n    }\n  }\n  return null\n}\n\nconst isBodyElement = (element) => element.ownerDocument.body === element\n\nconst bodyIsScrollable = (body) => {\n  // a body element is scrollable if body and html are scrollable and rendered\n  if (!isScrollable(body)) {\n    return false\n  }\n  if (isHidden(body)) {\n    return false\n  }\n\n  const documentElement = body.ownerDocument.documentElement\n  if (!isScrollable(documentElement)) {\n    return false\n  }\n  if (isHidden(documentElement)) {\n    return false\n  }\n\n  return true\n}\n\nconst isHidden = (element) => {\n  const display = getStyleValue(element, \"display\")\n  if (display === \"none\") {\n    return false\n  }\n\n  if (display === \"table-row\" || display === \"table-group\" || display === \"table-column\") {\n    return getStyleValue(element, \"visibility\") !== \"collapsed\"\n  }\n\n  return true\n}\n\nconst isCompliant = (document) => {\n  // Note: document.compatMode can be toggle at runtime by document.write\n  const isStandardsMode = /^CSS1/.test(document.compatMode)\n  if (isStandardsMode) {\n    return testScrollCompliance(document)\n  }\n  return false\n}\n\nconst testScrollCompliance = (document) => {\n  const iframe = document.createElement(\"iframe\")\n  iframe.style.height = \"1px\"\n  const parentNode = document.body || document.documentElement || document\n  parentNode.appendChild(iframe)\n  const iframeDocument = iframe.contentWindow.document\n  iframeDocument.write('<!DOCTYPE html><div style=\"height:9999em\">x</div>')\n  iframeDocument.close()\n  const scrollComplianceResult =\n    iframeDocument.documentElement.scrollHeight > iframeDocument.body.scrollHeight\n  iframe.parentNode.removeChild(iframe)\n  return scrollComplianceResult\n}\n\nconst isScrollable = (element) => {\n  // note: keep in mind that an element with overflow: 'hidden' is scrollable\n  // it can be scrolled using keyboard arrows or JavaScript properties such as scrollTop, scrollLeft\n  if (!verticalOverflowIsVisible(element)) {\n    return true\n  }\n\n  if (!horizontalOverflowIsVisible(element)) {\n    return true\n  }\n\n  return false\n}\n\nconst verticalOverflowIsVisible = (element) => {\n  const verticalOverflow = getStyleValue(element, \"overflow-x\")\n  if (verticalOverflow === \"visible\") {\n    return true\n  }\n\n  const overflow = getStyleValue(element, \"overflow\")\n  return overflow === \"visible\"\n}\n\nconst horizontalOverflowIsVisible = (element) => {\n  const horizontalOverflow = getStyleValue(element, \"overflow-y\")\n  if (horizontalOverflow === \"visible\") {\n    return true\n  }\n  const overflow = getStyleValue(element, \"overflow\")\n  return overflow === \"visible\"\n}\n\nconst findScrollableParent = (element) => {\n  if (element === document.documentElement) return null\n\n  const position = getStyleValue(element, \"position\")\n  let parent = element.parentNode\n  while (parent) {\n    if (isDocumentElement(parent)) {\n      return null\n    }\n    if (position === \"absolute\" && getStyleValue(parent, \"position\") === \"static\") {\n      parent = parent.parentNode\n      continue\n    }\n    if (isScrollable(parent)) {\n      return parent\n    }\n    parent = parent.parentNode\n  }\n  return null\n}\n",
    "/**\n\n--- click-no-effect-scenario ---\n\nBe careful if you ever create the following html structure:\n\n<div onClick={openDialog}>\n  Open dialog\n  <Dialog requestCloseOnClickOutside={true} requestClose={closeDialog} />\n</div>\n\nIn this context the onClick will happen on dialog backdrop which is\nInside the <div>. The closeDialog will be called but as click event bubbles\nit will also trigger onClick listener from the <div>.\nIn the end the click interaction both close and open the dialog in the same event loop.\n\n*/\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport { useBecomes } from \"src/hooks.js\"\nimport { Stylesheet } from \"src/generic/Stylesheet.jsx\"\nimport { firstFocusableDescendantOrSelf, trapFocusInside } from \"./focus-trap.js\"\nimport { trapScrollInside } from \"./scroll-trap.js\"\n\nconst dialogBaseCssUrl = new URL(\"/src/dialog/dialog.base.css\", import.meta.url)\n\nconst { useEffect } = React\n\n/**\nhttps://github.com/reactjs/react-modal\nhttps://github.com/reactjs/react-modal/blob/master/src/components/ModalPortal.js\nhttps://fr.reactjs.org/docs/portals.html\n*/\n\nexport const DialogBase = ({\n  container = document.body,\n  insertTop,\n  insertLeft,\n  insertRight,\n  insertBottom,\n  children,\n\n  isOpen,\n  requestCloseOnEscape = true,\n  requestCloseOnClickOutside = false,\n  // closeMethod can be \"visibility-hidden\", \"hidden-attribute\", \"dom-remove\"\n  // ideally we should return null when isOpen is false and the dialog never rendered\n  // (to avoid putting the dialog in display none while it might never be used)\n  // (but it's too early to know exactly what we want/need)\n  closeMethod = \"display-none\",\n\n  stealFocus = true,\n  restoreStolenFocus = true,\n  trapFocus = true,\n\n  onAfterOpen = () => {},\n  onRequestClose = () => {},\n  onFocusIn = () => {},\n  onFocusOut = () => {},\n  backdropProps = {},\n  ...rest\n}) => {\n  if (!container) return null\n  const [dialogRootNode, dialogRootNodeSetter] = React.useState(null)\n\n  const isInsideDocument = Boolean(dialogRootNode)\n  const becomesOpen = useBecomes((isOpenPrevious) => !isOpenPrevious && isOpen, [isOpen])\n\n  if (becomesOpen) {\n    onAfterOpen()\n  }\n\n  // onFocusIn, onFocusOut implementation\n  // https://github.com/facebook/react/issues/6410\n  useEffect(() => {\n    if (!isOpen || !isInsideDocument) return () => {}\n\n    let focusIsInsideDialog = hasOrContainsFocus(dialogRootNode)\n\n    const onDocumentBlur = (blurEvent) => {\n      // focus is leaving the document and it was inside dialog\n      if (!blurEvent.relatedTarget) {\n        if (focusIsInsideDialog) {\n          focusIsInsideDialog = false\n          onFocusOut(blurEvent)\n        }\n      }\n    }\n\n    const onDialogFocus = (focusEvent) => {\n      onFocusIn(focusEvent)\n      focusIsInsideDialog = true\n    }\n    const onDocumentFocus = (focusEvent) => {\n      if (hasOrContainsFocus(dialogRootNode)) {\n        focusIsInsideDialog = true\n      } else {\n        focusIsInsideDialog = false\n        onFocusOut(focusEvent)\n      }\n    }\n\n    dialogRootNode.addEventListener(\"focus\", onDialogFocus, true)\n    document.addEventListener(\"focus\", onDocumentFocus, true)\n    document.addEventListener(\"blur\", onDocumentBlur, true)\n    return () => {\n      dialogRootNode.removeEventListener(\"focus\", onDialogFocus, true)\n      document.removeEventListener(\"focus\", onDocumentFocus, true)\n      document.removeEventListener(\"blur\", onDocumentBlur, true)\n    }\n  }, [isOpen, isInsideDocument, onFocusIn, onFocusOut])\n\n  // trap scroll inside dialog\n  useEffect(() => {\n    if (!isOpen || !isInsideDocument) {\n      return () => {}\n    }\n    return trapScrollInside(dialogRootNode)\n  }, [isOpen, isInsideDocument])\n\n  // trap focus inside dialog\n  useEffect(() => {\n    if (!isOpen || !isInsideDocument || !trapFocus) return () => {}\n\n    return trapFocusInside(dialogRootNode)\n  }, [isOpen, isInsideDocument, trapFocus])\n\n  // steal focus to move it into dialog when it opens\n  useEffect(() => {\n    if (!isOpen || !isInsideDocument || !stealFocus) return () => {}\n\n    const nodeFocusedBeforeTransfer = document.activeElement\n    const firstFocusableElement = firstFocusableDescendantOrSelf(dialogRootNode)\n    if (firstFocusableElement) {\n      firstFocusableElement.focus({ preventScroll: true })\n    }\n    return () => {\n      if (firstFocusableElement) {\n        if (typeof restoreStolenFocus === \"function\") {\n          restoreStolenFocus(nodeFocusedBeforeTransfer)\n        } else if (restoreStolenFocus === true) {\n          nodeFocusedBeforeTransfer.focus({ preventScroll: true })\n        }\n      }\n    }\n  }, [isOpen, isInsideDocument, stealFocus])\n\n  // put aria-hidden on elements behind this dialog\n  useEffect(() => {\n    if (!isOpen || !dialogRootNode || !dialogRootNode.parentNode) return () => {}\n\n    const elementsToHide = []\n    /*\n    we hide previous and next siblings\n    because when dialog is opened everything around it should be considered\n    hidden (you cannot have several modal visible at the same time).\n\n    Let's keep in mind we are talking about a dialog in the accessibility terms.\n    It should focus trap, prevent interaction with the rest of the page\n    and consider the rest as hidden.\n    This dialog is not meant to be used for tooltip and so on.\n    */\n    const parentChildren = Array.from(dialogRootNode.parentNode.children)\n    parentChildren.forEach((child) => {\n      if (child !== dialogRootNode) {\n        elementsToHide.push(child)\n      }\n    })\n\n    elementsToHide.forEach((element) => {\n      element.setAttribute(\"aria-hidden\", \"true\")\n    })\n    return () => {\n      elementsToHide.forEach((element) => {\n        element.removeAttribute(\"aria-hidden\", \"true\")\n      })\n    }\n  }, [isOpen, dialogRootNode])\n\n  if (closeMethod === \"dom-remove\" && !isOpen) {\n    return null\n  }\n\n  return ReactDOM.createPortal(\n    <div\n      {...rest}\n      role=\"dialog\"\n      className={`dialog--root${rest.className ? ` ${rest.className}` : \"\"}`}\n      ref={(element) => {\n        dialogRootNodeSetter(element)\n        if (rest.ref) rest.ref(element)\n      }}\n      onKeyDown={(keydownEvent) => {\n        if (requestCloseOnEscape && keydownEvent.keyCode === ESC_KEY) {\n          onRequestClose(keydownEvent)\n        }\n        if (rest.onKeyDown) rest.onKeyDown(keydownEvent)\n      }}\n      tabIndex=\"-1\"\n      style={{\n        ...(closeMethod === \"display-none\" && !isOpen ? { display: \"none\" } : {}),\n        ...(closeMethod === \"visibility-hidden\" && !isOpen ? { visibility: \"hidden\" } : {}),\n      }}\n      hidden={closeMethod === \"hidden-attribute\" && !isOpen ? true : undefined}\n    >\n      <Stylesheet href={dialogBaseCssUrl} />\n      {isOpen ? (\n        <DialogBackDrop\n          {...backdropProps}\n          className=\"dialog--backdrop\"\n          // mousedown on backdrop -> transfer focus to dialog\n          onMouseDownActive={(mousedownEvent) => {\n            // prevent mousedown on backdrop from putting focus on document.body\n            mousedownEvent.preventDefault()\n            // instead foward focus to the dialog if not already inside\n            if (!hasOrContainsFocus(dialogRootNode)) {\n              const firstFocusableElement = firstFocusableDescendantOrSelf(dialogRootNode)\n              if (firstFocusableElement) {\n                firstFocusableElement.focus({ preventScroll: true })\n              }\n            }\n          }}\n          onClick={(clickEvent) => {\n            // I wonder if we should clickEvent.stopPropagation()\n            // because back drop is also there to shallow click interaction\n            // it would prevent the click event from bubbling and creates the potential\n            // --- click-no-effect-scenario --- described at the top of this file.\n            if (requestCloseOnClickOutside) {\n              onRequestClose(clickEvent)\n            }\n            if (backdropProps.onClick) backdropProps.onClick(clickEvent)\n          }}\n        />\n      ) : null}\n      <div className=\"dialog--document\">\n        <div className=\"dialog--insert-top\">{insertTop}</div>\n        <div className=\"dialog--main\">\n          <div className=\"dialog--insert-left\">{insertLeft}</div>\n          <div className=\"dialog--scrollable-content\">{children}</div>\n          <div className=\"dialog--insert-right\">{insertRight}</div>\n        </div>\n        <div className=\"dialog--insert-bottom\">{insertBottom}</div>\n      </div>\n    </div>,\n    container,\n  )\n}\n\nconst DialogBackDrop = ({ onMouseDownActive, ...props }) => {\n  const [backdropElement, setBackdropElement] = React.useState(null)\n  useEffect(() => {\n    if (!backdropElement) return () => {}\n\n    backdropElement.addEventListener(\"mousedown\", onMouseDownActive, { passive: false })\n    return () => {\n      backdropElement.removeEventListener(\"mousedown\", onMouseDownActive, { passive: false })\n    }\n  }, [backdropElement])\n\n  return (\n    <div\n      ref={(element) => {\n        setBackdropElement(element)\n        if (props.ref) props.ref(element)\n      }}\n      {...props}\n    ></div>\n  )\n}\n\nconst hasOrContainsFocus = (element) => {\n  const { activeElement } = document\n  return element === activeElement || element.contains(activeElement)\n}\n\nconst ESC_KEY = 27\n",
    "import React from \"react\"\n\nimport { useMainDomNode } from \"src/dom/dom.main.js\"\nimport { Stylesheet } from \"src/generic/Stylesheet.jsx\"\n\nimport { DialogBase } from \"./DialogBase.jsx\"\n\nconst dialogCssUrl = new URL(\"/src/dialog/dialog.css\", import.meta.url)\n\nexport const Dialog = (props) => {\n  return (\n    <>\n      <Stylesheet href={dialogCssUrl} />\n      <DialogBase container={useMainDomNode()} {...props} />\n    </>\n  )\n}\n\nexport const useDialogState = (initialValue = false) => {\n  const [dialogIsOpen, setDialogIsOpen] = React.useState(initialValue)\n  const openDialog = () => {\n    setDialogIsOpen(true)\n  }\n  const closeDialog = () => {\n    setDialogIsOpen(false)\n  }\n  return [dialogIsOpen, openDialog, closeDialog]\n}\n",
    "import React from \"react\"\n\nexport const StarRain = () => {\n  return (\n    <div className=\"star-rain-container\">\n      <div className=\"star\" id=\"star-01\">\n        <Star />\n      </div>\n      <div className=\"star\" id=\"star-02\">\n        <Star />\n      </div>\n      <div className=\"star\" id=\"star-03\">\n        <Star />\n      </div>\n      <div className=\"star\" id=\"star-04\">\n        <Star />\n      </div>\n      <div className=\"star\" id=\"star-05\">\n        <Star />\n      </div>\n      <div className=\"star\" id=\"star-06\">\n        <Star />\n      </div>\n    </div>\n  )\n}\n\nconst Star = () => (\n  <svg viewBox=\"0 0 217.791 210.633\">\n    <path\n      fill=\"#FFFFE6\"\n      d=\"M94.15,77.97c0,0-2-54,10-73.5s23,28.5,25.5,72.5c0,0,69.197,4.589,86.5,21c13.637,12.934-61.5,31-87,33.5\n\tc-2,14.5-1.831,60.464-16.5,75.5c-20,20.5-25.5-50.5-23-78c-19-1.5-81.5-3.5-89-17.5S52.15,85.97,94.15,77.97z\"\n    />\n  </svg>\n)\n",
    "import React from \"react\"\n\nexport const CloseIcon = () => (\n    <svg viewBox=\"0 0 320 512\" width=\"32\" heiht=\"32\">\n      <path fill=\"currentColor\" d=\"M207.6 256l107.72-107.72c6.23-6.23 6.23-16.34 0-22.58l-25.03-25.03c-6.23-6.23-16.34-6.23-22.58 0L160 208.4 52.28 100.68c-6.23-6.23-16.34-6.23-22.58 0L4.68 125.7c-6.23 6.23-6.23 16.34 0 22.58L112.4 256 4.68 363.72c-6.23 6.23-6.23 16.34 0 22.58l25.03 25.03c6.23 6.23 16.34 6.23 22.58 0L160 303.6l107.72 107.72c6.23 6.23 16.34 6.23 22.58 0l25.03-25.03c6.23-6.23 6.23-16.34 0-22.58L207.6 256z\">\n      </path>\n    </svg>\n  )",
    "import React from \"react\"\n\nimport { Dialog } from \"src/dialog/dialog.component.jsx\"\nimport { CloseIcon } from \"src/dialog/CloseIcon.jsx\"\n\nexport const DialogWood = ({ title, spacingClasses, children, ...props }) => {\n  return (\n    <Dialog\n      requestCloseOnClickOutside={true}\n      insertTop={\n        <>\n          <div className=\"dialog-border-top\"></div>\n          <div className=\"dialog-title\">\n            <div className=\"dialog-title-text\">{title}</div>\n            </div>\n          <div className=\"dialog-close\" onClick={props.onRequestClose}><CloseIcon/></div>\n        </>\n      }\n      insertBottom={<div className=\"dialog-border-bottom\"></div>}\n      insertLeft={<div className=\"dialog-border-left\"></div>}\n      insertRight={<div className=\"dialog-border-right\"></div>}\n      {...props}\n      className={`dialog-theme-wood ${spacingClasses || 'dialog-spacing-10 dialog-spacing-fluid dialog-spacing-top-fixed'} ${props.className}`}\n    >\n      {children}\n    </Dialog>\n  )\n}\n",
    "/* eslint-disable import/max-dependencies */\nimport React from \"react\"\n\nimport { Image } from \"src/generic/Image.jsx\"\n\nimport { DialogWood } from \"src/dialog/dialog.wood.jsx\"\nimport { symbolCoinUrl, symbolDiamondUrl } from \"src/symbols/symbols.js\"\n\nexport const RoundScoreRulesDialog = ({ dialogIsOpen, closeDialog }) => {\n  return (\n    <DialogWood\n      className=\"score-rules-dialog\"\n      isOpen={dialogIsOpen}\n      onRequestClose={closeDialog}\n      requestCloseOnClickOutside={true}\n      title=\"Score\"\n      spacingClasses=\"dialog-spacing-10 dialog-spacing-fixed\"\n    >\n      <>\n        <div className=\"dialog-box\">\n          <div className=\"dialog-label\">Combinaisons de dés</div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"column-title\">Symbols identiques</div>\n              <span className=\"symbol-number\">Combo 3</span>\n              <span className=\"symbol-number\">Combo 4</span>\n              <span className=\"symbol-number\">Combo 5</span>\n              <span className=\"symbol-number\">Combo 6</span>\n              <span className=\"symbol-number\">Combo 7</span>\n              <span className=\"symbol-number\">Combo 8</span>\n            </div>\n            <div className=\"column\">\n              <div className=\"column-title\">Points</div>\n              <span className=\"points\">100</span>\n              <span className=\"points\">200</span>\n              <span className=\"points\">500</span>\n              <span className=\"points\">1000</span>\n              <span className=\"points\">2000</span>\n              <span className=\"points\">4000</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"dialog-box\">\n          <div className=\"dialog-label\">Dés spéciaux</div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"column-title\">Symbol</div>\n              <Image src={symbolCoinUrl} />\n              <Image src={symbolDiamondUrl} />\n            </div>\n            <div className=\"column\">\n              <div className=\"column-title\">Points</div>\n              <span className=\"points\">100</span>\n              <span className=\"points\">100</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"dialog-box last\">\n          <div className=\"dialog-label\">Bonus coffre parfait</div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"column-title\">Dés utilisés</div>\n              <span className=\"symbol-number\">8</span>\n            </div>\n            <div className=\"column\">\n              <div className=\"column-title\">Points</div>\n              <span className=\"points\">500</span>\n            </div>\n          </div>\n        </div>\n      </>\n    </DialogWood>\n  )\n}\n",
    "import { getDocumentScroll, getStyleValue } from \"src/dom/dom.util.js\"\n\nexport const rotatePoint = (origin, point, degrees) => {\n  const radians = degreesToRadians(degrees)\n  const cosinus = Math.cos(radians)\n  const sinus = Math.sin(radians)\n  const run = point.x - origin.x\n  const rise = point.y - origin.y\n\n  return {\n    x: Math.round(cosinus * run + sinus * rise + origin.x),\n    y: Math.round(cosinus * rise - sinus * run + origin.y),\n  }\n}\n\nexport const getDistanceBetweenTwoPoints = (firstPoint, secondPoint) => {\n  const horizontalDiff = firstPoint.x - secondPoint.x\n  const verticalDiff = firstPoint.y - secondPoint.y\n  return Math.sqrt(horizontalDiff * horizontalDiff + verticalDiff * verticalDiff)\n}\n\nconst getRectangleCenterPoint = ([topLeft, topRight, bottomRight, bottomLeft]) => {\n  return {\n    x: (topLeft.x + topRight.x + bottomRight.x + bottomLeft.x) / 4,\n    y: (topLeft.y + topRight.y + bottomRight.y + bottomLeft.y) / 4,\n  }\n}\n\nexport const rotateRectangle = (points, degree, origin = getRectangleCenterPoint(points)) => {\n  return points.map((point) => rotatePoint(origin, point, degree))\n}\n\nconst degreesToRadians = (degrees) => (degrees * Math.PI) / 180\n\nconst radiansToDegree = (radians) => Math.round(radians * (180 / Math.PI))\n\n// https://github.com/davidfig/intersects/blob/master/lineToLine.js\nexport const lineCollidesWithLine = (\n  [firstLineStartPoint, firstLineEndPoint],\n  [secondLineStartPoint, secondLineEndPoint],\n) => {\n  let unknownA =\n    (secondLineEndPoint.x - secondLineStartPoint.x) *\n      (firstLineStartPoint.y - secondLineStartPoint.y) -\n    (secondLineEndPoint.y - secondLineStartPoint.y) *\n      (firstLineStartPoint.x - secondLineStartPoint.x)\n  let unknownB =\n    (firstLineEndPoint.x - firstLineStartPoint.x) *\n      (firstLineStartPoint.y - secondLineStartPoint.y) -\n    (firstLineEndPoint.y - firstLineStartPoint.y) * (firstLineStartPoint.x - secondLineStartPoint.x)\n  const denominator =\n    (secondLineEndPoint.y - secondLineStartPoint.y) *\n      (firstLineEndPoint.x - firstLineStartPoint.x) -\n    (secondLineEndPoint.x - secondLineStartPoint.x) * (firstLineEndPoint.y - firstLineStartPoint.y)\n\n  // Test if Coincident\n  // If the denominator and numerator for the ua and ub are 0\n  // then the two lines are coincident.\n  if (unknownA === 0 && unknownB === 0 && denominator === 0) {\n    return false\n  }\n\n  // Test if Parallel\n  // If the denominator for the equations for ua and ub is 0\n  // then the two lines are parallel.\n  if (denominator === 0) {\n    return false\n  }\n\n  // test if line segments are colliding\n  unknownA /= denominator\n  unknownB /= denominator\n  const isIntersecting = unknownA >= 0 && unknownA <= 1 && unknownB >= 0 && unknownB <= 1\n\n  return isIntersecting\n}\n\nexport const rotatedRectangleCollidesWithRotatedRectangle = (\n  firstRotatedRectangle,\n  secondRotatedRectangle,\n) =>\n  someRectangleSideLine(firstRotatedRectangle, (firstRotatedRectangleSideLine) =>\n    lineCollidesWithRectangle(firstRotatedRectangleSideLine, secondRotatedRectangle),\n  )\n\n// https://riptutorial.com/html5-canvas/example/17710/are-line-segment-and-rectangle-colliding-\nexport const lineCollidesWithRectangle = (line, rectangle) => {\n  const lineIntersects = someRectangleSideLine(rectangle, (rectangleSideLine) =>\n    lineCollidesWithLine(line, rectangleSideLine),\n  )\n  if (lineIntersects) return true\n  // TODO: here we should check if line is contained inside the rectangle because in that case\n  // it's not intersecting but it's colliding\n  return false\n}\n\nconst someRectangleSideLine = ([firstPoint, secondPoint, thirdPoint, fourthPoint], predicate) => {\n  const rectangleFirstLine = [firstPoint, secondPoint]\n  if (predicate(rectangleFirstLine)) return true\n  const rectangleSecondLine = [secondPoint, thirdPoint]\n  if (predicate(rectangleSecondLine)) return true\n  const rectangleThirdLine = [thirdPoint, fourthPoint]\n  if (predicate(rectangleThirdLine)) return true\n  const rectangleFourthLine = [fourthPoint, firstPoint]\n  if (predicate(rectangleFourthLine)) return true\n  return false\n}\n\n/**\nA matrix is an array composed by\n[\n  scale x,\n  skew y,\n  skew x,\n  scale y,\n  translate x,\n  translate y,\n]\n*/\n\n// https://stackoverflow.com/questions/14687318/how-to-find-new-coordinates-of-rectangle-after-rotation\nexport const getDomNodePoints = (domNode) => {\n  const transformMatrix = getStyleValue(domNode, \"transform\")\n  const transformOrigin = getStyleValue(domNode, \"transform-origin\")\n\n  domNode.style.transform = \"matrix(1, 0, 0, 1, 0, 0)\"\n  domNode.style.transformOrigin = \"0 0\"\n  const boundlingClientRectangle = domNode.getBoundingClientRect()\n  domNode.style.transform = transformMatrix\n  domNode.style.transformOrigin = transformOrigin\n\n  const documentScroll = getDocumentScroll(domNode)\n  const left = boundlingClientRectangle.left + documentScroll.x\n  const top = boundlingClientRectangle.top + documentScroll.y\n  const right = left + boundlingClientRectangle.width\n  const bottom = top + boundlingClientRectangle.height\n\n  const topLeftPoint = { x: left, y: top }\n  const topRightPoint = { x: right, y: top }\n  const bottomLeftPoint = { x: right, y: bottom }\n  const bottomRightPoint = { x: left, y: bottom }\n  const points = [topLeftPoint, topRightPoint, bottomLeftPoint, bottomRightPoint]\n\n  if (transformMatrix) {\n    const matrix = transformMatrix.slice(\"matrix(\".length, -1).split(\", \").map(parseFloat)\n\n    let rotateOrigin\n    // this code assume transform is only about rotation, no scaling, no translation\n    // it does not work if there is a transform origin for some reason\n    if (transformOrigin) {\n      const origin = transformOrigin.split(\" \").map(parseFloat)\n      rotateOrigin = {\n        x: left + origin[0],\n        y: top + origin[1],\n      }\n    } else {\n      // center of the element by default\n      rotateOrigin = {\n        x: left + (right - left) / 2,\n        y: top + (bottom - top) / 2,\n      }\n    }\n\n    const rotationInDegrees = matrixToRotationInDegrees(matrix)\n    return rotateRectangle(points, rotationInDegrees, rotateOrigin)\n  }\n\n  return points\n}\n\nconst matrixToRotationInDegrees = ([a, b]) => radiansToDegree(Math.atan2(b, a))\n\n// https://github.com/leeoniya/transformation-matrix-js/blob/3595d2b36aa1b0f593bdffdb786b9e832c50c3b0/src/matrix.js#L234\nexport const invertMatrix = ([a, b, c, d, e, f]) => {\n  const dt = a * d - b * c\n  return [d / dt, -b / dt, -c / dt, a / dt, (c * f - d * e) / dt, -(a * f - b * e) / dt]\n}\n\nexport const transformPoint = ({ x, y }, [a, b, c, d, e, f]) => {\n  return {\n    x: x * a + y * c + e,\n    y: x * b + y * d + f,\n  }\n}\n\nexport const transformPoints = (points, matrix) => {\n  return points.map((point) => transformPoint(point, matrix))\n}\n",
    "// https://github.com/infusion/Rectangles.js/blob/master/rectangles.js\n\nimport { getDistanceBetweenTwoPoints } from \"./geometry.js\"\n\nexport const rectangleCollidesWithRectangle = (firstRectangle, secondRectangle) => {\n  // first left of second\n  if (firstRectangle.right <= secondRectangle.left) return false\n  // first right of second\n  if (firstRectangle.left >= secondRectangle.right) return false\n  // first above second\n  if (firstRectangle.bottom <= secondRectangle.top) return false\n  // first below second\n  if (firstRectangle.top >= secondRectangle.bottom) return false\n\n  return true\n}\n\nexport const rectangleInsideOf = (rectangle, parentRectangle) => {\n  let left = rectangle.left\n  let right = rectangle.right\n  const width = right - left\n  if (left < parentRectangle.left) {\n    left = parentRectangle.left\n    right = left + width\n  } else if (right > parentRectangle.right) {\n    left = parentRectangle.right - width\n    right = left + width\n  }\n\n  let top = rectangle.top\n  let bottom = rectangle.bottom\n  const height = bottom - top\n  if (top < parentRectangle.top) {\n    top = parentRectangle.top\n    bottom = top + height\n  } else if (bottom > parentRectangle.bottom) {\n    top = parentRectangle.bottom - height\n    bottom = top + height\n  }\n\n  return {\n    left,\n    right,\n    top,\n    bottom,\n  }\n}\n\nexport const rectangleRelativeTo = (rectangle, parentRectangle) => {\n  const left = rectangle.left - parentRectangle.left\n  const width = rectangle.right - rectangle.left\n  const right = left + width\n\n  const top = rectangle.top - parentRectangle.top\n  const height = rectangle.bottom - rectangle.top\n  const bottom = top + height\n\n  return {\n    left,\n    right,\n    top,\n    bottom,\n  }\n}\n\nexport const findRectangleCloserToRectangle = (rectangleCandidates, rectangle) => {\n  let smallestDistance = getDistanceBetweenRectangles(rectangle, rectangleCandidates[0])\n  return rectangleCandidates.reduce((prev, rectangleCandidate) => {\n    const distance = getDistanceBetweenRectangles(rectangle, rectangleCandidate)\n    if (distance < smallestDistance) {\n      smallestDistance = distance\n      return rectangleCandidate\n    }\n    return prev\n  })\n}\n\nconst getRectangleArea = ({ left, right, top, bottom }) => {\n  const width = right - left\n  const height = bottom - top\n  return width * height\n}\n\nexport const getRectangleCenterPoint = ({ left, right, top, bottom }) => {\n  return {\n    x: left + (right - left) / 2,\n    y: top + (bottom - top) / 2,\n  }\n}\n\nconst getDistanceBetweenRectangles = (firstRectangle, secondRectangle) => {\n  const firstRectangleCenterPoint = getRectangleCenterPoint(firstRectangle)\n  const secondRectangleCenterPoint = getRectangleCenterPoint(secondRectangle)\n  return getDistanceBetweenTwoPoints(firstRectangleCenterPoint, secondRectangleCenterPoint)\n}\n\nexport const getRectangleIntersectionRatio = (firstRectangle, secondRectangle) => {\n  const firstRectangleArea = getRectangleArea(firstRectangle)\n  const overlapArea = getRectangleArea(rectangleOverlapping(firstRectangle, secondRectangle))\n  return firstRectangleArea / overlapArea\n}\n\nexport const rectangleOverlapping = ({ left, right, top, bottom }, intersectingRectangle) => {\n  const overlapRectangle = {\n    left: left < intersectingRectangle.left ? intersectingRectangle.left : left,\n    right: right < intersectingRectangle.right ? right : intersectingRectangle.right,\n    top: top < intersectingRectangle.top ? intersectingRectangle.top : top,\n    bottom: bottom < intersectingRectangle.bottom ? bottom : intersectingRectangle.bottom,\n  }\n  return overlapRectangle\n}\n",
    "import { getDocumentScroll } from \"./dom.util.js\"\nimport {\n  rectangleInsideOf,\n  rectangleRelativeTo,\n  rectangleCollidesWithRectangle,\n  findRectangleCloserToRectangle,\n} from \"src/helper/rectangle.js\"\n\nexport const getDomNodeRectangle = (domNode) => {\n  const domNodeRect = domNode.getBoundingClientRect()\n  const documentScroll = getDocumentScroll(domNode)\n  const left = domNodeRect.left + documentScroll.x\n  const top = domNodeRect.top + documentScroll.y\n  const right = left + domNodeRect.width\n  const bottom = top + domNodeRect.height\n\n  return {\n    left: Math.floor(left),\n    top: Math.floor(top),\n    right: Math.floor(right),\n    bottom: Math.floor(bottom),\n  }\n}\n\nexport const rectangleToRectangleInsideDomNode = (rectangle, domNode) => {\n  const domNodeRectangle = getDomNodeRectangle(domNode)\n  const rectangleInsideDomNode = rectangleInsideOf(rectangle, domNodeRectangle)\n  return rectangleInsideDomNode\n}\n\nexport const rectangleRelativeToDomNode = (rectangle, domNode) => {\n  const domNodeRectangle = getDomNodeRectangle(domNode)\n  const rectangleInsideDomNode = rectangleInsideOf(rectangle, domNodeRectangle)\n  const rectangleInsideAndRelative = rectangleRelativeTo(rectangleInsideDomNode, domNodeRectangle)\n  return rectangleInsideAndRelative\n}\n\nexport const rectangleAbsoluteToDomNode = (rectangle, domNode) => {\n  const domNodeRectangle = getDomNodeRectangle(domNode)\n  const rectangleWidth = rectangle.right - rectangle.left\n  const rectangleHeight = rectangle.bottom - rectangle.top\n  const rectangleAbsolute = {\n    left: domNodeRectangle.left + rectangle.left,\n    top: domNodeRectangle.top + rectangle.top,\n    right: domNodeRectangle.left + rectangle.left + rectangleWidth,\n    bottom: domNodeRectangle.top + rectangle.top + rectangleHeight,\n  }\n  return rectangleAbsolute\n}\n\nexport const domNodeCollidesWithRectangle = (domNode, rectangle) => {\n  const domNodeRectangle = getDomNodeRectangle(domNode)\n  return rectangleCollidesWithRectangle(domNodeRectangle, rectangle)\n}\n\nexport const findDomNodeClosestToRectangle = (domNodeCandidates, rectangle) => {\n  const rectangleCandidates = domNodeCandidates.map((domNodeCandidate) =>\n    getDomNodeRectangle(domNodeCandidate),\n  )\n  const closestRectangle = findRectangleCloserToRectangle(rectangleCandidates, rectangle)\n  return domNodeCandidates[rectangleCandidates.indexOf(closestRectangle)]\n}\n\nexport const printPointInDocument = (\n  { x, y },\n  { color = \"yellow\", autoRemove = true, autoRemoveAfter = 2000 } = {},\n) => {\n  const div = document.createElement(\"div\")\n  div.style.position = \"absolute\"\n  div.style.zIndex = \"1000\"\n  div.style.left = `${x}px`\n  div.style.top = `${y}px`\n  div.style.width = \"5px\"\n  div.style.height = \"5px\"\n  div.style.background = color\n  div.style.border = \"1px solid red\"\n  document.body.appendChild(div)\n\n  const remove = () => {\n    document.body.removeChild(div)\n  }\n\n  let autoRemoveTimeout\n  if (autoRemove) {\n    autoRemoveTimeout = setTimeout(remove, autoRemoveAfter)\n  }\n\n  return () => {\n    remove()\n    clearTimeout(autoRemoveTimeout)\n  }\n}\n",
    "import React from \"react\"\nimport { getDomNodeRectangle } from \"src/dom/dom.position.js\"\nimport { getRectangleCenterPoint } from \"src/helper/rectangle.js\"\nimport { symbolToImageUrl } from \"src/symbols/symbols.js\"\n\nexport const RoundScoreParticle = ({\n  totalScoreDomNodeRef,\n  scoreParticle,\n  animationDelayGetter = () => 0,\n}) => {\n  if (scoreParticle.type === \"bonus\") {\n    return (\n      <ScoreParticleTreasure\n        totalScoreDomNodeRef={totalScoreDomNodeRef}\n        scoreParticle={scoreParticle}\n        animationDelayGetter={animationDelayGetter}\n      ></ScoreParticleTreasure>\n    )\n  }\n\n  if (scoreParticle.type === \"combo\") {\n    return (\n      <ScoreParticleCombo\n        scoreParticle={scoreParticle}\n        animationDelayGetter={animationDelayGetter}\n      ></ScoreParticleCombo>\n    )\n  }\n\n  return (\n    <ScoreParticlePerfect\n      scoreParticle={scoreParticle}\n      animationDelayGetter={animationDelayGetter}\n    ></ScoreParticlePerfect>\n  )\n}\n\nconst ScoreParticleTreasure = ({\n  totalScoreDomNodeRef,\n  scoreParticle,\n  animationDuration = 800,\n  animationDelayGetter,\n}) => {\n  const symbolUrl = symbolToImageUrl(scoreParticle.symbol)\n  const particleDomNodeRef = React.useRef()\n\n  React.useEffect(() => {\n    const particleDomNode = particleDomNodeRef.current\n    const totalScoreDomNode = totalScoreDomNodeRef.current\n    const particlePosition = domNodeToCenterPoint(\n      document.querySelector(`[data-chest-slot=\"${scoreParticle.chestSlot}\"]`),\n    )\n    return animateScoreParticleMoveToTotalScore({\n      particleDomNode,\n      totalScoreDomNode,\n      x: particlePosition.x,\n      y: particlePosition.y,\n      duration: animationDuration,\n      delay: animationDelayGetter(),\n      onfinish: scoreParticle.onfinish,\n      oncancel: scoreParticle.oncancel,\n    })\n  }, [])\n\n  return (\n    <svg ref={particleDomNodeRef} width=\"32\" height=\"32\" className=\"score-particle--symbol\">\n      <image href={symbolUrl} width=\"32\" height=\"32\" />,\n    </svg>\n  )\n}\n\nconst ScoreParticleCombo = ({ scoreParticle, animationDuration = 800, animationDelayGetter }) => {\n  const [svgDomNodeRef, svgChildDomNodeRef] = useSvgFluidSizeEffect()\n\n  React.useEffect(() => {\n    const svgDomNode = svgDomNodeRef.current\n    const particlePosition = domNodeToCenterPoint(document.querySelector(`.chest .box`))\n    return animateScoreParticlePopOnPlace({\n      particleDomNode: svgDomNode,\n      x: particlePosition.x,\n      y: particlePosition.y,\n      duration: animationDuration,\n      delay: animationDelayGetter(),\n      onfinish: scoreParticle.onfinish,\n      oncancel: scoreParticle.oncancel,\n    })\n  }, [])\n\n  return (\n    <svg ref={svgDomNodeRef} className=\"score-particle--perfect\">\n      <g ref={svgChildDomNodeRef}>\n        <text x=\"0\" y=\"0\" dominantBaseline=\"text-before-edge\">\n          Combo {scoreParticle.symbolCount}\n        </text>\n      </g>\n    </svg>\n  )\n}\n\nconst ScoreParticlePerfect = ({ scoreParticle, animationDuration = 800, animationDelayGetter }) => {\n  const [svgDomNodeRef, svgChildDomNodeRef] = useSvgFluidSizeEffect()\n\n  React.useEffect(() => {\n    const svgDomNode = svgDomNodeRef.current\n    const particlePosition = domNodeToCenterPoint(document.querySelector(`.chest .box`))\n    return animateScoreParticlePopOnPlace({\n      particleDomNode: svgDomNode,\n      x: particlePosition.x,\n      y: particlePosition.y,\n      duration: animationDuration,\n      delay: animationDelayGetter(),\n      onfinish: scoreParticle.onfinish,\n      oncancel: scoreParticle.oncancel,\n    })\n  }, [])\n\n  return (\n    <svg ref={svgDomNodeRef} className=\"score-particle--combo\">\n      <g ref={svgChildDomNodeRef}>\n        <text x=\"0\" y=\"0\" dominantBaseline=\"text-before-edge\">\n          Coffre parfait\n        </text>\n      </g>\n    </svg>\n  )\n}\n\nconst animateScoreParticleMoveToTotalScore = ({\n  particleDomNode,\n  totalScoreDomNode,\n  x,\n  y,\n  duration,\n  delay,\n  onfinish = () => {},\n  oncancel = () => {},\n}) => {\n  const particleDomNodeRectangle = getDomNodeRectangle(particleDomNode)\n  const totalScoreDomNodeRectangle = getDomNodeRectangle(totalScoreDomNode)\n\n  const particleWidth = particleDomNodeRectangle.right - particleDomNodeRectangle.left\n  const particleHeight = particleDomNodeRectangle.bottom - particleDomNodeRectangle.top\n  const startX = x - particleWidth / 2\n  const startY = y - particleHeight / 2\n  const intermediateX = startX\n  const intermediateY = startY - particleHeight * 1.1\n  const endX = totalScoreDomNodeRectangle.left\n  const endY = totalScoreDomNodeRectangle.top\n\n  particleDomNode.style.left = `${startX}px`\n  particleDomNode.style.top = `${startY}px`\n\n  const animation = particleDomNode.animate(\n    [\n      {\n        opacity: 0,\n        visibility: \"visible\",\n        transform: \"translate(0px, 0px)\",\n      },\n      {\n        offset: 0.1,\n        opacity: 1,\n      },\n      {\n        offset: 0.6,\n        opacity: 1,\n        transform: `translate(${intermediateX - startX}px, ${intermediateY - startY}px)`,\n      },\n      {\n        transform: `translate(${endX - startX}px, ${endY - startY}px)`,\n      },\n    ],\n    {\n      duration,\n      delay,\n      fill: \"forwards\",\n    },\n  )\n  animation.onfinish = () => {\n    onfinish()\n  }\n\n  return () => {\n    oncancel()\n    animation.cancel()\n  }\n}\n\nconst animateScoreParticlePopOnPlace = ({\n  particleDomNode,\n  x,\n  y,\n  duration,\n  delay,\n  onfinish = () => {},\n  oncancel = () => {},\n}) => {\n  const particleDomNodeRectangle = getDomNodeRectangle(particleDomNode)\n\n  const particleWidth = particleDomNodeRectangle.right - particleDomNodeRectangle.left\n  const particleHeight = particleDomNodeRectangle.bottom - particleDomNodeRectangle.top\n  const startX = x - particleWidth / 2\n  const startY = y - particleHeight / 2\n\n  particleDomNode.style.left = `${startX}px`\n  particleDomNode.style.top = `${startY}px`\n\n  const animation = particleDomNode.animate(\n    [\n      {\n        opacity: 0,\n        visibility: \"visible\",\n        transform: \"translate(0px, 0px)\",\n      },\n      {\n        offset: 0.1,\n        opacity: 1,\n      },\n      {\n        offset: 0.4,\n        opacity: 1,\n        transform: `scale(1.2)`,\n      },\n      {\n        // transform: `scale(0)`,\n      },\n    ],\n    {\n      duration,\n      delay,\n      fill: \"forwards\",\n    },\n  )\n  animation.onfinish = () => {\n    onfinish()\n  }\n\n  return () => {\n    oncancel()\n    animation.cancel()\n  }\n}\n\nconst useSvgFluidSizeEffect = () => {\n  const svgDomNodeRef = React.useRef()\n  const svgChildDomNodeRef = React.useRef()\n  React.useLayoutEffect(() => {\n    const svgDomNode = svgDomNodeRef.current\n    const svgChildDomNode = svgChildDomNodeRef.current\n    const svgChildDomNodeBox = svgChildDomNode.getBBox()\n\n    svgDomNode.setAttribute(\"width\", Math.ceil(svgChildDomNodeBox.width))\n    svgDomNode.setAttribute(\"height\", Math.ceil(svgChildDomNodeBox.height))\n  }, [])\n  return [svgDomNodeRef, svgChildDomNodeRef]\n}\n\nconst domNodeToCenterPoint = (domNode) => {\n  const domNodeRectangle = getDomNodeRectangle(domNode)\n  const centerPoint = getRectangleCenterPoint(domNodeRectangle)\n  return centerPoint\n}\n",
    "/* eslint-disable import/max-dependencies */\nimport React from \"react\"\nimport { useUpdateEffect } from \"src/hooks.js\"\nimport { useChestSlots, useDices, useCurrentCardId } from \"src/main.store.js\"\nimport { chestSlotContentToSymbol } from \"src/chest/chest.util.js\"\nimport { cardIdToCard, isAnimalsCard } from \"src/cards/cards.js\"\nimport {\n  symbolIsCoin,\n  symbolIsDiamond,\n  symbolIsMonkey,\n  symbolIsParrot,\n  SYMBOLS,\n  SYMBOL_COIN,\n  SYMBOL_DIAMOND,\n} from \"src/symbols/symbols.js\"\nimport { getScoreAndPerfectBonus } from \"src/round/computeRoundScore.js\"\nimport { useSwordChallengeOnGoing } from \"src/round/round.selectors.js\"\n\nexport const useRoundScoreParticleEffects = ({ addScoreParticle }) => {\n  useCoinEffect({ addScoreParticle })\n  useDiamondEffect({ addScoreParticle })\n  useComboEffect({ addScoreParticle })\n  usePerfectEffect({ addScoreParticle })\n}\n\nconst useCoinEffect = ({ addScoreParticle }) => {\n  const chestSlots = useChestSlots()\n  const dices = useDices()\n  const effectSuspended = useSwordChallengeOnGoing()\n\n  Object.keys(chestSlots).forEach((chestSlot) => {\n    const chestSlotContent = chestSlots[chestSlot]\n    const chestSlotSymbol = chestSlotContentToSymbol(chestSlotContent, dices)\n    const chestSlotContentIsCoin =\n      chestSlotSymbol && symbolIsCoin(chestSlotSymbol)\n\n    useUpdateEffect(() => {\n      if (effectSuspended) return undefined\n\n      if (!chestSlotContentIsCoin) return undefined\n\n      return addScoreParticle({\n        id: `chest-slot-${chestSlot}-coin`,\n        type: \"bonus\",\n        value: 100,\n        symbol: SYMBOL_COIN,\n        chestSlot,\n      })\n    }, [effectSuspended, chestSlotContentIsCoin])\n  })\n}\n\nconst useDiamondEffect = ({ addScoreParticle }) => {\n  const chestSlots = useChestSlots()\n  const dices = useDices()\n  const effectSuspended = useSwordChallengeOnGoing()\n\n  Object.keys(chestSlots).forEach((chestSlot) => {\n    const chestSlotContent = chestSlots[chestSlot]\n    const chestSlotSymbol = chestSlotContentToSymbol(chestSlotContent, dices)\n    const chestSlotContentIsDiamond =\n      chestSlotSymbol && symbolIsDiamond(chestSlotSymbol)\n\n    useUpdateEffect(() => {\n      if (effectSuspended) return undefined\n\n      if (!chestSlotContentIsDiamond) return undefined\n\n      return addScoreParticle({\n        id: `chest-slot-${chestSlot}-diamond`,\n        type: \"bonus\",\n        value: 100,\n        symbol: SYMBOL_DIAMOND,\n        chestSlot,\n      })\n    }, [effectSuspended, chestSlotContentIsDiamond])\n  })\n}\n\nconst usePerfectEffect = ({ addScoreParticle }) => {\n  const chestSlots = useChestSlots()\n  const dices = useDices()\n  const effectSuspended = useSwordChallengeOnGoing()\n  const perfect = React.useMemo(() => {\n    const symbols = []\n    Object.keys(chestSlots).forEach((chestSlot) => {\n      const chestSlotContent = chestSlots[chestSlot]\n      if (!chestSlotContent) {\n        return\n      }\n\n      const chestSlotHasDice = chestSlotContent.type === \"dice\"\n      if (!chestSlotHasDice) {\n        return\n      }\n\n      symbols.push(chestSlotContentToSymbol(chestSlotContent, dices))\n    })\n    const { perfectBonus } = getScoreAndPerfectBonus(symbols)\n    return Boolean(perfectBonus)\n  }, [chestSlots, dices])\n\n  useUpdateEffect(() => {\n    if (effectSuspended) return undefined\n\n    if (!perfect) return undefined\n\n    return addScoreParticle({\n      id: \"perfect\",\n      type: \"perfect\",\n      value: 500,\n    })\n  }, [effectSuspended, perfect])\n}\n\n// on voudrait aussi déclencher une animation\n// sur les chest slots faisant partie de la combo\n\nconst useComboEffect = ({ addScoreParticle }) => {\n  const chestSlots = useChestSlots()\n  const dices = useDices()\n  const currentCardId = useCurrentCardId()\n  const currentCard = cardIdToCard(currentCardId)\n  const effectSuspended = useSwordChallengeOnGoing()\n\n  SYMBOLS.forEach((symbol) => {\n    const chestSlotsWithThatSymbol = []\n    Object.keys(chestSlots).forEach((chestSlot) => {\n      const chestSlotContent = chestSlots[chestSlot]\n      const chestSlotSymbol = chestSlotContentToSymbol(chestSlotContent, dices)\n\n      if (!chestSlotSymbol) {\n        return\n      }\n\n      if (compareSymbols(chestSlotSymbol, symbol, currentCard)) {\n        chestSlotsWithThatSymbol.push(chestSlot)\n      }\n    })\n    const symbolCount = chestSlotsWithThatSymbol.length\n    const comboScore = COMBO_SCORES[symbolCount] || 0\n    const comboScorePreviousRef = React.useRef(comboScore)\n    // si la combo vient se se produire -> animation\n    // si la combo part -> on annule l'ancienne\n    // si la combo increases -> annule l'ancienne + joue la nouvelle\n    // si la combo decrease -> on annule juste l'ancienne\n    // attention avec la carte animals on a 2 fois la combo singe et perroquet\n    // donc il ne faudra en faire que une\n    const animationRef = React.useRef(() => {})\n\n    useUpdateEffect(() => {\n      const comboScorePrevious = comboScorePreviousRef.current\n      // const comboFound = Boolean(!comboScorePrevious && comboScore)\n      const comboIncreased = Boolean(\n        comboScorePrevious && comboScore && comboScorePrevious < comboScore,\n      )\n      const comboDecreased = Boolean(\n        comboScorePrevious && comboScore && comboScorePrevious > comboScore,\n      )\n      // const comboLost = Boolean(comboScorePrevious && !comboScore)\n      comboScorePreviousRef.current = comboScore\n\n      // ne tiens pas compte des parrot lorsqu'ils sont transformé\n      // en singe par la carte animals\n      if (isAnimalsCard(currentCard) && symbolIsParrot(symbol)) return undefined\n\n      if (effectSuspended) return undefined\n\n      if (!comboScore) return undefined\n\n      if (comboDecreased) {\n        animationRef.current()\n        return undefined\n      }\n\n      if (comboIncreased) {\n        animationRef.current()\n      }\n\n      const id = `${symbolCount}-${symbol}-combo`\n      const value = comboScore - comboScorePrevious\n      const cleanupScoreParticle = addScoreParticle({\n        id,\n        type: \"combo\",\n        value,\n        symbol,\n        symbolCount,\n      })\n      animationRef.current = cleanupScoreParticle\n\n      const chestSlotAnimationCleanups = chestSlotsWithThatSymbol.map(\n        (chestSlotWithThatSymbol) => {\n          const chestSlotDomNodeSymbol =\n            document.querySelector(\n              `[data-chest-slot=\"${chestSlotWithThatSymbol}\"] image`,\n            ) ||\n            // symbol coming from coin or diamond card have a different html structure\n            // (they use an <img> tag)\n            document.querySelector(\n              `[data-chest-slot=\"${chestSlotWithThatSymbol}\"] img`,\n            )\n          // attention: l'animation de combo\n          // peut etre delay\n          // et dans ce cas on voudrait que le scaling se fasse en meme temps ?\n          const animation = chestSlotDomNodeSymbol.animate(\n            [\n              {\n                transform: \"scale(1)\",\n                transformOrigin: \"center center\",\n              },\n              {\n                transform: \"scale(1.2)\",\n                transformOrigin: \"center center\",\n              },\n              {\n                transform: \"scale(1)\",\n                transformOrigin: \"center center\",\n              },\n            ],\n            { duration: 400 },\n          )\n          return () => {\n            animation.cancel()\n          }\n        },\n      )\n      return () => {\n        cleanupScoreParticle()\n        chestSlotAnimationCleanups.forEach((chestSlotAnimationCleanup) => {\n          chestSlotAnimationCleanup()\n        })\n      }\n    }, [effectSuspended, currentCard, comboScore])\n  })\n}\n\nconst compareSymbols = (leftSymbol, rightSymbol, currentCard) => {\n  if (leftSymbol === rightSymbol) {\n    return true\n  }\n\n  if (isAnimalsCard(currentCard)) {\n    if (symbolIsMonkey(leftSymbol) && symbolIsParrot(rightSymbol)) {\n      return true\n    }\n    if (symbolIsParrot(leftSymbol) && symbolIsMonkey(rightSymbol)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nconst COMBO_SCORES = {\n  3: 100,\n  4: 200,\n  5: 500,\n  6: 1000,\n  7: 2000,\n  8: 4000,\n}\n",
    "/* eslint-disable import/max-dependencies */\nimport React from \"react\"\n\nimport { useBecomes } from \"src/hooks.js\"\nimport { useSignal, useSignalState } from \"src/helper/signal.js\"\nimport {\n  useCurrentCardId,\n  useCurrentCardActivated,\n  useScoreMarked,\n  useAnimationsDisabled,\n} from \"src/main.store.js\"\nimport {\n  useRoundScore,\n  useSymbolsInChest,\n  useSwordQuantityRequired,\n} from \"src/round/round.selectors.js\"\nimport { ValueWithAnimatedTransition } from \"src/animation/ValueWithAnimatedTransition.jsx\"\n\nimport { cardIdToCard, isPirateCard, isSwordChallengeCard } from \"src/cards/cards.js\"\nimport { useDialogState } from \"src/dialog/dialog.component.jsx\"\n\nimport { SYMBOL_SWORD } from \"src/symbols/symbols.js\"\nimport { countSymbol } from \"src/round/computeRoundScore.js\"\nimport { StarRain } from \"src/game-design/StarRain.jsx\"\nimport { RoundScoreRulesDialog } from \"src/round/RoundScoreRulesDialog.jsx\"\nimport { useScoreParticles } from \"src/score/useScoreParticles.js\"\nimport { RoundScoreParticle } from \"src/round/RoundScoreParticle.jsx\"\nimport { useRoundScoreParticleEffects } from \"src/round/useRoundScoreParticleEffects.js\"\n\nconst { useState, useEffect } = React\n\nexport const RoundScore = () => {\n  const currentCard = cardIdToCard(useCurrentCardId())\n  const swordChallengeOngoing = useSwordChallengeOngoing()\n\n  return (\n    <div className={`score-area ${swordChallengeOngoing ? \"animated\" : \"\"}`}>\n      {currentCard ? <ScoreDisplay /> : null}\n    </div>\n  )\n}\n\nconst useSwordChallengeOngoing = () => {\n  const currentCard = cardIdToCard(useCurrentCardId())\n  const symbolsInChest = useSymbolsInChest()\n  const quantityKept = countSymbol(symbolsInChest, SYMBOL_SWORD)\n  const quantityRequired = useSwordQuantityRequired()\n\n  if (!isSwordChallengeCard(currentCard)) {\n    return false\n  }\n\n  const challengeWon = quantityKept >= quantityRequired\n  return !challengeWon\n}\n\nconst ScoreDisplay = () => {\n  const currentCard = cardIdToCard(useCurrentCardId())\n  const scoreMarked = useScoreMarked()\n  const swordChallengeOngoing = useSwordChallengeOngoing()\n  const [scoreDialogIsOpen, openScoreDialog, closeScoreDialog] = useDialogState()\n\n  const animationsDisabled = useAnimationsDisabled()\n\n  return (\n    <>\n      {isPirateCard(currentCard) ? <DoubleScoreIndicator /> : null}\n      {scoreMarked ? <StarRain /> : null}\n      <button\n        className={`round-score ${swordChallengeOngoing ? \"hidden\" : \"\"}`}\n        onClick={openScoreDialog}\n      >\n        {animationsDisabled ? <ScoreWithoutAnimation /> : <ScoreWithAnimations />}\n      </button>\n      {isSwordChallengeCard(currentCard) ? <NegativeScoreSign /> : null}\n      <RoundScoreRulesDialog dialogIsOpen={scoreDialogIsOpen} closeDialog={closeScoreDialog} />\n    </>\n  )\n}\n\nconst ScoreWithAnimations = () => {\n  const roundScore = useRoundScore()\n  const roundScoreDomNodeRef = React.useRef()\n  const [scoreParticleMergedListener, scoreParticleMergedEmitter] = useSignal()\n  const [scoreParticles, addScoreParticle, scoreDisplayed] = useScoreParticles({\n    totalScore: roundScore,\n    onScoreParticleMerged: scoreParticleMergedEmitter,\n  })\n\n  useRoundScoreParticleEffects({ addScoreParticle })\n  useScoreParticleMergeEffect({ roundScoreDomNodeRef, scoreParticleMergedListener })\n\n  const minDelayBetweenParticles = 600\n  const lastScoreParticleMsRef = React.useRef(null)\n  const animationDelayGetter = () => {\n    const lastScoreParticleMs = lastScoreParticleMsRef.current\n    const animationDelay = scoreParticleAnimationDelayGetter(\n      lastScoreParticleMs,\n      minDelayBetweenParticles,\n    )\n    lastScoreParticleMsRef.current = Date.now() + animationDelay\n    return animationDelay\n  }\n\n  return (\n    <>\n      <span ref={roundScoreDomNodeRef} className=\"round-score--value\">\n        <ValueWithAnimatedTransition\n          value={scoreDisplayed}\n          condition={(value, previousValue) => value > previousValue}\n          duration={600}\n        />\n      </span>\n      {scoreParticles.map((scoreParticle) => {\n        return (\n          <RoundScoreParticle\n            key={scoreParticle.id}\n            totalScoreDomNodeRef={roundScoreDomNodeRef}\n            scoreParticle={scoreParticle}\n            animationDelayGetter={animationDelayGetter}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nconst scoreParticleAnimationDelayGetter = (lastScoreParticleMs, minDelayBetweenParticles) => {\n  if (!lastScoreParticleMs) {\n    return 0\n  }\n\n  const nowMs = Date.now()\n  const msEllapsedSinceLastParticle = nowMs - lastScoreParticleMs\n  const msToWait = minDelayBetweenParticles - msEllapsedSinceLastParticle\n  if (msToWait <= 0) {\n    return 0\n  }\n\n  return msToWait\n}\n\nconst ScoreWithoutAnimation = () => {\n  const roundScore = useRoundScore()\n  return <span className=\"round-score--value\">{roundScore}</span>\n}\n\nconst useScoreParticleMergeEffect = ({ roundScoreDomNodeRef, scoreParticleMergedListener }) => {\n  const scoreParticleMerged = useSignalState(scoreParticleMergedListener)\n\n  React.useEffect(() => {\n    if (!scoreParticleMerged) {\n      return undefined\n    }\n    const roundScoreDomNode = roundScoreDomNodeRef.current\n    return animateScoreParticleMerge({\n      roundScoreDomNode,\n    })\n  }, [scoreParticleMerged])\n}\n\nconst animateScoreParticleMerge = ({\n  roundScoreDomNode,\n  duration = 500,\n  easing = \"ease-in-out\",\n}) => {\n  const animation = roundScoreDomNode.animate(\n    [\n      {\n        transform: \"scale(1.8)\",\n      },\n    ],\n    {\n      duration,\n      easing,\n    },\n  )\n  return () => {\n    animation.cancel()\n  }\n}\n\nconst DoubleScoreIndicator = () => {\n  const currentCardActivated = useCurrentCardActivated()\n  if (!currentCardActivated) {\n    return <div style={{ display: \"none\" }} className=\"pirate-hook\"></div>\n  }\n  return <div className=\"pirate-hook\"></div>\n}\n\nconst NegativeScoreSign = () => {\n  const roundScore = useRoundScore()\n\n  const symbolsInChest = useSymbolsInChest()\n  const quantityKept = countSymbol(symbolsInChest, SYMBOL_SWORD)\n  const quantityRequired = useSwordQuantityRequired()\n  const quantityRequiredArray = new Array(quantityRequired).fill(\"\")\n  const challengeWon = quantityKept >= quantityRequired\n\n  const swordNumberIncreased = useBecomes(\n    (quantityKeptPrevious) => quantityKeptPrevious < quantityKept,\n    [quantityKept],\n  )\n\n  const [swordSliceAnimation, swordSliceAnimationSetter] = useState(false)\n\n  useEffect(() => {\n    if (swordNumberIncreased) {\n      swordSliceAnimationSetter(true)\n    }\n  }, [swordNumberIncreased])\n\n  useEffect(() => {\n    if (swordSliceAnimation) {\n      const timeout = setTimeout(() => {\n        swordSliceAnimationSetter(false)\n      }, 300)\n      return () => {\n        clearTimeout(timeout)\n      }\n    }\n    return () => {}\n  }, [swordSliceAnimation])\n\n  return (\n    <>\n      <div className={`ropes ${challengeWon ? \"challenge-won\" : \"\"}`}>\n        {quantityRequiredArray.map((value, index) => {\n          if (quantityKept >= index + 1)\n            return <div key={index} className={`rope rope-${index + 1} cut-rope`}></div>\n          return <div key={index} className={`rope rope-${index + 1}`}></div>\n        })}\n      </div>\n      {swordSliceAnimation && quantityKept <= quantityRequired ? (\n        <div className=\"sword-slice\">\n          <div className=\"triangle-left\"></div>\n          <div className=\"triangle-right\"></div>\n        </div>\n      ) : null}\n      <div\n        className={`negative-round-score rotate-${quantityKept} ${challengeWon ? \"removed\" : \"\"}`}\n      >\n        {roundScore}\n      </div>\n    </>\n  )\n}\n",
    "import React from \"react\"\n\nexport const useScoreParticles = ({\n  totalScore = 0,\n  onScoreParticleAdded = () => {},\n  onScoreParticleRemoved = () => {},\n  onScoreParticleMerged = () => {},\n} = {}) => {\n  const [score, scoreSetter] = React.useState(totalScore)\n  const [scoreParticles, scoreParticlesSetter] = React.useState([])\n\n  React.useEffect(() => {\n    scoreSetter(totalScore)\n  }, [totalScore])\n\n  const addScoreParticleToState = (scoreParticle) => {\n    // scoreParticlesSetter([...scoreParticles, scoreParticle])\n    // return () => {\n    //   scoreParticlesSetter(\n    //     scoreParticles.filter((scoreParticleCandidate) => scoreParticleCandidate !== scoreParticle),\n    //   )\n    // }\n    scoreParticlesSetter((scoreParticles) => {\n      const scoreParticlesWithParticle = [...scoreParticles, scoreParticle]\n      return scoreParticlesWithParticle\n    })\n    onScoreParticleAdded(scoreParticle)\n    let removed = false\n    return () => {\n      if (removed) return\n      removed = true\n      scoreParticlesSetter((scoreParticles) => {\n        const scoreParticlesWithoutParticle = scoreParticles.filter(\n          (scoreParticleCandidate) => scoreParticleCandidate !== scoreParticle,\n        )\n        return scoreParticlesWithoutParticle\n      })\n      scoreSetter((score) => score - scoreParticle.value)\n      onScoreParticleRemoved(scoreParticle)\n    }\n  }\n\n  const addScoreParticle = ({ id, value, ...rest }) => {\n    const scoreParticle = {\n      id,\n      value,\n      ...rest,\n      oncancel: () => {\n        // not really needed as long as code calling addScoreParticle\n        // does it in a useEffect and returns removeScoreParticleFromState\n        removeScoreParticleFromState()\n      },\n      onfinish: () => {\n        removeScoreParticleFromState()\n        onScoreParticleMerged(scoreParticle)\n        scoreSetter((score) => score + value)\n      },\n    }\n    const removeScoreParticleFromState = addScoreParticleToState(scoreParticle)\n    return removeScoreParticleFromState\n  }\n\n  const scoreInParticles = scoreParticles.reduce(\n    (previous, particle) => previous + particle.value,\n    0,\n  )\n  const scoreDisplayed = score - scoreInParticles\n\n  return [scoreParticles, addScoreParticle, scoreDisplayed]\n}\n",
    "export const diceSize = 50\n",
    "/* eslint-disable import/max-dependencies */\nimport React from \"react\"\n\nimport { useSignalState } from \"src/helper/signal.js\"\nimport { useCurrentCardId, useChestSlots } from \"src/main.store.js\"\nimport { Image } from \"src/generic/Image.jsx\"\nimport { useThreeSkullsOrMoreInCursedArea } from \"src/round/round.selectors.js\"\n\nimport { symbolToImageUrl } from \"src/symbols/symbols.js\"\nimport { cardIdToCard, isChestCard } from \"src/cards/cards.js\"\nimport { RoundScore } from \"src/round/RoundScore.jsx\"\nimport { diceSize } from \"src/dices/dicePosition.js\"\n\nconst cursedGridImageUrl = new URL(\n  \"/src/chest/cursed-grid.png\",\n  import.meta.url,\n)\n\nexport const Chest = ({ chestRef, diceOverChestListener }) => {\n  const chestSlots = useChestSlots()\n  const threeSkullsOrMoreInCursedArea = useThreeSkullsOrMoreInCursedArea()\n  const diceOverChest = useSignalState(diceOverChestListener)\n  const currentCard = cardIdToCard(useCurrentCardId())\n  const protectedByChestCard =\n    threeSkullsOrMoreInCursedArea && isChestCard(currentCard)\n\n  return (\n    <div className=\"chest\">\n      <div\n        ref={chestRef}\n        className={`dice-area ${isChestCard(currentCard) ? \"glow\" : \"\"}`}\n        style={{\n          ...(diceOverChest ? { outline: \"2px dotted\" } : {}),\n        }}\n      >\n        <div className=\"box\">\n          {Object.keys(chestSlots).map((chestSlot) => (\n            <div className=\"slot\" key={chestSlot} data-chest-slot={chestSlot}>\n              <ChestSlot chestSlotContent={chestSlots[chestSlot]} />\n            </div>\n          ))}\n        </div>\n        <div className=\"top-left-corner\"></div>\n        <div className=\"top-right-corner\"></div>\n        <div className=\"bottom-left-corner\"></div>\n        <div className=\"bottom-right-corner\"></div>\n        {threeSkullsOrMoreInCursedArea && !protectedByChestCard ? (\n          <CursedCover />\n        ) : null}\n      </div>\n      <RoundScore />\n    </div>\n  )\n}\n\nexport const compareChestSlotContent = (\n  chestSlotContentLeft,\n  chestSlotContentRight,\n) => {\n  const leftHasContent = Boolean(chestSlotContentLeft)\n  const rightHasContent = Boolean(chestSlotContentRight)\n  if (!leftHasContent && !rightHasContent) {\n    return true\n  }\n  if (leftHasContent !== rightHasContent) {\n    return false\n  }\n\n  const leftType = chestSlotContentLeft.type\n  const rightType = chestSlotContentRight.type\n  if (leftType !== rightType) {\n    return false\n  }\n\n  return chestSlotContentLeft.value === chestSlotContentRight.value\n}\n\nconst ChestSlot = ({ chestSlotContent }) => {\n  const currentCard = cardIdToCard(useCurrentCardId())\n\n  if (!chestSlotContent) {\n    return null\n  }\n\n  if (chestSlotContent.type === \"symbol\") {\n    const symbol = chestSlotContent.value\n    return (\n      <button\n        className=\"dice\"\n        style={{\n          width: diceSize,\n          height: diceSize,\n          color: \"#eaeaea\",\n          margin: \"5px\",\n          backgroundColor: currentCard.color1,\n          borderColor: currentCard.color2,\n          borderWidth: \"2px\",\n          borderStyle: \"solid\",\n        }}\n      >\n        <Image\n          src={symbolToImageUrl(symbol)}\n          draggable=\"false\"\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        />\n      </button>\n    )\n  }\n\n  // it's a dice\n  return null\n}\n\nconst CursedCover = () => {\n  return (\n    <div className=\"cursed-cover\">\n      <Image draggable=\"false\" src={cursedGridImageUrl} alt=\"cursed-cover\" />\n    </div>\n  )\n}\n",
    "export const cardsRules = {\n  \"animals\": {\n    name: \"Animaux\",\n    rule:\n      \"Les singes et les perroquest obtenus sur les dés comptent comme un même symbol dans une combinaison.\",\n    more:\n      \"Par exemple 2 perroquets et 3 singes forment une conbinaison de 5 dés identiques, soit 500 points.\",\n  },\n  \"chest\": {\n    name: \"Coffre au trésor\",\n    rule:\n      'Lorsque le joueur sauvegarde ses dés, grâce à la carte \"Coffre au trésor\" les dés sont protégés du mauvais sort.',\n    more:\n      \"Ainsi même lorsque le joueur obtient 3 têtes de morts, son tour prends fin, mais il peut marquer les points totalisés grâce aux dés sauvegardés!\",\n  },\n  \"coin\": {\n    name: \"Pièce d'or\",\n    rule:\n      \"Le joueur commence son tour avec un symbol pièce d'or. Il rapporte des points aussi bien dans une combinaison de dés que comme simple pièce (+100).\",\n  },\n  \"diamond\": {\n    name: \"Diamant\",\n    rule:\n      \"Le joueur commence son tour avec un symbol diamant. Il rapporte des points aussi bien dans une combinaison de dés que comme simple diamant (+100).\",\n  },\n  \"pirate\": {\n    name: \"Capitaine des pirates\",\n    rule:\n      \"Grâce à l'aide du capitaine, tous les points comptabilisés pendant ce tour sont doublés !\",\n    //   more: \"Si le joueur doit se rendre sur l'île de la tête de mort, ses adversaires perdent 200 points pour chaque tête de mort révélée.\"\n  },\n  \"witch\": {\n    name: \"Sorcière\",\n    rule:\n      \"Avec ses potions magiques, la sorcière permet exceptionnellement au joueur de relancer, une fois, un dé avec une tête de mort.\",\n  },\n  \"1skull\": {\n    name: \"Tête de mort\",\n    rule: \"Le tour du joueur débute avec un symbole tête de mort.\",\n  },\n  \"2skulls\": {\n    name: \"2 têtes de mort\",\n    rule: \"Le tour du joueur débute avec 2 symboles tête de mort.\",\n  },\n  \"2sword-challenge\": {\n    name: \"Bateau pirate\",\n    rule:\n      \"Le joueur doit obtenir au minimum 2 symbols sabres. Si il y parvient, il gagne +300 points, en plus de son résultat aux dés. Si il échoue, le joueur marque -300 points pour ce tour, quelque soit son résultat aux dés.\",\n    more:\n      \"Le score total ne peut pas descende en dessous de zéro. Ainsi si par exemple le joueur perds le défi au premier tour il restera à 0 points.\",\n    // more: \"Celui qui découvre un bateau pirate ne peut pas aller sur l'île de la tête de mort: un joueur qui obtiendrait 4 têtes de mort ou plus lors de son premier lancer perdrait donc immédiatement son tour.\"\n  },\n  \"3sword-challenge\": {\n    name: \"Bateau pirate\",\n    rule:\n      \"Le joueur doit obtenir au minimum 3 symbols sabres. Si il y parvient, il gagne +500 points, en plus de son résultat aux dés. Si il échoue, le joueur marque -500 points pour ce tour, quelque soit son résultat aux dés.\",\n    more:\n      \"Le score total ne peut pas descende en dessous de zéro. Ainsi si par exemple le joueur perds le défi au premier tour il restera à 0 points.\",\n    // more: \"Celui qui découvre un bateau pirate ne peut pas aller sur l'île de la tête de mort: un joueur qui obtiendrait 4 têtes de mort ou plus lors de son premier lancer perdrait donc immédiatement son tour.\"\n  },\n  \"4sword-challenge\": {\n    name: \"Bateau pirate\",\n    rule:\n      \"Le joueur doit obtenir au minimum 4 symbols sabres. Si il y parvient, il gagne +1000 points, en plus de son résultat aux dés. Si il échoue, le joueur marque -1000 points pour ce tour, quelque soit son résultat aux dés.\",\n    more:\n      \"Le score total ne peut pas descende en dessous de zéro. Ainsi si par exemple le joueur perds le défi au premier tour il restera à 0 points.\",\n    // more: \"Celui qui découvre un bateau pirate ne peut pas aller sur l'île de la tête de mort: un joueur qui obtiendrait 4 têtes de mort ou plus lors de son premier lancer perdrait donc immédiatement son tour.\"\n  },\n}\n",
    "import React from \"react\"\n\nimport { Image } from \"src/generic/Image.jsx\"\nimport { cardsRules } from \"src/cards/cards-rules.js\"\nimport { DialogWood } from \"src/dialog/dialog.wood.jsx\"\nimport { cardToImageUrl } from \"src/cards/cards.js\"\n\nexport const CardRulesDialog = ({ dialogIsOpen, closeDialog, card }) => {\n  const cardRules = cardsRules[card.type]\n\n  return (\n    <DialogWood\n      className=\"card-rules-dialog\"\n      isOpen={dialogIsOpen}\n      onRequestClose={closeDialog}\n      requestCloseOnClickOutside={true}\n      title=\"Carte\"\n    >\n      {cardRules ? (\n        <>\n          <div className=\"dialog-label\">{cardRules.name}</div>\n          <div style={{ textAlign: \"center\" }}>\n            <Image\n              className=\"current-card\"\n              src={cardToImageUrl(card)}\n              width=\"150\"\n              alt={card.type}\n            />\n          </div>\n          <div className=\"text-rule\">{cardRules.rule}</div>\n          {cardRules.more ? <div className=\"text-rule\">{cardRules.more}</div> : null}\n        </>\n      ) : (\n        \"No rule\"\n      )}\n    </DialogWood>\n  )\n}\n",
    "import React from \"react\"\n\nimport { Image } from \"src/generic/Image.jsx\"\nimport { cardToSmallImageUrl } from \"src/cards/cards.js\"\n\nconst SmallCardForward = ({ card, ...props }, ref) => {\n  return (\n    <div\n      className=\"card current-card\"\n      ref={ref}\n      width=\"55\"\n      height=\"55\"\n      style={{\n        backgroundColor: card.color1,\n        borderColor: card.color2,\n      }}\n      {...props}\n    >\n      <Image src={cardToSmallImageUrl(card)} alt={card.type} width=\"55\" height=\"55\" />\n    </div>\n  )\n}\n\nexport const SmallCard = React.forwardRef(SmallCardForward)\n",
    "import React from \"react\"\n\nimport { Image } from \"src/generic/Image.jsx\"\nimport { useCurrentCardId } from \"src/main.store.js\"\nimport { useSymbolsInChest, useSwordQuantityRequired } from \"src/round/round.selectors.js\"\nimport { cardIdToCard, isSwordChallengeCard } from \"src/cards/cards.js\"\nimport { SYMBOL_SWORD, symbolSwordUrl } from \"src/symbols/symbols.js\"\nimport { countSymbol } from \"src/round/computeRoundScore.js\"\n\nconst swordsDisabledImageUrl = new URL(\"/src/header/swords-disabled.png\", import.meta.url)\n\nexport const SwordChallengeIndicator = () => {\n  const currentCardId = useCurrentCardId()\n  const symbolsInChest = useSymbolsInChest()\n  const quantityRequired = useSwordQuantityRequired()\n\n  if (!currentCardId) {\n    return null\n  }\n  const currentCard = cardIdToCard(currentCardId)\n  if (!isSwordChallengeCard(currentCard)) {\n    return null\n  }\n\n  const quantityKept = countSymbol(symbolsInChest, SYMBOL_SWORD)\n  const quantityRequiredArray = new Array(quantityRequired).fill(\"\")\n\n  return (\n    <div className=\"sword-challenge-indicators\">\n      {quantityRequiredArray.map((value, index) => {\n        if (quantityKept >= index + 1) return <SwordIconActivated key={index} />\n        return <SwordIconDisabled key={index} />\n      })}\n    </div>\n  )\n}\n\nconst SwordIconActivated = () => (\n  <div className=\"sword-icon\">\n    <Image src={symbolSwordUrl} />\n  </div>\n)\n\nconst SwordIconDisabled = () => (\n  <div className=\"sword-icon disabled\">\n    <Image src={swordsDisabledImageUrl} />\n  </div>\n)\n",
    "import React from \"react\"\n\nimport { useCurrentCardId, useCurrentCardActivated } from \"src/main.store.js\"\nimport { Image } from \"src/generic/Image.jsx\"\nimport { useCurrentPlayer } from \"src/round/round.selectors.js\"\nimport { cardDefaultUrl, cardIdToCard } from \"src/cards/cards.js\"\nimport { CardRulesDialog } from \"src/header/CardRulesDialog.jsx\"\nimport { SmallCard } from \"src/cards/SmallCard.jsx\"\nimport { SwordChallengeIndicator } from \"./SwordChallengeIndicator.jsx\"\n\nimport { useAnimateTransitionUsingJs } from \"src/animation/useAnimateTransition.js\"\n\nexport const Header = ({ openScoreboard, headerSmallCardRef }) => {\n  const currentCard = cardIdToCard(useCurrentCardId())\n  const currentCardActivated = useCurrentCardActivated()\n\n  return (\n    <div className=\"header\">\n        <div className=\"card-container\" style={{ opacity: currentCardActivated ? '1' : '0' }}>\n          <div className=\"small-card\">\n            {currentCard ? (\n              <HeaderSmallCard headerSmallCardRef={headerSmallCardRef} currentCard={currentCard} />\n            ) : (\n              <BackCard />\n            )}\n          </div>\n          {currentCardActivated && <SwordChallengeIndicator />}\n        </div>\n      <CurrentPlayer openScoreboard={openScoreboard} />\n      <TotalScore />\n    </div>\n  )\n}\n\nconst HeaderSmallCard = ({ headerSmallCardRef, currentCard }) => {\n  const [cardDialogIsOpen, cardDialogIsOpenSetter] = React.useState(false)\n  const openCardDialog = () => {\n    cardDialogIsOpenSetter(true)\n  }\n\n  const closeCardDialog = () => {\n    cardDialogIsOpenSetter(false)\n  }\n\n  return (\n    <>\n      <SmallCard\n        onClick={() => {\n          openCardDialog()\n        }}\n        card={currentCard}\n        ref={headerSmallCardRef}\n      />\n      <CardRulesDialog\n        card={currentCard}\n        dialogIsOpen={cardDialogIsOpen}\n        closeDialog={closeCardDialog}\n      />\n    </>\n  )\n}\n\nconst BackCard = () => {\n  return (\n    <div\n      className=\"card default-card\"\n      style={{\n        backgroundImage: `url(${cardDefaultUrl})`,\n        backgroundSize: \"217px\",\n      }}\n    ></div>\n  )\n}\n\nconst CurrentPlayer = ({ openScoreboard }) => {\n  const player = useCurrentPlayer()\n\n  return (\n    <Image\n      onClick={openScoreboard}\n      className=\"avatar\"\n      src={player && player.character.img}\n      alt=\"player\"\n      style={{\n        borderColor: (player && player.character.color) || \"white\",\n      }}\n      width=\"55\"\n      height=\"55\"\n    />\n  )\n}\n\nconst TotalScore = () => {\n  const player = useCurrentPlayer()\n  const totalScore = player.score\n  const totalScoreAnimation = useAnimateTransitionUsingJs(totalScore, {\n    duration: 1200,\n    timingFunction: (progress) => 1 - Math.pow(1 - progress, 5),\n  })\n\n  return (\n    <div className=\"total-score\">\n      <span\n        className=\"score\"\n        style={{\n          backgroundColor: (player && player.character.color) || \"white\",\n        }}\n      >\n        {totalScoreAnimation ? totalScoreAnimation.value : totalScore}\n      </span>\n    </div>\n  )\n}\n",
    "import { getDomNodeRectangle } from \"src/dom/dom.position.js\"\nimport {\n  rotateRectangle,\n  rotatedRectangleCollidesWithRotatedRectangle,\n} from \"src/helper/geometry.js\"\nimport { diceSize } from \"./dicePosition.js\"\n\n// margin because of rotation\nconst diceSpacing = diceSize / 8\n\nexport const rollDices = (dices, { rolledAreaDomNode }) => {\n  const rolledAreaRectangle = getDomNodeRectangle(rolledAreaDomNode)\n  const rolledAreaWidth = rolledAreaRectangle.right - rolledAreaRectangle.left\n  const rolledAreaHeight = rolledAreaRectangle.bottom - rolledAreaRectangle.top\n  const rectangleAllowed = {\n    left: diceSpacing,\n    right: rolledAreaWidth - (diceSize + diceSpacing),\n    top: diceSpacing,\n    bottom: rolledAreaHeight - (diceSize + diceSpacing),\n  }\n\n  const otherRotatedRectangles = []\n  const getRandomAndCollisionFreeInfo = (dice) => {\n    let count = 0\n    const next = () => {\n      const rectangleCandidate = getRandomDiceRectangle(dice, rectangleAllowed)\n      const rotation = getDiceRandomRotation()\n      const rotatedRectangleCandidate = rotateRectangle(rectangleCandidate, rotation)\n      const someOtherDiceCollides = otherRotatedRectangles.some((otherRotatedRectangle) =>\n        rotatedRectangleCollidesWithRotatedRectangle(\n          rotatedRectangleCandidate,\n          otherRotatedRectangle,\n        ),\n      )\n      if (\n        !someOtherDiceCollides ||\n        // better return a collisioning rectangle than an infinite loop\n        count > 50\n      ) {\n        return {\n          rectangle: rectangleCandidate,\n          rotation,\n          rotatedRectangle: rotatedRectangleCandidate,\n        }\n      }\n      count++\n      return next()\n    }\n    return next()\n  }\n\n  dices.forEach((dice, index) => {\n    dice.visibleFaceIndex = getDiceRandomFace(dice)\n\n    const { rectangle, rotation, rotatedRectangle } = getRandomAndCollisionFreeInfo(dice)\n    otherRotatedRectangles.push(rotatedRectangle)\n\n    dice.rolledAreaZIndex = index + 1\n    dice.rolledAreaPosition = rectangle[0]\n    dice.rotation = rotation\n  })\n\n  return dices\n}\n\nconst getRandomDiceRectangle = (dice, rectangleAllowed) => {\n  const positionCandidate = {\n    x: getRandomNumberBetweenInterval(rectangleAllowed.left, rectangleAllowed.right),\n    y: getRandomNumberBetweenInterval(rectangleAllowed.top, rectangleAllowed.bottom),\n  }\n\n  const topLeft = {\n    x: positionCandidate.x,\n    y: positionCandidate.y,\n  }\n  const topRight = {\n    x: positionCandidate.x + diceSize,\n    y: positionCandidate.y,\n  }\n  const bottomRight = {\n    x: positionCandidate.x + diceSize,\n    y: positionCandidate.y + diceSize,\n  }\n  const bottomLeft = {\n    x: positionCandidate.x,\n    y: positionCandidate.y + diceSize,\n  }\n\n  const diceRectangle = [topLeft, topRight, bottomRight, bottomLeft]\n  return diceRectangle\n}\n\nconst getDiceRandomRotation = () => getRandomNumberBetweenInterval(-35, 35)\n\nconst getDiceRandomFace = (dice) => getRandomNumberBetweenInterval(0, dice.faces.length - 1)\n\nconst getRandomNumberBetweenInterval = (min, max) =>\n  Math.floor(Math.random() * (max - min + 1) + min)\n",
    "import React from \"react\"\nimport { createAction, useDiceRolledIds, useCurrentCardId } from \"src/main.store.js\"\nimport { Image } from \"src/generic/Image.jsx\"\nimport {\n  useRollDiceAllowed,\n  useHasNeverRolled,\n  useThreeSkullsOrMoreInCursedArea,\n} from \"src/round/round.selectors.js\"\nimport { rollDices } from \"src/dices/rollDices.js\"\nimport { cardIdToCard, isChestCard } from \"src/cards/cards.js\"\nimport { symbolSkullUrl } from \"src/symbols/symbols.js\"\n\nexport const ButtonRoll = ({ rolledAreaRef }) => {\n  const rollDiceAllowed = useRollDiceAllowed()\n  const diceRolledIds = useDiceRolledIds()\n  const hasNeverRolled = useHasNeverRolled()\n  const roll = useRoll()\n\n  const currentCard = cardIdToCard(useCurrentCardId())\n  const threeSkullsOrMoreInCursedArea = useThreeSkullsOrMoreInCursedArea()\n\n  const disabledNotEnoughDice = diceRolledIds.length < 2 && !hasNeverRolled\n  const disabledChestCard = threeSkullsOrMoreInCursedArea && isChestCard(currentCard)\n  const disabled = disabledNotEnoughDice || disabledChestCard\n\n  if (rollDiceAllowed) {\n    return (\n      <div className=\"roll-action\">\n        <button\n          onClick={() => {\n            roll(rolledAreaRef.current)\n          }}\n          disabled={disabled}\n        >\n          Lancer\n          {disabledNotEnoughDice && !disabledChestCard && (\n            <span className=\"button-subtitle\">(au moins 2 dés !)</span>\n          )}\n        </button>\n        {disabledChestCard && <Image src={symbolSkullUrl} className=\"skull-symbol\" />}\n      </div>\n    )\n  }\n\n  return null\n}\n\nconst useRoll = createAction((state, rolledAreaDomNode) => {\n  const { dices, rollCount, diceRolledIds } = state\n  const diceToRollIds = rollCount === 0 ? Object.keys(dices) : diceRolledIds\n  const dicesToRoll = diceToRollIds.map((diceRolledId) => dices[diceRolledId])\n\n  rollDices(dicesToRoll, { rolledAreaDomNode })\n  return {\n    ...state,\n    rollCount: rollCount + 1,\n    witchUncursedDiceId: null,\n    diceRolledIds: dicesToRoll.map((dice) => dice.id),\n    dices: { ...dices },\n  }\n})\n",
    "import React from \"react\"\n\nimport { useMarkScore, useEndPlayerRound } from \"src/round/round.actions.js\"\nimport { Image } from \"src/generic/Image.jsx\"\nimport {\n  useMarkScoreAllowed,\n  useMarkScoreButtonVisible,\n  useStartNextRoundAllowed,\n  useRoundScore,\n  useThreeSkullsOrMoreInCursedArea,\n  useSwordChallengeOnGoing,\n  useSymbolsInChest,\n} from \"src/round/round.selectors.js\"\n\nimport { ButtonRoll } from \"./ButtonRoll.js\"\nimport { symbolSkullUrl } from \"src/symbols/symbols.js\"\n\nexport const Footer = ({ onRoundOver, rolledAreaRef }) => {\n  return (\n    <div className=\"footer actions\">\n      <ButtonRoll rolledAreaRef={rolledAreaRef} />\n      <ButtonMarkScore />\n      <ButtonEndRound onRoundOver={onRoundOver} />\n    </div>\n  )\n}\n\nconst ButtonMarkScore = () => {\n  const roundScore = useRoundScore()\n  const markScore = useMarkScore()\n  const markScoreAllowed = useMarkScoreAllowed()\n  const markScoreButtonVisible = useMarkScoreButtonVisible()\n\n  const sign = roundScore < 0 ? \"-\" : \"+\"\n\n  if (markScoreButtonVisible) {\n    return (\n      <div className=\"collect-action\">\n        <button\n          onClick={() => {\n            markScore(roundScore)\n          }}\n          disabled={!markScoreAllowed}\n        >\n          <span>Collecter</span>\n          <span className=\"score\">\n            {sign} {Math.abs(roundScore)}\n          </span>\n        </button>\n        {!markScoreAllowed && <Image src={symbolSkullUrl} className=\"skull-symbol\" />}\n      </div>\n    )\n  }\n\n  return null\n}\n\nconst ButtonEndRound = ({ onRoundOver }) => {\n  const startNextRoundAllowed = useStartNextRoundAllowed()\n  const endPlayerRound = useEndPlayerRound()\n  const roundScore = useRoundScore()\n  const threeSkullsOrMoreInCursedArea = useThreeSkullsOrMoreInCursedArea()\n  const swordChallengeOnGoing = useSwordChallengeOnGoing()\n  const symbolsInChest = useSymbolsInChest()\n\n  const computeReason = () => {\n    // TODO: case of the treasure chest card => some score will be marked even if 3 skulls (canMarkScore ?)\n    if (threeSkullsOrMoreInCursedArea) return \"3-skulls\"\n    // sword challenge is ongoing means is not resolved\n    // if the user clicks on 'Terminer mon tour' with an unresolved challenge, it means that he failed it\n    if (swordChallengeOnGoing) return \"chalenge-failed\"\n    return \"user-collect\"\n  }\n\n  if (startNextRoundAllowed) {\n    return (\n      <div className=\"next-round-action\">\n        <button\n          onClick={() => {\n            // ici on sait que le round est terminé\n            // on dit a ceux que ça intéresse comment ça s'est passé (scoreboard)\n            // qui va alors animer le fait qu'on a marqué un score, fail sword challenge\n            // ou qu'on s'est tapé 3 tete\n            endPlayerRound()\n            onRoundOver({\n              reason: computeReason(),\n              value: roundScore,\n              symbolsInChest,\n            })\n          }}\n        >\n          Terminer mon tour\n        </button>\n      </div>\n    )\n  }\n\n  return null\n}\n",
    "import React from \"react\"\n\nimport { Image } from \"src/generic/Image.jsx\"\nimport { useCurrentCardId, useCurrentCardActivated } from \"src/main.store.js\"\nimport { cardIdToCard, isOneSkullCard, isTwoSkullsCard, isWitchCard } from \"src/cards/cards.js\"\nimport { diceSize } from \"src/dices/dicePosition.js\"\nimport { symbolSkullUrl } from \"src/symbols/symbols.js\"\n\nconst wichLabelImageUrl = new URL(\"/src/skull-island/witch-label.png\", import.meta.url)\n\nexport const SkullIsland = ({ cursedAreaRef }) => {\n  const currentCard = cardIdToCard(useCurrentCardId())\n\n  return (\n    <div className=\"skull-island\">\n      {isWitchCard(currentCard) ? <UncurseDiceLabel /> : null}\n      <div className=\"bottle\">\n        <div className=\"area\" ref={cursedAreaRef}>\n          {isOneSkullCard(currentCard) ? <ExtraSkull card={currentCard} /> : null}\n          {isTwoSkullsCard(currentCard) ? (\n            <>\n              <ExtraSkull card={currentCard} />\n              <ExtraSkull card={currentCard} />\n            </>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst ExtraSkull = ({ card }) => {\n  return (\n    <button\n      className=\"dice\"\n      style={{\n        width: diceSize,\n        height: diceSize,\n        color: \"#eaeaea\",\n        margin: \"1px 5px\",\n        backgroundColor: card.color1,\n        borderColor: card.color2,\n        borderWidth: \"2px\",\n      }}\n    >\n      <Image\n        src={symbolSkullUrl}\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      />\n    </button>\n  )\n}\n\nconst UncurseDiceLabel = () => {\n  const currentCardActivated = useCurrentCardActivated()\n\n  if (!currentCardActivated) {\n    return <Image style={{ display: \"none\" }} src={wichLabelImageUrl} />\n  }\n\n  return (\n    <div className=\"witch-label\">\n      <Image src={wichLabelImageUrl} />\n      <svg x=\"0px\" y=\"0px\" width=\"156.083px\" height=\"208.667px\" viewBox=\"0 0 156.083 208.667\">\n        <path\n          id=\"path_01\"\n          fill=\"none\"\n          stroke=\"#E4AD30\"\n          d=\"M8.406,107.82\n\tc2.541,2.178,2.375,2.875,14.25,3.5c14.782,0.778,19.26-11.965,19.26-11.965S47.918,88,40.251,72.917s-18.916,4.583-9.083,8.167\n\ts27.759-1.338,35.142-12.417C74.75,56,77.583,45.333,79.25,37S78.477,15.833,66.31,3.833\"\n        />\n        <path\n          id=\"path_02\"\n          fill=\"none\"\n          stroke=\"#E4AD30\"\n          d=\"M44.031,110.094\n\tc0,0,1,1.313-4.438,3.344s-14.244,7.281-32.125-2\"\n        />\n        <path\n          id=\"path_03\"\n          fill=\"none\"\n          stroke=\"#E4AD30\"\n          d=\"M42.125,103.688\n\tc0,0,1.313,6.594-9.313,8.625S10.281,108.719,9.406,101\"\n        />\n        <path\n          id=\"path_04\"\n          fill=\"none\"\n          stroke=\"#E4AD30\"\n          d=\"M33.114,112.253c0,0,39.886-19.253,43.011,24.747\n\tc0.372,0.447-0.959,1.208-2.542,1.625\"\n        />\n      </svg>\n    </div>\n  )\n}\n",
    "import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nexport const Portal = ({ parent, children }) => {\n  if (!parent) {\n    return null\n  }\n  return ReactDOM.createPortal(<>{children}</>, parent)\n}\n",
    "export const stringifyClassNames = (classNames) => {\n  return classNames.join(\" \")\n}\n\nexport const stringifyTransformations = ({ rotate, scale, translate }) => {\n  return [\n    ...(rotate ? [`rotate(${rotate}deg)`] : []),\n    ...(scale && scale !== 1 ? [`scale(${scale})`] : []),\n    ...(translate ? [`translate(${translate})`] : []),\n  ].join(\"\")\n}\n",
    "export const throttle = (fn, ms = 60, { trailing = false } = {}) => {\n  let timeout\n  let previousMs\n\n  const throttled = (...args) => {\n    clearTimeout(timeout)\n    const nowMs = Date.now()\n    // la fonction a été appelé il y a previous\n    if (previousMs) {\n      // ca fait combien de temps\n      const msEllapsedSincePreviousCall = nowMs - previousMs\n\n      if (msEllapsedSincePreviousCall < ms) {\n        // pas suffisament de temps écoulé\n        if (trailing) {\n          const remaining = ms - msEllapsedSincePreviousCall\n          timeout = setTimeout(() => throttled(...args), remaining)\n        }\n      } else {\n        // suffisament de temps écoulé\n        previousMs = nowMs\n        fn(...args)\n      }\n    } else {\n      // calls right now\n      previousMs = nowMs\n      fn(...args)\n    }\n  }\n\n  const cancel = () => {\n    clearTimeout(timeout)\n  }\n  throttled.cancel = cancel\n\n  return throttled\n}\n",
    "import { createLogger } from \"@jsenv/logger\"\nimport { throttle } from \"src/helper/throttle.js\"\nimport { addDomEventListener } from \"src/dom/dom.util.js\"\n\nexport const enableDragGesture = (\n  domNode,\n  {\n    logLevel = \"warn\",\n    onGrip = () => {},\n    onLongGrip = () => {},\n    // in case it's passed we will call it only on fast and precise click\n    onClick = () => {},\n    onDrag = () => {},\n    onRelease = () => {},\n    onCancel = () => {},\n    longGripMs = 300,\n  },\n) => {\n  const logger = createLogger({ logLevel })\n  // a small move is a drag gesture but\n  // not yet a drag intent\n  // long grip or big enough move set drag intent to true\n  let dragIntent = false\n  let dragIntentTimeout\n  let pendingGesture\n  let removeMoveListener = () => {}\n  let removeReleaseListener = () => {}\n  let cancelMoveThrottling = () => {}\n\n  logger.debug(\"enable drag on\", domNode)\n\n  // disable native drag\n  // putting draggable=\"false\" on the element is not enough for firefox\n  const removeDragstartListener = addDomEventListener(domNode, \"dragstart\", (dragstartEvent) => {\n    dragstartEvent.preventDefault()\n  })\n\n  const removeMousedownListener = addDomEventListener(\n    domNode,\n    \"mousedown\",\n    (mousedownEvent) => {\n      const isRightClick = mousedownEvent.which === 3\n      if (isRightClick) {\n        logger.debug(\"ignore right click\")\n        return\n      }\n\n      handleGrip(mouseEventToPagePosition(mousedownEvent), mousedownEvent)\n      const mousemoveThrottled = throttle((mousemoveEvent) => {\n        handleMove(mouseEventToPagePosition(mousemoveEvent), mousemoveEvent)\n      })\n      cancelMoveThrottling = () => mousemoveThrottled.cancel()\n      removeMoveListener = addDomEventListener(document, \"mousemove\", mousemoveThrottled)\n      removeReleaseListener = addDomEventListener(document, \"mouseup\", (mouseupEvent) => {\n        removeReleaseListener()\n        removeMoveListener()\n        handleRelease(mouseEventToPagePosition(mouseupEvent), mouseupEvent)\n      })\n    },\n    { passive: true },\n  )\n  const removeTouchstartListener = addDomEventListener(\n    domNode,\n    \"touchstart\",\n    (touchstartEvent) => {\n      handleGrip(touchEventToPagePosition(touchstartEvent), touchstartEvent)\n      const touchmoveThrottled = throttle((touchmoveEvent) => {\n        handleMove(touchEventToPagePosition(touchmoveEvent), touchmoveEvent)\n      })\n      cancelMoveThrottling = () => touchmoveThrottled.cancel()\n      removeMoveListener = addDomEventListener(document, \"touchmove\", touchmoveThrottled)\n      removeReleaseListener = addDomEventListener(document, \"touchend\", (touchendEvent) => {\n        removeReleaseListener()\n        removeMoveListener()\n        handleRelease(touchEventToPagePosition(touchendEvent), touchendEvent)\n      })\n    },\n    { passive: true },\n  )\n  const removeClickListener = addDomEventListener(domNode, \"click\", (clickEvent) => {\n    if (!dragIntent && dropEffect === \"none\") {\n      onClick(clickEvent)\n    }\n  })\n\n  let pointerPositionPrevious\n  let domNodeStartPosition\n  let gripPointerPosition\n  let longGripTimeout\n  let dropEffect\n  const handleGrip = (pointerPosition, event) => {\n    logger.debug(\"gripping node at\", pointerPosition)\n    pendingGesture = true\n    dropEffect = \"none\"\n    gripPointerPosition = pointerPosition\n    pointerPositionPrevious = pointerPosition\n    domNodeStartPosition = domNodeToPagePosition(domNode)\n\n    onGrip({\n      x: domNodeStartPosition.x,\n      y: domNodeStartPosition.y,\n      event,\n    })\n    longGripTimeout = setTimeout(handleLongGrip, longGripMs)\n  }\n\n  const handleLongGrip = () => {\n    dragIntent = true\n    onLongGrip()\n  }\n\n  const handleMove = (pointerPosition, event) => {\n    if (\n      pointerPositionPrevious.x === pointerPosition.x &&\n      pointerPositionPrevious.y === pointerPosition.y\n    ) {\n      logger.debug(\"no real move\")\n      return\n    }\n    pointerPositionPrevious = pointerPosition\n\n    const gripHorizontalShift = gripPointerPosition.x - domNodeStartPosition.x\n    const gripVerticalShit = gripPointerPosition.y - domNodeStartPosition.y\n    const movePosition = {\n      // il y a un décalage entre le bord de l'élément et l'endroit ou l'on l'attrape\n      // ce décalage doit continuer d'exister pour savoir ou on place l'élément en position fixed\n      x: pointerPosition.x - gripHorizontalShift,\n      y: pointerPosition.y - gripVerticalShit,\n    }\n    const relativeX = pointerPosition.x - gripPointerPosition.x\n    const relativeY = pointerPosition.y - gripPointerPosition.y\n\n    logger.debug(\"move node at\", movePosition)\n    onDrag({\n      event,\n      ...movePosition,\n      relativeX,\n      relativeY,\n      setDropEffect: (value) => {\n        dropEffect = value\n      },\n    })\n  }\n\n  const handleRelease = (pointerPosition, event) => {\n    logger.debug(\"releasing node\")\n    pendingGesture = false\n    clearTimeout(longGripTimeout)\n\n    const gripHorizontalShift = gripPointerPosition.x - domNodeStartPosition.x\n    const gripVerticalShit = gripPointerPosition.y - domNodeStartPosition.y\n\n    onRelease({\n      event,\n      dropEffect,\n      x: pointerPositionPrevious.x - gripHorizontalShift,\n      y: pointerPositionPrevious.y - gripVerticalShit,\n    })\n    // setTimeout is to ensure the click cannot happen just after mouseup\n    dragIntentTimeout = setTimeout(() => {\n      dragIntent = false\n    })\n  }\n\n  const handleCancel = (event) => {\n    if (pendingGesture) {\n      logger.debug(\"cancelling drag\", event)\n      pendingGesture = false\n      onCancel({\n        event,\n      })\n    }\n  }\n\n  return (event) => {\n    removeDragstartListener()\n    removeClickListener()\n    removeMousedownListener()\n    removeTouchstartListener()\n    removeMoveListener()\n    removeReleaseListener()\n    clearTimeout(longGripTimeout)\n    clearTimeout(dragIntentTimeout)\n    cancelMoveThrottling()\n    handleCancel(event)\n  }\n}\n\nconst domNodeToPagePosition = (domNode) => {\n  const rect = domNode.getBoundingClientRect()\n  return {\n    x: rect.left,\n    y: rect.top,\n  }\n}\n\nconst mouseEventToPagePosition = (mouseEvent) => {\n  return {\n    x: mouseEvent.pageX,\n    y: mouseEvent.pageY,\n  }\n}\n\nconst touchEventToPagePosition = (touchEvent) => {\n  const firstChangedTouch = touchEvent.changedTouches[0]\n  return {\n    x: firstChangedTouch.pageX,\n    y: firstChangedTouch.pageY,\n  }\n}\n",
    "/* eslint-disable import/max-dependencies */\n/* eslint-disable no-nested-ternary */\nimport React from \"react\"\n\nimport { usePrevious } from \"src/hooks.js\"\nimport { Portal } from \"src/generic/Portal.jsx\"\nimport { rectangleToRectangleInsideDomNode, printPointInDocument } from \"src/dom/dom.position.js\"\nimport { stringifyTransformations } from \"src/helper/render.js\"\nimport { useDiceDomNode, useDiceDomNodeSetter, useMainDomNode } from \"src/dom/dom.main.js\"\nimport { diceSize } from \"src/dices/dicePosition.js\"\nimport { diceIsOnSkull, diceToVisibleSymbol } from \"src/dices/dices.js\"\nimport { enableDragGesture } from \"src/drag/drag.js\"\nimport { symbolToImageUrl } from \"src/symbols/symbols.js\"\nimport { useDiceKeptIds } from \"src/round/round.selectors.js\"\n\nconst { useEffect, useState } = React\n\nexport const Dice = ({\n  dice,\n  diceAnimation,\n  anmationDebug = false,\n  parentNode,\n  zIndex,\n  x,\n  y,\n  rotation,\n  draggable,\n  onDiceClick,\n  onDiceDrag,\n  onDiceDrop,\n  onDiceDragEnd,\n  disapear,\n  appear,\n  traceUpdate = false,\n}) => {\n  if (import.meta.dev && traceUpdate) {\n    useTraceUpdate(\n      {\n        dice,\n        diceAnimation,\n        anmationDebug,\n        parentNode,\n        zIndex,\n        x,\n        y,\n        rotation,\n        draggable,\n        onDiceClick,\n        onDiceDrag,\n        onDiceDrop,\n        onDiceDragEnd,\n        disapear,\n        appear,\n      },\n      (propsUpdated) => {\n        console.log(`dice ${dice.id} re-render because:`, propsUpdated)\n      },\n    )\n  }\n\n  // state from contexts\n  const mainDomNode = useMainDomNode()\n  const diceDomNode = useDiceDomNode(dice.id)\n  const diceDomNodeSetter = useDiceDomNodeSetter(dice.id)\n  const diceKeptIds = useDiceKeptIds()\n  const isDiceKept = diceKeptIds.includes(dice.id)\n\n  // local states\n  const [diceGripped, diceGrippedSetter] = useState(false)\n  const [dragGesture, setDragGesture] = useState(null)\n\n  // si y'a une animation alors reste dans ton conteneur\n  // le temps qu'elle se finisse\n  const parentNodePrevious = usePrevious(parentNode)\n  const portalParentNode = diceAnimation ? parentNodePrevious : parentNode\n\n  useEffect(() => {\n    if (!draggable || !diceDomNode || !mainDomNode) {\n      return () => {}\n    }\n\n    let bigMoveOccured = false\n    const disableDragGesture = enableDragGesture(diceDomNode, {\n      onGrip: () => {\n        diceGrippedSetter(true)\n      },\n      onClick: (clickEvent) => {\n        onDiceClick(dice, clickEvent)\n      },\n      onDrag: ({ x, y, relativeX, relativeY, setDropEffect }) => {\n        const diceDesiredRect = {\n          left: x,\n          right: x + diceSize,\n          top: y,\n          bottom: y + diceSize,\n        }\n        const diceRectangle = rectangleToRectangleInsideDomNode(diceDesiredRect, mainDomNode)\n        setDragGesture({ x: diceRectangle.left, y: diceRectangle.top })\n        bigMoveOccured = bigMoveOccured || Math.abs(relativeX) > 10 || Math.abs(relativeY) > 10\n        if (bigMoveOccured) {\n          onDiceDrag(dice, { relativeX, relativeY, setDropEffect, diceRectangle })\n        }\n      },\n      onRelease: ({ dropEffect, x, y }) => {\n        if (dropEffect !== \"none\") {\n          const diceRectangle = {\n            left: x,\n            right: x + diceSize,\n            top: y,\n            bottom: y + diceSize,\n          }\n          onDiceDrop(dice, {\n            diceRectangle,\n          })\n        }\n        diceGrippedSetter(false)\n        setDragGesture(null)\n        onDiceDragEnd(dice)\n      },\n      onCancel: () => {\n        diceGrippedSetter(false)\n        setDragGesture(null)\n        onDiceDragEnd(dice)\n      },\n    })\n    return () => {\n      disableDragGesture()\n    }\n  }, [draggable, diceDomNode, mainDomNode, onDiceClick, onDiceDrag, onDiceDrop, onDiceDragEnd])\n\n  useEffect(() => {\n    if (!diceAnimation || !diceDomNode) return () => {}\n    const { from, to, onfinish } = diceAnimation\n\n    if (anmationDebug) {\n      printPointInDocument(from)\n      printPointInDocument(to)\n    }\n    const transform = `translate(${Math.floor(to.x - from.x)}px, ${Math.floor(to.y - from.y)}px)`\n    const animation = diceDomNode.parentNode.animate(\n      [\n        {\n          transform,\n        },\n      ],\n      {\n        duration: 500,\n        fill: \"forwards\",\n        easing: \"cubic-bezier(0, 0.55, 0.45, 1)\",\n      },\n    )\n    animation.onfinish = onfinish\n    return () => {\n      animation.cancel()\n    }\n  }, [diceDomNode, diceAnimation])\n\n  const onSkull = diceIsOnSkull(dice)\n  const diceX =\n    diceAnimation && diceAnimation.from ? diceAnimation.from.x : dragGesture ? dragGesture.x : x\n\n  const diceY =\n    diceAnimation && diceAnimation.from ? diceAnimation.from.y : dragGesture ? dragGesture.y : y\n\n  const diceZIndex = dragGesture || diceAnimation ? 1000 : zIndex\n\n  // if (dice.id === 4 && !dragGesture) {\n  //   console.log({\n  //     diceX,\n  //     diceY,\n  //     diceAnimation: Boolean(diceAnimation),\n  //     dragGesture: Boolean(dragGesture),\n  //   })\n  // }\n\n  return (\n    <Portal parent={portalParentNode}>\n      <svg\n        data-dice-id={dice.id}\n        className=\"dice\"\n        onClick={\n          draggable\n            ? undefined\n            : (clickEvent) => {\n                onDiceClick(dice, clickEvent)\n              }\n        }\n        style={{\n          width: diceSize,\n          height: diceSize,\n          left: `${diceX}px`,\n          top: `${diceY}px`,\n          zIndex: diceZIndex,\n          cursor: draggable ? (diceGripped ? \"grabbing\" : \"grab\") : undefined,\n          position: dragGesture || diceAnimation ? \"fixed\" : undefined,\n        }}\n      >\n        <g\n          ref={diceDomNodeSetter}\n          className={disapear ? \"dice-cursed-disapear\" : appear ? \"dice-cursed-appear\" : \"\"}\n          style={{\n            transform: stringifyTransformations({\n              rotate: rotation ? rotation : 0,\n              scale: diceGripped ? \"1.1\" : \"1\",\n            }),\n            transitionProperty: \"transform\",\n            transitionDuration: \"500ms\",\n            // https://easings.net/#easeOutCirc\n            transitionTimingFunction: \"cubic-bezier(0, 0.55, 0.45, 1)\",\n            transformOrigin: \"center center\",\n          }}\n        >\n          <rect\n            className=\"dice-background\"\n            width=\"100%\"\n            height=\"100%\"\n            rx=\"5\"\n            ry=\"5\"\n            fill={computeDiceColors(onSkull, isDiceKept).fill}\n            stroke={computeDiceColors(onSkull, isDiceKept).stroke}\n            strokeWidth=\"1\"\n          ></rect>\n          <image\n            href={symbolToImageUrl(diceToVisibleSymbol(dice))}\n            draggable=\"false\"\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        </g>\n      </svg>\n    </Portal>\n  )\n}\n\nconst useTraceUpdate = (\n  props,\n  onUpdate = (changedProps) => {\n    console.log(\"Changed props:\", changedProps)\n  },\n) => {\n  const prev = React.useRef(props)\n  React.useEffect(() => {\n    const changedProps = Object.entries(props).reduce((ps, [k, v]) => {\n      if (prev.current[k] !== v) {\n        ps[k] = [prev.current[k], v]\n      }\n      return ps\n    }, {})\n    if (Object.keys(changedProps).length > 0) {\n      onUpdate(changedProps)\n    }\n    prev.current = props\n  })\n}\n\nconst computeDiceColors = (onSkull, isDiceKept) => {\n  if (onSkull) {\n    return { fill: \"black\", stroke: \"black\" }\n  } else if (isDiceKept) {\n    return { fill: \"none\", stroke: \"none\" }\n  }\n  return { fill: \"#eaeaea\", stroke: \"#b9b9b9\" }\n}\n",
    "import React from \"react\"\nimport {\n  useDices,\n  useDiceCursedIds,\n  useDiceRolledIds,\n  useChestSlots,\n  useWitchUncursedDiceId,\n  useWitchCardEffectUsed,\n  useScoreMarked,\n  useCurrentCardId,\n} from \"src/main.store.js\"\nimport { cardIdToCard, isWitchCard } from \"src/cards/cards.js\"\nimport {\n  rectangleRelativeToDomNode,\n  findDomNodeClosestToRectangle,\n  rectangleAbsoluteToDomNode,\n  getDomNodeRectangle,\n  domNodeCollidesWithRectangle,\n} from \"src/dom/dom.position.js\"\nimport { useThreeSkullsOrMore, useHasDicesToCurse } from \"src/round/round.selectors.js\"\nimport { Dice } from \"src/dices/Dice.jsx\"\nimport { diceIsOnSkull } from \"src/dices/dices.js\"\nimport {\n  useSetDiceRolledAreaPosition,\n  useKeepDice,\n  useUnkeepDice,\n  useSetDiceChestSlot,\n  useUncurseDice,\n} from \"src/dices/dices.actions.js\"\n\nexport const DiceContainer = ({\n  offscreenDomNode,\n  chestDomNode,\n  rolledAreaDomNode,\n  cursedAreaDomNode,\n  onDiceOverChestChange = () => {},\n  onDiceOverRolledAreaChange = () => {},\n}) => {\n  // global state\n  const dices = useDices()\n  const chestSlots = useChestSlots()\n  const diceRolledIds = useDiceRolledIds()\n  const diceCursedIds = useDiceCursedIds()\n  const witchUncursedDiceId = useWitchUncursedDiceId()\n  const witchCardEffectUsed = useWitchCardEffectUsed()\n  const currentCard = cardIdToCard(useCurrentCardId())\n  const scoreMarked = useScoreMarked()\n  const threeSkullsOrMore = useThreeSkullsOrMore()\n  const hasDicesToCurse = useHasDicesToCurse()\n  // local state\n  const [diceAnimationState, dispatchDiceAnimation] = React.useReducer((state, action) => {\n    return {\n      ...state,\n      [action.key]: action.value,\n    }\n  }, {})\n  // actions\n  const setDiceRolledAreaPosition = useSetDiceRolledAreaPosition()\n  const keepDice = useKeepDice()\n  const unkeepDice = useUnkeepDice()\n  const uncurseDice = useUncurseDice()\n  const setDiceChestSlot = useSetDiceChestSlot()\n  // other\n  const dropTargetRef = React.useRef(null)\n\n  return Object.keys(dices).map((diceId) => {\n    const dice = dices[diceId]\n\n    const diceLocation = diceToLocation(dice, { chestSlots, diceRolledIds, diceCursedIds })\n    const propsFromLocation = diceLocationToProps(diceLocation, {\n      chestDomNode,\n      rolledAreaDomNode,\n      cursedAreaDomNode,\n      offscreenDomNode,\n    })\n    const { parentNode } = propsFromLocation\n    const diceIsGoingToBeCursed =\n      dice.id !== witchUncursedDiceId && parentNode === rolledAreaDomNode && diceIsOnSkull(dice)\n    const diceIsInCursedArea = parentNode === cursedAreaDomNode\n    const diceIsInRolledArea = diceIsInRolledAreaGetter(dice, diceRolledIds)\n\n    // we use useCallback because it prevents dices\n    // from being re-rendered and drag gesture to become\n    // shortly unavailable while react is rerendering\n    const onDiceClick = React.useCallback(\n      (dice) => {\n        const clickEffect = getClickEffect(dice, {\n          currentCard,\n          witchCardEffectUsed,\n          diceIsInRolledArea,\n          diceIsInCursedArea,\n          chestSlots,\n          hasDicesToCurse,\n          threeSkullsOrMore,\n          scoreMarked,\n        })\n        // console.log(`click dice#${dice.id} -> ${clickEffect} effect`)\n        if (clickEffect === \"keep\") {\n          const firstAvailableChestSlot = firstAvailableChestSlotGetter(chestSlots)\n          keepDice(dice, firstAvailableChestSlot)\n        } else if (clickEffect === \"unkeep\") {\n          unkeepDice(dice)\n        } else if (clickEffect === \"uncurse\") {\n          uncurseDice(dice)\n        }\n      },\n      [\n        diceIsInRolledArea,\n        diceIsInCursedArea,\n        chestSlots,\n        scoreMarked,\n        threeSkullsOrMore,\n        currentCard,\n        witchCardEffectUsed,\n      ],\n    )\n\n    const onDiceDrag = React.useCallback(\n      (dice, dragDiceGesture) => {\n        dropTargetRef.current = dropTargetGetter({\n          dragDiceGesture,\n          chestDomNode,\n          rolledAreaDomNode,\n        })\n        const dropEffect = getDropEffect(dice, {\n          diceIsInRolledArea,\n          chestSlots,\n          dropTargetRef,\n          rolledAreaDomNode,\n          chestDomNode,\n          hasDicesToCurse,\n          threeSkullsOrMore,\n          scoreMarked,\n        })\n        dragDiceGesture.setDropEffect(dropEffect)\n        onDiceOverChestChange(dropEffect === \"keep\" ? dice : null)\n        onDiceOverRolledAreaChange(dropEffect === \"unkeep\" ? dice : null)\n      },\n      [\n        diceIsInRolledArea,\n        chestSlots,\n        dropTargetRef,\n        rolledAreaDomNode,\n        chestDomNode,\n        scoreMarked,\n        threeSkullsOrMore,\n        onDiceOverChestChange,\n        onDiceOverRolledAreaChange,\n      ],\n    )\n\n    const onDiceDrop = React.useCallback(\n      (dice, dropDiceGesture) => {\n        const dropEffect = getDropEffect(dice, {\n          diceIsInRolledArea,\n          chestSlots,\n          dropTargetRef,\n          rolledAreaDomNode,\n          chestDomNode,\n          scoreMarked,\n          threeSkullsOrMore,\n        })\n        // console.log(`drop dice#${dice.id} -> ${dropEffect} effect`)\n\n        let dropAnimation = false\n        let dropPosition = null\n\n        if (dropEffect === \"reposition-in-rolled-area\") {\n          const closestRolledAreaPosition = closestRolledAreaPositionGetter(\n            dropDiceGesture.diceRectangle,\n            rolledAreaDomNode,\n          )\n          const highestRolledAreaZIndex = highestRolledAreaZIndexGetter(dice, {\n            dices,\n            diceRolledIds,\n          })\n          setDiceRolledAreaPosition(dice, closestRolledAreaPosition, highestRolledAreaZIndex)\n          // no animation needed, we drop exactly where we want it\n        } else if (dropEffect === \"back-to-rolled-area\") {\n          dropAnimation = true\n          dropPosition = rolledAreaDropPositionGetter(dice.rolledAreaPosition, rolledAreaDomNode)\n        } else if (dropEffect === \"keep\") {\n          const closestAvailableChestSlot = closestAvailableChestSlotGetter(dice, {\n            chestSlots,\n            rectangle: dropDiceGesture.diceRectangle,\n            chestDomNode,\n          })\n          keepDice(dice, closestAvailableChestSlot)\n          dropAnimation = true\n          dropPosition = chestSlotDropPositionGetter(closestAvailableChestSlot, chestDomNode)\n        } else if (dropEffect === \"reposition-in-chest\") {\n          const closestAvailableChestSlot = closestAvailableChestSlotGetter(dice, {\n            chestSlots,\n            rectangle: dropDiceGesture.diceRectangle,\n            chestDomNode,\n          })\n          const diceChestSlot = diceToChestSlot(dice, chestSlots)\n          if (diceChestSlot !== closestAvailableChestSlot) {\n            setDiceChestSlot(dice, closestAvailableChestSlot)\n            dropAnimation = true\n            dropPosition = chestSlotDropPositionGetter(closestAvailableChestSlot, chestDomNode)\n          }\n        } else if (dropEffect === \"back-to-chest\") {\n          const diceChestSlot = diceToChestSlot(dice, chestSlots)\n          dropAnimation = true\n          dropPosition = chestSlotDropPositionGetter(diceChestSlot, chestDomNode)\n        } else if (dropEffect === \"unkeep\") {\n          const closestRolledAreaPosition = closestRolledAreaPositionGetter(\n            dropDiceGesture.diceRectangle,\n            rolledAreaDomNode,\n          )\n          setDiceRolledAreaPosition(\n            dice,\n            closestRolledAreaPosition,\n            highestRolledAreaZIndexGetter(dice, { dices, diceRolledIds }),\n          )\n          unkeepDice(dice)\n          dropAnimation = true\n          dropPosition = rolledAreaDropPositionGetter(closestRolledAreaPosition, rolledAreaDomNode)\n        }\n\n        if (dropAnimation) {\n          dispatchDiceAnimation({\n            key: dice.id,\n            value: {\n              from: {\n                x: dropDiceGesture.diceRectangle.left,\n                y: dropDiceGesture.diceRectangle.top,\n              },\n              to: dropPosition,\n              onfinish: () => {\n                // at the end of dice animation, dice is flickering briely\n                // (moving somewhere on the page and going back to where it's supposed to be)\n                // the following setTimeout fixes this\n                // of course we should improve that because it's an hint there is a deeper\n                // issue to resolve.\n                setTimeout(() => {\n                  dispatchDiceAnimation({\n                    key: dice.id,\n                    value: null,\n                  })\n                })\n              },\n            },\n          })\n        }\n      },\n      [\n        diceIsInRolledArea,\n        chestSlots,\n        dropTargetRef,\n        rolledAreaDomNode,\n        chestDomNode,\n        scoreMarked,\n        threeSkullsOrMore,\n      ],\n    )\n\n    const onDiceDragEnd = React.useCallback(() => {\n      onDiceOverChestChange(null)\n      onDiceOverRolledAreaChange(null)\n    }, [onDiceOverChestChange, onDiceOverRolledAreaChange])\n\n    const props = {\n      key: dice.id,\n      ...propsFromLocation,\n      dice,\n      diceAnimation: diceAnimationState[dice.id],\n      witchCardEffectUsed,\n      disapear: diceIsGoingToBeCursed,\n      appear: diceIsInCursedArea,\n      onDiceClick,\n      onDiceDrag,\n      onDiceDrop,\n      onDiceDragEnd,\n    }\n\n    return React.useMemo(\n      () => <Dice {...props} />,\n      Object.keys(props).map((key) => props[key]),\n    )\n  })\n}\n\nconst getClickEffect = (\n  dice,\n  {\n    currentCard,\n    witchCardEffectUsed,\n    diceIsInRolledArea,\n    diceIsInCursedArea,\n    chestSlots,\n    hasDicesToCurse,\n    threeSkullsOrMore,\n    scoreMarked,\n  },\n) => {\n  if (diceIsInRolledArea) {\n    if (keepDiceAllowedGetter(dice, { hasDicesToCurse, threeSkullsOrMore, scoreMarked })) {\n      return \"keep\"\n    }\n    return \"none\"\n  }\n\n  if (diceIsInChestGetter(dice, chestSlots)) {\n    if (unkeepDiceAllowedGetter(dice, { threeSkullsOrMore, scoreMarked })) {\n      return \"unkeep\"\n    }\n    return \"none\"\n  }\n\n  if (diceIsInCursedArea) {\n    if (\n      uncurseDiceAllowedGetter(dice, {\n        currentCard,\n        witchCardEffectUsed,\n        scoreMarked,\n        threeSkullsOrMore,\n      })\n    ) {\n      return \"uncurse\"\n    }\n    return \"none\"\n  }\n\n  return \"none\"\n}\n\nconst getDropEffect = (\n  dice,\n  {\n    diceIsInRolledArea,\n    chestSlots,\n    dropTargetRef,\n    rolledAreaDomNode,\n    chestDomNode,\n    hasDicesToCurse,\n    threeSkullsOrMore,\n    scoreMarked,\n  },\n) => {\n  if (diceIsInRolledArea) {\n    if (dropTargetRef.current === rolledAreaDomNode) {\n      return \"reposition-in-rolled-area\"\n    }\n\n    if (dropTargetRef.current === chestDomNode) {\n      if (keepDiceAllowedGetter(dice, { hasDicesToCurse, threeSkullsOrMore, scoreMarked })) {\n        return \"keep\"\n      }\n      return \"back-to-rolled-area\"\n    }\n\n    return \"back-to-rolled-area\"\n  }\n\n  if (diceIsInChestGetter(dice, chestSlots)) {\n    if (dropTargetRef.current === chestDomNode) {\n      return \"reposition-in-chest\"\n    }\n\n    if (dropTargetRef.current === rolledAreaDomNode) {\n      if (unkeepDiceAllowedGetter(dice, { scoreMarked, threeSkullsOrMore })) {\n        return \"unkeep\"\n      }\n      return \"back-to-chest\"\n    }\n\n    return \"back-to-chest\"\n  }\n\n  return \"none\"\n}\n\nconst dropTargetGetter = ({ dragDiceGesture, chestDomNode, rolledAreaDomNode }) => {\n  const diceIsOverChest = domNodeCollidesWithRectangle(chestDomNode, dragDiceGesture.diceRectangle)\n  if (diceIsOverChest) {\n    return chestDomNode\n  }\n\n  const diceIsOverRolledArea = domNodeCollidesWithRectangle(\n    rolledAreaDomNode,\n    dragDiceGesture.diceRectangle,\n  )\n  if (diceIsOverRolledArea) {\n    return rolledAreaDomNode\n  }\n\n  return null\n}\n\nconst diceIsInRolledAreaGetter = (dice, diceRolledIds) => diceRolledIds.includes(dice.id)\nconst diceIsInChestGetter = (dice, chestSlots) =>\n  Object.keys(chestSlots).some((chestSlot) => {\n    const chestSlotContent = chestSlots[chestSlot]\n    return (\n      chestSlotContent && chestSlotContent.type === \"dice\" && chestSlotContent.value === dice.id\n    )\n  })\n// const diceIsInCursedAreaGetter = (dice, diceCursedIds) => diceCursedIds.includes(dice.id)\n\nconst keepDiceAllowedGetter = (dice, { hasDicesToCurse, threeSkullsOrMore, scoreMarked }) => {\n  if (diceIsOnSkull(dice)) {\n    return false\n  }\n\n  if (hasDicesToCurse) {\n    return false\n  }\n\n  if (threeSkullsOrMore) {\n    return false\n  }\n\n  if (scoreMarked) {\n    return false\n  }\n\n  return true\n}\nconst unkeepDiceAllowedGetter = (dice, { scoreMarked, threeSkullsOrMore }) => {\n  if (scoreMarked) {\n    return false\n  }\n\n  if (threeSkullsOrMore) {\n    return false\n  }\n\n  return true\n}\nconst uncurseDiceAllowedGetter = (\n  dice,\n  { currentCard, witchCardEffectUsed, scoreMarked, threeSkullsOrMore },\n) => {\n  if (!isWitchCard(currentCard)) {\n    return false\n  }\n\n  if (witchCardEffectUsed) {\n    return false\n  }\n\n  if (scoreMarked) {\n    return false\n  }\n\n  if (threeSkullsOrMore) {\n    return false\n  }\n\n  return true\n}\n\nconst rolledAreaDropPositionGetter = (rolledAreaPosition, rolledAreaDomNode) => {\n  const absoluteRolledAreaPositionRectangle = rectangleAbsoluteToDomNode(\n    {\n      left: rolledAreaPosition.x,\n      top: rolledAreaPosition.y,\n      right: 0,\n      bottom: 0,\n    },\n    rolledAreaDomNode,\n  )\n  return {\n    x: absoluteRolledAreaPositionRectangle.left,\n    y: absoluteRolledAreaPositionRectangle.top,\n  }\n}\n\nconst chestSlotDropPositionGetter = (chestSlot, chestDomNode) => {\n  const destinationSlotDomNode = chestSlotToChestSlotDomNode(chestSlot, chestDomNode)\n  const destinationSlotRectangle = getDomNodeRectangle(destinationSlotDomNode)\n  return {\n    // + 5 is because dice is centered in the chest slot\n    x: destinationSlotRectangle.left + 5,\n    y: destinationSlotRectangle.top + 5,\n  }\n}\n\nconst closestRolledAreaPositionGetter = (requestedRectangle, rolledAreaDomNode) => {\n  const rectangle = rectangleRelativeToDomNode(requestedRectangle, rolledAreaDomNode)\n  const closestRolledAreaPosition = {\n    x: rectangle.left,\n    y: rectangle.top,\n  }\n  return closestRolledAreaPosition\n}\n\nconst highestRolledAreaZIndexGetter = (dice, { diceRolledIds, dices }) => {\n  if (diceRolledIds.length === 0) {\n    return 1\n  }\n  const diceWithHighestZIndex = diceRolledIds.slice(1).reduce((previous, diceId) => {\n    const dice = dices[diceId]\n    const diceZIndex = dice.rolledAreaZIndex\n    if (diceZIndex > previous.rolledAreaZIndex) return dice\n    return previous\n  }, dices[diceRolledIds[0]])\n  if (diceWithHighestZIndex === dice) return dice.rolledAreaZIndex\n  return diceWithHighestZIndex.rolledAreaZIndex + 1\n}\n\nconst firstAvailableChestSlotGetter = (chestSlots) => {\n  const firstAvailableChestSlot = Object.keys(chestSlots).find((chestSlot) => {\n    const chestSlotContent = chestSlots[chestSlot]\n    return !chestSlotContent\n  })\n  return firstAvailableChestSlot\n}\n\nconst closestAvailableChestSlotGetter = (dice, { chestSlots, rectangle, chestDomNode }) => {\n  const chestSlotMap = new Map()\n  const domNodeCandidates = []\n  Object.keys(chestSlots).forEach((chestSlot) => {\n    const chestSlotContent = chestSlots[chestSlot]\n    const chestSlotIsEmpty = !chestSlotContent\n    if (\n      chestSlotIsEmpty ||\n      (chestSlotContent.type === \"dice\" && chestSlotContent.value === dice.id)\n    ) {\n      const chestSlotDomNode = chestSlotToChestSlotDomNode(chestSlot, chestDomNode)\n      chestSlotMap.set(chestSlotDomNode, chestSlot)\n      domNodeCandidates.push(chestSlotDomNode)\n    }\n  })\n  const closestDomNode = findDomNodeClosestToRectangle(domNodeCandidates, rectangle)\n  const closestChestSlot = chestSlotMap.get(closestDomNode)\n  return closestChestSlot\n}\n\nconst diceToChestSlot = (dice, chestSlots) => {\n  const diceChestSlot = Object.keys(chestSlots).find((chestSlot) => {\n    const chestSlotContent = chestSlots[chestSlot]\n    return (\n      chestSlotContent && chestSlotContent.type === \"dice\" && chestSlotContent.value === dice.id\n    )\n  })\n  return diceChestSlot\n}\n\nconst chestSlotToChestSlotDomNode = (chestSlot, chestDomNode) => {\n  const chestSlotDomNode = chestDomNode.querySelector(`[data-chest-slot=\"${chestSlot}\"]`)\n  return chestSlotDomNode\n}\n\nconst diceToLocation = (dice, { chestSlots, diceRolledIds, diceCursedIds }) => {\n  const diceChestSlot = Object.keys(chestSlots).find(\n    (chestSlot) =>\n      chestSlots[chestSlot] &&\n      chestSlots[chestSlot].type === \"dice\" &&\n      chestSlots[chestSlot].value === dice.id,\n  )\n  if (diceChestSlot) {\n    return {\n      type: \"chest-slot\",\n      value: diceChestSlot,\n    }\n  }\n\n  if (diceRolledIds.includes(dice.id)) {\n    return {\n      type: \"rolled-area\",\n      value: {\n        ...dice.rolledAreaPosition,\n        rotation: dice.rotation,\n        zIndex: dice.rolledAreaZIndex,\n      },\n    }\n  }\n\n  if (diceCursedIds.includes(dice.id)) {\n    return {\n      type: \"cursed-area\",\n      value: undefined,\n    }\n  }\n\n  return {\n    type: \"offscreen-area\",\n  }\n}\n\nconst diceLocationToProps = (\n  { type, value },\n  { chestDomNode, rolledAreaDomNode, cursedAreaDomNode, offscreenDomNode },\n) => {\n  if (type === \"chest-slot\") {\n    return {\n      parentNode: chestDomNode.querySelector(`[data-chest-slot=\"${value}\"]`),\n      zIndex: undefined,\n      rotation: 0,\n      x: undefined,\n      y: undefined,\n      draggable: true,\n    }\n  }\n\n  if (type === \"rolled-area\") {\n    return {\n      parentNode: rolledAreaDomNode,\n      zIndex: value.zIndex,\n      rotation: value.rotation,\n      x: value.x,\n      y: value.y,\n      draggable: true,\n    }\n  }\n\n  if (type === \"cursed-area\") {\n    return {\n      parentNode: cursedAreaDomNode,\n      zIndex: undefined,\n      rotation: 0,\n      x: undefined,\n      y: undefined,\n      draggable: false,\n    }\n  }\n\n  return {\n    parentNode: offscreenDomNode,\n    zIndex: undefined,\n    rotation: 0,\n    x: undefined,\n    y: undefined,\n    draggable: false,\n  }\n}\n",
    "/* eslint-disable import/max-dependencies */\nimport React from \"react\"\n\nimport { useCurrentCardId, useAnimationsDisabled } from \"src/main.store.js\"\nimport { Image } from \"src/generic/Image.jsx\"\nimport { useCardDeck } from \"src/round/round.selectors.js\"\nimport { useDrawCard, useShuffleDeck } from \"src/cards/cards.actions.js\"\nimport { useActivateCurrentCard } from \"src/round/round.actions.js\"\n\nimport { cardsRules } from \"src/cards/cards-rules.js\"\nimport { Dialog } from \"src/dialog/dialog.component.jsx\"\nimport { cardIdToCard, cardToImageUrl, cardDefaultUrl } from \"src/cards/cards.js\"\nimport { SmallCard } from \"src/cards/SmallCard.jsx\"\nimport { getDomNodeRectangle } from \"src/dom/dom.position.js\"\n\nexport const DrawCardDialog = ({ dialogIsOpen, closeDialog, headerSmallCardRef }) => {\n  const cardDeck = useCardDeck()\n  const currentCardId = useCurrentCardId()\n  const currentCard = cardIdToCard(currentCardId) || null\n\n  const backCardRef = React.useRef()\n  const topCardRef = React.useRef()\n  const smallCardRef = React.useRef()\n\n  const shuffleCardsText = \"Paquet de cartes épuisé. Mélangez-le pour pouvoir piocher à nouveau !\"\n  const drawCardText = \"Piochez une carte pour le tour suivant.\"\n\n  return (\n    <Dialog\n      className=\"draw-card-dialog dialog-spacing-10 dialog-spacing-fluid\"\n      isOpen={dialogIsOpen}\n      onRequestClose={closeDialog}\n      requestCloseOnClickOutside={false}\n    >\n      <div className=\"dialog-content\">\n        <div className=\"dialog-body\">\n          <div className=\"dialog-label\">\n            {cardDeck.length === 0 && !currentCard && shuffleCardsText}\n            {cardDeck.length !== 0 && !currentCard && drawCardText}\n            {currentCard && <span className=\"card-name\">{cardsRules[currentCard.type].name}</span>}\n          </div>\n          <div className=\"card-area\">\n            <div\n              style={{\n                position: \"relative\",\n              }}\n            >\n              <BackCard\n                backCardRef={backCardRef}\n                currentCard={currentCard}\n                remainingCardCount={cardDeck.length}\n              />\n              <TopCard\n                topCardRef={topCardRef}\n                smallCardRef={smallCardRef}\n                currentCard={currentCard}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"dialog-actions\">\n          <DeckButton backCardRef={backCardRef} cardDeck={cardDeck} currentCard={currentCard} />\n          {currentCard ? (\n            <StartButton\n              headerSmallCardRef={headerSmallCardRef}\n              smallCardRef={smallCardRef}\n              backCardRef={backCardRef}\n              topCardRef={topCardRef}\n              currentCard={currentCard}\n              closeDialog={closeDialog}\n            />\n          ) : null}\n        </div>\n      </div>\n    </Dialog>\n  )\n}\n\nconst BackCard = ({ backCardRef, currentCard, remainingCardCount }) => {\n  return (\n    <div ref={backCardRef} className=\"card default-card\" style={{ background: \"none\" }}>\n      <Image src={cardDefaultUrl} width=\"150\" />\n      {currentCard ? null : <div className=\"remaining-cards-number\">{remainingCardCount}</div>}\n    </div>\n  )\n}\n\nconst TopCard = ({ topCardRef, smallCardRef, currentCard }) => {\n  if (!currentCard) {\n    return null\n  }\n\n  return (\n    <>\n      <div className=\"card current-card\" ref={topCardRef}>\n        <div className=\"flip-card\">\n          <div className=\"flip-card-inner\">\n            <div className=\"flip-card-front\">\n              <Image className=\"card default-card\" src={cardDefaultUrl} />\n            </div>\n            <div className=\"flip-card-back\">\n              <Image\n                className=\"card-img\"\n                src={cardToImageUrl(currentCard)}\n                width=\"150\"\n                alt={currentCard.type}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"small-card\">\n        <SmallCard card={currentCard} ref={smallCardRef} />\n      </div>\n    </>\n  )\n}\n\nconst DeckButton = ({ backCardRef, cardDeck, currentCard }) => {\n  if (currentCard) {\n    return null\n  }\n\n  if (cardDeck.length === 0) {\n    return <ButtonShuffleDeck backCardRef={backCardRef} />\n  }\n\n  return <ButtonDrawCard />\n}\n\nconst ButtonDrawCard = () => {\n  const drawCard = useDrawCard()\n\n  return (\n    <button className=\"button-card-main button-draw-card\" onClick={drawCard}>\n      Piocher\n    </button>\n  )\n}\n\nconst ButtonShuffleDeck = ({ backCardRef }) => {\n  const animationsDisabled = useAnimationsDisabled()\n  const shuffleDeck = useShuffleDeck()\n  const [shufflePending, sufflePendingSetter] = React.useState(false)\n\n  const startShuffle = () => {\n    sufflePendingSetter(true)\n  }\n\n  React.useEffect(() => {\n    if (!shufflePending) {\n      return () => {}\n    }\n\n    shuffleDeck()\n\n    if (animationsDisabled) {\n      sufflePendingSetter(false)\n      return () => {}\n    }\n    return animateDeckShuffle({\n      backCard: backCardRef.current,\n      duration: 1000,\n      onfinish: () => {\n        sufflePendingSetter(false)\n      },\n    })\n  }, [shufflePending])\n\n  return (\n    <button className=\"button-card-main button-shuffle-deck\" onClick={startShuffle}>\n      Mélanger\n    </button>\n  )\n}\n\nconst animateDeckShuffle = ({ backCard, duration, onfinish }) => {\n  backCard.setAttribute(\"shaking-deck\", \"\")\n  const timeoutId = setTimeout(() => {\n    backCard.removeAttribute(\"shaking-deck\", \"\")\n    onfinish()\n  }, duration)\n  return () => {\n    backCard.removeAttribute(\"shaking-deck\", \"\")\n    clearTimeout(timeoutId)\n  }\n}\n\nconst StartButton = ({ headerSmallCardRef, smallCardRef, backCardRef, topCardRef }) => {\n  const animationsDisabled = useAnimationsDisabled()\n  const activateCurrentCard = useActivateCurrentCard()\n\n  const [cardActivating, cardActivatingSetter] = React.useState(false)\n\n  const start = () => {\n    if (cardActivating) {\n      return\n    }\n    cardActivatingSetter(true)\n  }\n\n  React.useEffect(() => {\n    if (!cardActivating) {\n      return () => {}\n    }\n\n    if (animationsDisabled) {\n      activateCurrentCard()\n      return () => {}\n    }\n\n    return animateCardActivation({\n      headerSmallCard: headerSmallCardRef.current,\n      smallCard: smallCardRef.current,\n      backCard: backCardRef.current,\n      topCard: topCardRef.current,\n      duration: 500,\n      onfinish: () => {\n        activateCurrentCard()\n      },\n    })\n  }, [cardActivating])\n\n  return (\n    <button\n      className=\"button-card-main button-activate-card\"\n      onClick={() => {\n        start()\n      }}\n    >\n      Commencer\n    </button>\n  )\n}\n\nconst animateCardActivation = ({\n  headerSmallCard,\n  topCard,\n  backCard,\n  smallCard,\n  duration,\n  onfinish,\n}) => {\n  backCard.style.opacity = 0\n\n  const headerSmallCardRectangle = getDomNodeRectangle(headerSmallCard)\n\n  const topCardAnimation = topCard.animate(\n    [\n      {\n        transform: \"scale(1)\",\n        opacity: 1,\n      },\n      {\n        transform: \"scale(0)\",\n        opacity: 0,\n      },\n    ],\n    {\n      duration,\n      fill: \"forwards\",\n    },\n  )\n\n  const smallCardAnimation = smallCard.animate(\n    [\n      {\n        transform: \"scale(0)\",\n        opacity: 0,\n        position: \"fixed\",\n        top: `${headerSmallCardRectangle.top}.px`,\n        left: `${headerSmallCardRectangle.left}.px`,\n      },\n      {\n        transform: \"scale(1)\",\n        opacity: 1,\n        position: \"fixed\",\n        top: `${headerSmallCardRectangle.top}.px`,\n        left: `${headerSmallCardRectangle.left}.px`,\n      },\n    ],\n    {\n      duration,\n      fill: \"forwards\",\n    },\n  )\n  smallCardAnimation.onfinish = onfinish\n\n  return () => {\n    topCardAnimation.cancel()\n    smallCardAnimation.cancel()\n  }\n}\n",
    "/* eslint-disable import/max-dependencies */\nimport React from \"react\"\n\nimport { RoundEffects } from \"src/round/round.effects.js\"\nimport { CardsEffects } from \"src/cards/cards.effects.js\"\nimport { DiceOnGoing } from \"src/dice-ongoing/DiceOnGoing.jsx\"\nimport { Chest } from \"src/chest/chest.component.jsx\"\nimport { Header } from \"src/header/Header.jsx\"\nimport { Footer } from \"src/footer/Footer.jsx\"\nimport { SkullIsland } from \"src/skull-island/SkullIsland.jsx\"\nimport { DiceContainer } from \"src/dices/DiceContainer.jsx\"\nimport { useSignal } from \"src/helper/signal.js\"\nimport { DrawCardDialog } from \"src/footer/DrawCardDialog.jsx\"\nimport { useCurrentCardActivated } from \"src/main.store.js\"\n\nexport const Round = ({ openScoreboard, onRoundStart, onRoundOver }) => {\n  const currentCardActivated = useCurrentCardActivated()\n\n  const [roundMounted, roundMountedSetter] = React.useState(false)\n\n  React.useEffect(() => {\n    onRoundStart()\n  }, [])\n\n  const [diceOverRolledAreaListener, diceOverRolledAreaEmitter] = useSignal()\n  const [diceOverChestListener, diceOverChestEmitter] = useSignal()\n\n  const headerSmallCardRef = React.useRef()\n\n  return (\n    <div className=\"round-container\">\n      <CardsEffects />\n      <Header openScoreboard={openScoreboard} headerSmallCardRef={headerSmallCardRef} />\n      {currentCardActivated ? (\n        <RoundGameBoard\n          diceOverRolledAreaListener={diceOverRolledAreaListener}\n          diceOverChestListener={diceOverChestListener}\n          openScoreboard={openScoreboard}\n          onRoundOver={onRoundOver}\n          onRoundMounted={(refs) => {\n            roundMountedSetter(refs)\n          }}\n        />\n      ) : null}\n      {roundMounted ? (\n        <DiceContainer\n          offscreenDomNode={roundMounted.offscreenDomNode}\n          chestDomNode={roundMounted.chestDomNode}\n          rolledAreaDomNode={roundMounted.rolledAreaDomNode}\n          cursedAreaDomNode={roundMounted.cursedAreaDomNode}\n          onDiceOverChestChange={diceOverChestEmitter}\n          onDiceOverRolledAreaChange={diceOverRolledAreaEmitter}\n        />\n      ) : null}\n      <DrawCardDialog\n        dialogIsOpen={!currentCardActivated}\n        headerSmallCardRef={headerSmallCardRef}\n      />\n    </div>\n  )\n}\n\nconst RoundGameBoard = ({\n  diceOverRolledAreaListener,\n  diceOverChestListener,\n  onRoundMounted,\n  onRoundOver,\n}) => {\n  const rolledAreaRef = React.useRef(null)\n  const chestRef = React.useRef(null)\n  const cursedAreaRef = React.useRef(null)\n  const offscreenRef = React.useRef(null)\n\n  React.useEffect(() => {\n    onRoundMounted({\n      rolledAreaDomNode: rolledAreaRef.current,\n      chestDomNode: chestRef.current,\n      cursedAreaDomNode: cursedAreaRef.current,\n      offscreenDomNode: offscreenRef.current,\n    })\n  }, [])\n\n  return (\n    <>\n      <RoundEffects />\n      <div className=\"chest-and-skulls\">\n        <Chest chestRef={chestRef} diceOverChestListener={diceOverChestListener} />\n        <SkullIsland cursedAreaRef={cursedAreaRef} />\n      </div>\n      <DiceOnGoing\n        rolledAreaRef={rolledAreaRef}\n        offscreenRef={offscreenRef}\n        diceOverRolledAreaListener={diceOverRolledAreaListener}\n      />\n      <Footer onRoundOver={onRoundOver} rolledAreaRef={rolledAreaRef} />\n    </>\n  )\n}\n",
    "import React from \"react\"\nimport { Image } from \"src/generic/Image.jsx\"\nimport { useStartPlayerRound } from \"src/round/round.actions.js\"\nimport { Dialog } from \"src/dialog/dialog.component.jsx\"\nimport { CloseIcon } from \"src/dialog/CloseIcon.jsx\"\n\nexport const StartPlayerRoundDialog = ({ closeDialog, dialogIsOpen, player }) => {\n  const startPlayerRound = useStartPlayerRound()\n  return (\n    <Dialog\n      className=\"score-board-dialog dialog-spacing-10 dialog-spacing-fluid dialog-spacing-left-fixed dialog-spacing-right-fixed\"\n      isOpen={dialogIsOpen}\n      onRequestClose={closeDialog}\n      requestCloseOnClickOutside={true}\n    >\n      <div className=\"dialog-content\">\n        <div className=\"dialog-close\" onClick={closeDialog}>\n          <CloseIcon />\n        </div>\n        <div className=\"dialog-body\">\n          <div>\n            Au tour de\n            <div className=\"dialog-label\">{player.character.name}</div>\n            <Image\n              className=\"player-img\"\n              src={player && player.character.img}\n              alt=\"player\"\n              width=\"40\"\n              height=\"40\"\n              style={{\n                boxShadow: `inset 0px 0px 0px 4px ${(player && player.character.color) || \"black\"}`,\n              }}\n            />\n          </div>\n          <div className=\"dialog-actions\">\n            <button\n              onClick={() => {\n                closeDialog()\n                startPlayerRound(player)\n              }}\n            >\n              Jouer\n            </button>\n          </div>\n        </div>\n      </div>\n    </Dialog>\n  )\n}\n",
    "import React from \"react\"\nimport { Image } from \"src/generic/Image.jsx\"\nimport { usePlayers, useRoundStarted } from \"src/main.store.js\"\nimport { useCurrentPlayer } from \"src/round/round.selectors.js\"\nimport { StartPlayerRoundDialog } from \"src/score-board/StartPlayerRoundDialog.jsx\"\nimport { symbolSkullUrl, symbolToImageUrl } from \"src/symbols/symbols.js\"\n\nconst winTreasureUrl = new URL(\"/src/score-board/win-treasure.png\", import.meta.url)\nconst boarUrl = new URL(\"/src/score-board/boat.png\", import.meta.url)\nconst SCORE_MAX = 6000\n\nconst pathList = {\n  path1:\n    \"M39.582,739.564c0-91.824,39.191-96.32,38.045-166.691s-30.042-70.37-47.326-161.729s38.128-86.388,31.276-186.42C55.405,134.602-3.014,89.176,8.812,129.825c5.333,18.333,30.77-21,30.77-129.825\",\n  path2:\n    \"M39.582,739.564c0-113.074-5.437-166.074-8.437-198.074s36-20.667,33.019-2c-1.796,11.248-24.583,13.333-23.699-22c1.229-49.158,22.68-111,23.68-169s-38-95-46-181S39.582,0,39.582,0\",\n  path3:\n    \"M39.582,739.564c0-71.926-15.437-155.074-17.437-253.074s30-185,31.087-217s-31.087-46-31.087-26s33,10,31-32s-31-110-31-144S39.582,0,39.582,0\",\n  path4:\n    \"M39.582,739.564c0-113.074-5.437-166.074-8.437-198.074s36-20.667,33.019-2c-1.796,11.248-24.583,13.333-23.699-22c1.229-49.158,22.68-111,23.68-169s-38-95-46-181S39.582,0,39.582,0\",\n}\n\nexport const ScoreBoard = ({ openedByUser, closeScoreboard, playerAnimation }) => {\n  const players = usePlayers()\n  const currentPlayer = useCurrentPlayer()\n  const roundStarted = useRoundStarted()\n\n  // dialogue StartPlayerRoundDialog\n  const [startPlayerRoundDialogIsOpen, startPlayerRoundDialogIsOpenSetter] = React.useState(false)\n  const openStartPlayerRoundDialog = () => {\n    startPlayerRoundDialogIsOpenSetter(true)\n  }\n  const closeStartPlayerRoundDialog = () => {\n    startPlayerRoundDialogIsOpenSetter(false)\n  }\n\n  const nextPlayer = getNextPlayer()\n\n  return (\n    <div className=\"score-board-container\">\n      {openedByUser && (\n        <div className=\"cross\" onClick={closeScoreboard}>\n          X\n        </div>\n      )}\n      {!roundStarted && !currentPlayer && (\n        <div className=\"action-container\">\n          <button\n            className=\"score-board-action\"\n            onClick={() => {\n              openStartPlayerRoundDialog()\n            }}\n          >\n            Commencer à jouer\n          </button>\n        </div>\n      )}\n      <Image\n        className=\"win-treasure-img\"\n        src={winTreasureUrl}\n        alt=\"win-treasure\"\n        width=\"230\"\n        height=\"150\"\n      />\n      <div className=\"users-path\">\n        {players.map((player) => (\n          <PlayerPath\n            key={player.id}\n            player={player}\n            openedByUser={openedByUser}\n            pathCoordinates={pathList[`path${player.id}`]}\n            score={player.score}\n            character={player.character}\n            openStartPlayerRoundDialog={openStartPlayerRoundDialog}\n            isCurrentPlayer={currentPlayer && player.id === currentPlayer.id}\n            playerAnimation={playerAnimation}\n          />\n        ))}\n      </div>\n      <StartPlayerRoundDialog\n        dialogIsOpen={startPlayerRoundDialogIsOpen}\n        closeDialog={closeStartPlayerRoundDialog}\n        player={nextPlayer}\n      />\n    </div>\n  )\n}\n\nconst getNextPlayer = () => {\n  const currentPlayer = useCurrentPlayer()\n  const players = usePlayers()\n\n  let nextPlayer\n  if (currentPlayer) {\n    const currentPlayerIndex = players.findIndex((player) => player.id === currentPlayer.id)\n    nextPlayer =\n      currentPlayerIndex === players.length - 1 ? players[0] : players[currentPlayerIndex + 1]\n  } else {\n    nextPlayer = players[0]\n  }\n  return nextPlayer\n}\n\nconst PlayerPath = ({\n  pathCoordinates,\n  player,\n  openedByUser,\n  character,\n  score,\n  openStartPlayerRoundDialog,\n  playerAnimation,\n}) => {\n  const pathForegroundElementRef = React.useRef(null)\n  const boatElementRef = React.useRef(null)\n  const animation3SkullsElementRef = React.useRef(null)\n  const animationSymbolsElementRef = React.useRef(null)\n\n  const nextPlayer = getNextPlayer()\n\n  const [scoreAnimation, scoreAnimationSetter] = React.useState(null)\n  const [symbolsAnimation, symbolsAnimationSetter] = React.useState([])\n  const [skullsAnimation, skullsAnimationSetter] = React.useState(false)\n\n  React.useEffect(() => {\n    if (playerAnimation && playerAnimation.player === player) {\n      if (playerAnimation.roundOverReason === \"user-collect\") {\n        scoreAnimationSetter(playerAnimation.score)\n        symbolsAnimationSetter(playerAnimation.symbolsInChest)\n      } else if (playerAnimation.roundOverReason === \"3-skulls\") {\n        skullsAnimationSetter(true)\n      } else if (playerAnimation.roundOverReason === \"chalenge-failed\") {\n        scoreAnimationSetter(playerAnimation.score)\n      }\n    } else {\n      scoreAnimationSetter(null)\n    }\n  }, [playerAnimation, player])\n\n  // // symbols animation\n  // React.useEffect(() => {\n  //   if (symbolsAnimation) {\n  //     console.log(symbolsAnimation)\n  //     //  HERE\n  //   }\n  // }, [symbolsAnimation])\n\n  // score progress animation\n  React.useEffect(() => {\n    if (!scoreAnimation) return undefined\n    const { from, to } = scoreAnimation\n\n    // Boat animation along the path\n    const boatElement = boatElementRef.current\n    const boatAnimation = boatElement.animate(\n      [\n        { offsetDistance: ratioToOffsetDistance(from / SCORE_MAX) },\n        { offsetDistance: ratioToOffsetDistance(to / SCORE_MAX) },\n      ],\n      {\n        duration: 1000,\n        fill: \"forwards\",\n      },\n    )\n\n    // Symbols animation along the path (if exist)\n    const symbolsElement = animationSymbolsElementRef.current\n    let symbolsAnimation = null\n    if (symbolsElement) {\n      symbolsAnimation = symbolsElement.animate(\n        [\n          { offsetDistance: ratioToOffsetDistance(from / SCORE_MAX) },\n          { offsetDistance: ratioToOffsetDistance(to / SCORE_MAX) },\n        ],\n        {\n          duration: 1000,\n          fill: \"forwards\",\n        },\n      )\n    }\n\n    // path animation\n    const pathForegroundElement = pathForegroundElementRef.current\n    const pathLength = pathForegroundElement.getTotalLength()\n    console.log(\"from\", from)\n    console.log(\"to\", to)\n    const pathForegroundAnimation = pathForegroundElement.animate(\n      [\n        { strokeDashoffset: ratioToStrokeDashOffset(from / SCORE_MAX, pathLength) },\n        { strokeDashoffset: ratioToStrokeDashOffset(to / SCORE_MAX, pathLength) },\n      ],\n      {\n        duration: 1000,\n        fill: \"forwards\",\n      },\n    )\n\n    pathForegroundAnimation.onfinish = () => {\n      if (boatAnimation.playState === \"finished\") scoreAnimationSetter(null)\n    }\n    boatAnimation.onfinish = () => {\n      if (pathForegroundAnimation.playState === \"finished\") scoreAnimationSetter(null)\n    }\n\n    return () => {\n      pathForegroundAnimation.cancel()\n      boatAnimation.cancel()\n      if (symbolsAnimation) symbolsAnimation.cancel()\n    }\n  }, [scoreAnimation])\n\n  React.useEffect(() => {\n    // path-foreground line fill\n    const pathForegroundElement = pathForegroundElementRef.current\n    const pathLength = pathForegroundElement.getTotalLength()\n    pathForegroundElement.style.strokeDasharray = pathLength\n    pathForegroundElement.style.strokeDashoffset = ratioToStrokeDashOffset(\n      score / SCORE_MAX,\n      pathLength,\n    )\n  }, [score])\n\n  return (\n    <div className=\"user-path\">\n      <svg viewBox=\"0 0 79.164 739.564\" width=\"50\" height=\"450\" fill=\"none\" stroke=\"none\">\n        <path d={pathCoordinates} className=\"path-background\" />\n        <path ref={pathForegroundElementRef} d={pathCoordinates} className=\"path-foreground\" />\n        <g className=\"score-indicator\">\n          <image\n            ref={boatElementRef}\n            href={boarUrl}\n            width=\"26\"\n            height=\"26\"\n            className=\"boat\"\n            style={{\n              offsetPath: `path('${pathCoordinates}')`,\n              offsetDistance: ratioToOffsetDistance(score / SCORE_MAX),\n            }}\n          />\n          {symbolsAnimation && symbolsAnimation.length > 0 && (\n            <g\n              className=\"animation-symbols\"\n              ref={animationSymbolsElementRef}\n              style={{\n                offsetPath: `path('${pathCoordinates}')`,\n                offsetDistance: ratioToOffsetDistance(score / SCORE_MAX),\n              }}\n            >\n              {symbolsAnimation.map((symbol, index) => (\n                <image\n                  key={index}\n                  width=\"30\"\n                  height=\"30\"\n                  className={`symbol symbol-${index + 1}`}\n                  href={symbolToImageUrl(symbol)}\n                />\n              ))}\n            </g>\n          )}\n        </g>\n      </svg>\n      <div className=\"speech-bubble\">{score}</div>\n      <div\n        className={`user-avatar ${\n          nextPlayer.character.id === character.id && !openedByUser ? \"next-player\" : \"\"\n        }`}\n        onClick={() => {\n          if (nextPlayer.character.id === character.id && !openedByUser)\n            openStartPlayerRoundDialog()\n        }}\n      >\n        {skullsAnimation && (\n          <div className=\"animation-3skulls\" ref={animation3SkullsElementRef}>\n            <ThreeSkullsAnimated />\n          </div>\n        )}\n        <Avatar character={character} />\n      </div>\n    </div>\n  )\n}\n\nconst ratioToOffsetDistance = (ratio) => `${ratio * 100}%`\n\nconst ratioToStrokeDashOffset = (ratio, pathLength) => pathLength - ratio * pathLength\n\nconst ThreeSkullsAnimated = () =>\n  new Array(3)\n    .fill(\"\")\n    .map((item, index) => (\n      <Image\n        key={index}\n        width=\"30\"\n        height=\"30\"\n        className={`skull skull-${index + 1}`}\n        src={symbolSkullUrl}\n        animateLoaded={false}\n      />\n    ))\n\nconst Avatar = ({ character }) => (\n  <Image\n    className=\"player-img\"\n    src={character.img}\n    alt=\"player\"\n    width=\"40\"\n    height=\"40\"\n    style={{\n      boxShadow: `inset 0px 0px 0px 4px ${character.color || \"black\"}`,\n    }}\n  />\n)\n",
    "import React from \"react\"\nimport { createAction } from \"src/main.store.js\"\n\nexport const GameConfiguration = () => {\n  const setPlayerCount = useSetPlayerCount()\n\n  return (\n    <div className=\"game-configuration\">\n      <div className=\"background-image\"/>\n      <div className=\"content\">\n        <div className=\"title\">A l’abordage !</div>\n        <div className=\"subtitle\">Combien de joueurs participent à l’aventure ?</div>\n        <div className=\"buttons\">\n        {[1, 2, 3, 4, 5].map((playerCount) => {\n          return (\n            <button\n              key={playerCount}\n              onClick={() => {\n                setPlayerCount(playerCount)\n              }}\n            >\n              {playerCount}\n            </button>\n          )\n        })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst useSetPlayerCount = createAction((state, playerCount) => {\n  return {\n    ...state,\n    players: new Array(playerCount).fill(\"\").map((_, index) => {\n      return {\n        id: index + 1,\n        number: index + 1,\n        score: 0,\n      }\n    }),\n  }\n})\n",
    "const luffyUrl = new URL(\"/src/players/Luffy.png\", import.meta.url).href\nconst missFortuneUrl = new URL(\"/src/players/MissFortune.png\", import.meta.url).href\nconst jackSparrowUrl = new URL(\"/src/players/JackSparrow.png\", import.meta.url).href\nconst barbeRougeUrl = new URL(\"/src/players/BarbeRouge.png\", import.meta.url).href\nconst ginetteBouletteUrl = new URL(\"/src/players/GinetteBoulette.png\", import.meta.url).href\nconst capitaineCrochetUrl = new URL(\"/src/players/CapitaineCrochet.png\", import.meta.url).href\n\nexport const createPlayers = (characters) => {\n  return characters.map((character, index) => {\n    return {\n      id: index + 1,\n      character,\n      score: 0,\n    }\n  })\n}\n\nexport const CHARACTERS = [\n  { id: 1, name: \"Luffy\", color: \"#ef9620\", img: luffyUrl },\n  { id: 2, name: \"Miss Fortune\", color: \"#d90f1b\", img: missFortuneUrl },\n  { id: 3, name: \"Jack Sparrow\", color: \"#007033\", img: jackSparrowUrl },\n  { id: 4, name: \"Barbe Rouge\", color: \"#7baac9\", img: barbeRougeUrl },\n  { id: 5, name: \"Ginette Boulette\", color: \"#e2500c\", img: ginetteBouletteUrl },\n  { id: 6, name: \"Capitaine Crochet\", color: \"#952460\", img: capitaineCrochetUrl },\n]\n",
    "import React from \"react\"\nimport { CHARACTERS } from \"src/players/players.main.js\"\nimport { Image } from \"src/generic/Image.jsx\"\nimport { usePlayers, createAction } from \"src/main.store.js\"\nimport { mixDeck, cardToSmallImageUrl, CARD_TWO_SWORDS_CHALLENGE } from \"src/cards/cards.js\"\nimport { startJavaScriptAnimation } from \"src/animation/startJavaScriptAnimation.js\"\n\nexport const CharacterSelection = ({ players }) => {\n  const setPlayerCharacter = useSetPlayerCharacter()\n  const startGame = useStartGame()\n  const playerWithoutCharacter = players.find((player) => !player.character)\n  scrollEffect()\n\n  React.useEffect(() => {\n    scrollEffect()\n  }, [])\n\n  return (\n    <div className=\"character-selection-page\">\n      <CrewMembers />\n      {playerWithoutCharacter && (\n        <>\n          <p>Joueur {playerWithoutCharacter.number} : quel pirate êtes vous ?</p>\n          <div className=\"characters-container\" id=\"menu-wrapper\">\n            <div className=\"characters menu\">\n              {CHARACTERS.map((character) => {\n                return (\n                  <div\n                    className={`character item ${\n                      characterIsAvailable(character, players) ? \"\" : \"disabled\"\n                    }`}\n                    key={character.id}\n                    onClick={(event) => {\n                      if (characterIsAvailable(character, players)) {\n                        event.target.animate(\n                          [\n                            { transform: \"scale(1)\" },\n                            { transform: \"scale(1.3)\" },\n                            { transform: \"scale(1)\" },\n                          ],\n                          {\n                            duration: 400,\n                            fill: \"forwards\",\n                          },\n                        )\n                        setPlayerCharacter(playerWithoutCharacter, character)\n                        }\n                    }}\n                  >\n                    <Image\n                      className=\"character-img\"\n                      width=\"40\"\n                      height=\"40\"\n                      src={character && character.img}\n                      alt=\"player\"\n                      style={{\n                        border: `4px solid ${(character && character.color) || \"black\"}`,\n                      }}\n                    />\n                    <span>{character.name}</span>\n                  </div>\n                )\n              })}\n            </div>\n            <div className=\"paddles\">\n              <button className=\"left-paddle paddle hidden\">{\"<\"}</button>\n              <button\n                className=\"right-paddle paddle\"\n                onClick={() => {\n                  scrollEffect()\n                }}\n              >\n                {\">\"}\n              </button>\n            </div>\n          </div>\n        </>\n      )}\n\n      {!playerWithoutCharacter && (\n        <div className=\"crew-completed\">\n          <p>L’équipage est au complet !</p>\n          <Image style={{ 'opacity': 0.5 }} src={cardToSmallImageUrl({ type: CARD_TWO_SWORDS_CHALLENGE })} />\n          <button\n            onClick={() => {\n              startGame()\n            }}\n          >\n            Démarrer la partie\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst CrewMembers = () => {\n  const players = usePlayers()\n\n  return (\n    <div className={`crew ${players.length > 3 ? \"large-crew\" : \"\"}`}>\n      <div className=\"title\">Votre equipage:</div>\n      <ul>\n        {players.map((player) => {\n          return (\n            <li key={player.id}>\n              {player.character ? (\n                <Image\n                  className=\"crew-member-img\"\n                  width=\"40px\"\n                  height=\"40px\"\n                  src={player.character && player.character.img}\n                  alt=\"player\"\n                  style={{\n                    border: `4px solid ${(player.character && player.character.color) || \"black\"}`,\n                  }}\n                  loadWhenIntersecting={false}\n                />\n              ) : (\n                <div className=\"placeholder-img\"></div>\n              )}\n              <span>{player.character ? player.character.name : `Joueur${player.number}`}</span>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nconst useStartGame = createAction((state) => {\n  const { cardIds } = state\n  return {\n    ...state,\n    gameStarted: true,\n    cardIds: mixDeck(cardIds),\n  }\n})\n\nconst characterIsAvailable = (character, players) => {\n  return !players.some((player) => player.character && player.character.name === character.name)\n}\n\nconst useSetPlayerCharacter = createAction((state, player, character) => {\n  const { players } = state\n  player.character = character\n  return {\n    ...state,\n    players: [...players],\n  }\n})\n\nconst scrollEffect = () => {\n  var scrollDuration = 300\n  var itemsLength = document.getElementsByClassName(\"item\").length\n  var itemSize = 123\n\n  var getMenuWrapperSize = function () {\n    return document.getElementById(\"menu-wrapper\")\n      ? document.getElementById(\"menu-wrapper\").offsetWidth\n      : null\n  }\n  var menuWrapperSize = getMenuWrapperSize()\n  var getMenuSize = function () {\n    return itemsLength * itemSize\n  }\n  var menuSize = getMenuSize()\n  window.onresize = () => {\n    menuWrapperSize = getMenuWrapperSize()\n  }\n  var menuVisibleSize = menuWrapperSize\n  var menuInvisibleSize = menuSize - menuVisibleSize\n\n  var getMenuPosition = function () {\n    return document.querySelector(\".menu\").scrollLeft\n  }\n  var leftPaddle = document.querySelector(\".left-paddle\")\n  var rightPaddle = document.querySelector(\".right-paddle\")\n\n  if (document.querySelector(\".menu\")) {\n    document.querySelector(\".menu\").onscroll = () => {\n      menuInvisibleSize = menuSize - menuWrapperSize\n      var menuPosition = getMenuPosition()\n      var menuEndOffset = menuInvisibleSize\n\n      if (menuPosition <= 0) {\n        leftPaddle.classList.add(\"hidden\")\n        rightPaddle.classList.remove(\"hidden\")\n      } else if (menuPosition < menuEndOffset) {\n        // show both paddles in the middle\n        leftPaddle.classList.remove(\"hidden\")\n        rightPaddle.classList.remove(\"hidden\")\n      } else if (menuPosition >= menuEndOffset) {\n        leftPaddle.classList.remove(\"hidden\")\n        rightPaddle.classList.add(\"hidden\")\n      }\n    }\n  }\n\n  if (rightPaddle) {\n    rightPaddle.onclick = () => {\n      if (document.querySelector(\".menu\")) {\n        const scrollStart = document.querySelector(\".menu\").scrollLeft\n        const scrollEnd = scrollStart + menuWrapperSize\n        startJavaScriptAnimation({\n          duration: scrollDuration,\n          onProgress: ({ progress }) => {\n            document.querySelector(\".menu\").scrollLeft =\n              scrollStart + (scrollEnd - scrollStart) * progress\n          },\n        })\n      }\n    }\n  }\n\n  if (leftPaddle) {\n    leftPaddle.onclick = () => {\n      if (document.querySelector(\".menu\")) {\n        const scrollStart = document.querySelector(\".menu\").scrollLeft\n        const scrollEnd = scrollStart - menuWrapperSize\n        startJavaScriptAnimation({\n          duration: scrollDuration,\n          onProgress: ({ progress }) => {\n            document.querySelector(\".menu\").scrollLeft =\n              scrollStart + (scrollEnd - scrollStart) * progress\n          },\n        })\n      }\n    }\n  }\n}\n",
    "import React from \"react\"\nimport { usePlayers, useGameStarted, useRoundStarted, useCurrentPlayerId } from \"src/main.store.js\"\nimport { Round } from \"src/round/Round.jsx\"\nimport { ScoreBoard } from \"src/score-board/ScoreBoard.jsx\"\nimport { GameConfiguration } from \"src/game/GameConfiguration.jsx\"\nimport { CharacterSelection } from \"src/game/CharacterSelection.jsx\"\n\nexport const Game = ({ playerAnimationListener }) => {\n  const players = usePlayers()\n  const currentPlayerId = useCurrentPlayerId()\n  const roundStarted = useRoundStarted()\n  const isOnGameConfigurationScreen = useIsOnGameConfigurationScreen()\n  const isOnCharacterSelectionScreen = useIsOnCharacterSelectionScreen()\n\n  const [scoreboardOpenedByUser, scoreboardOpenedByUserSetter] = React.useState(false)\n  const [roundOverPayload, roundOverPayloadSetter] = React.useState(null)\n  const [playerAnimation, playerAnimationSetter] = React.useState(null)\n\n  const isOnScoreboardScreen = !roundStarted || scoreboardOpenedByUser\n\n  const player = players.find((player) => player.id === currentPlayerId)\n  const playerScoreWhenRoundStartedRef = React.useRef(null)\n\n  React.useEffect(() => {\n    if (roundOverPayload) {\n      playerAnimationSetter({\n        player,\n        score: {\n          from: playerScoreWhenRoundStartedRef.current,\n          to: player.score,\n        },\n        roundOverReason: roundOverPayload.reason,\n        symbolsInChest: roundOverPayload.symbolsInChest,\n      })\n    } else {\n      playerAnimationSetter(null)\n    }\n  }, [roundOverPayload, currentPlayerId])\n\n  React.useEffect(() => {\n    if (playerAnimationListener) {\n      return playerAnimationListener(playerAnimationSetter)\n    }\n    return undefined\n  }, [playerAnimationListener])\n\n  if (isOnGameConfigurationScreen) {\n    return <GameConfiguration />\n  }\n\n  if (isOnCharacterSelectionScreen) {\n    return <CharacterSelection players={players} />\n  }\n\n  if (isOnScoreboardScreen) {\n    return (\n      <ScoreBoard\n        openedByUser={scoreboardOpenedByUser}\n        closeScoreboard={() => {\n          scoreboardOpenedByUserSetter(false)\n        }}\n        playerAnimation={playerAnimation}\n      />\n    )\n  }\n\n  return (\n    <Round\n      openScoreboard={() => {\n        scoreboardOpenedByUserSetter(true)\n      }}\n      onRoundStart={() => {\n        playerScoreWhenRoundStartedRef.current = player.score\n        roundOverPayloadSetter(null)\n      }}\n      onRoundOver={(roundOverPayload) => {\n        roundOverPayloadSetter(roundOverPayload)\n      }}\n    />\n  )\n}\n\nexport const useIsOnGameConfigurationScreen = () => {\n  const players = usePlayers()\n  const needsToChooseNumberOfPlayers = players.length === 0\n  return needsToChooseNumberOfPlayers\n}\n\nexport const useIsOnCharacterSelectionScreen = () => {\n  const gameStarted = useGameStarted()\n  return !gameStarted\n}\n",
    "import { createAction, defaultState } from \"src/main.store.js\"\n\nexport const useDisableAnimations = createAction((state) => {\n  return {\n    ...state,\n    animationsDisabled: true,\n  }\n})\n\nexport const useEnableAnimations = createAction((state) => {\n  return {\n    ...state,\n    animationsDisabled: false,\n  }\n})\n\nexport const useDisableSound = createAction((state) => {\n  return {\n    ...state,\n    soundDisabled: true,\n  }\n})\n\nexport const useEnableSound = createAction((state) => {\n  return {\n    ...state,\n    soundDisabled: false,\n  }\n})\n\nexport const useCancelGame = createAction(() => {\n  return defaultState\n})\n",
    "import React from \"react\"\nimport { addToHomescreen } from \"@jsenv/pwa\"\n\nexport const useAddToHomescreen = () => {\n  const available = useAddToHomescreenAvailable()\n  const prompt = useAddToHomescreenPrompt()\n  return [available, prompt]\n}\n\nconst useAddToHomescreenAvailable = () => {\n  const [addToHomescreenAvailable, addToHomescreenAvailableSetter] =\n    React.useState()\n\n  React.useEffect(() => {\n    return addToHomescreen.listenAvailabilityChange(() => {\n      addToHomescreenAvailableSetter(addToHomescreen.isAvailable())\n    })\n  }, [])\n\n  return addToHomescreenAvailable\n}\n\nconst useAddToHomescreenPrompt = () => {\n  return React.useCallback(addToHomescreen.prompt)\n}\n",
    "import React from \"react\"\nimport {\n  serviceWorkerIsAvailable,\n  getServiceWorkerUpdate,\n  listenServiceWorkerUpdate,\n  checkServiceWorkerUpdate,\n  activateServiceWorkerUpdate,\n} from \"@jsenv/pwa\"\n\nexport const useServiceWorkerIsAvailable = () => {\n  return serviceWorkerIsAvailable()\n}\n\nexport const useServiceWorkerUpdate = () => {\n  const [update, updateSetter] = React.useState(getServiceWorkerUpdate())\n  React.useEffect(() => {\n    return listenServiceWorkerUpdate(() => {\n      updateSetter(getServiceWorkerUpdate())\n    })\n  }, [])\n  return update\n}\n\nexport const useCheckServiceWorkerUpdate = () => {\n  return checkServiceWorkerUpdate\n}\n\nexport const useActivateServiceWorkerUpdate = () => {\n  return activateServiceWorkerUpdate\n}\n",
    "/* eslint-disable no-nested-ternary */\nimport React from \"react\"\nimport {\n  useServiceWorkerIsAvailable,\n  useServiceWorkerUpdate,\n  useCheckServiceWorkerUpdate,\n  useActivateServiceWorkerUpdate,\n} from \"./service-worker.hooks.js\"\n\nexport const UpdateApplication = ({ settingsDialogIsOpen }) => {\n  const serviceWorkerIsAvailable = useServiceWorkerIsAvailable()\n\n  if (!serviceWorkerIsAvailable) {\n    return null\n  }\n\n  return <ServiceWorkerView settingsDialogIsOpen={settingsDialogIsOpen} />\n}\n\nconst ServiceWorkerView = ({ checkOnOpen = true, settingsDialogIsOpen }) => {\n  const checkServiceWorkerUpdate = useCheckServiceWorkerUpdate()\n  const serviceWorkerUpdate = useServiceWorkerUpdate()\n\n  React.useEffect(() => {\n    if (checkOnOpen && settingsDialogIsOpen) {\n      checkServiceWorkerUpdate()\n    }\n  }, [checkOnOpen, settingsDialogIsOpen])\n\n  return (\n    <fieldset style={{ minHeight: \"4em\" }}>\n      <legend>Mise a jour</legend>\n      {serviceWorkerUpdate ? (\n        <UpdateAvailable serviceWorkerUpdate={serviceWorkerUpdate} />\n      ) : (\n        <UpdateNotAvailable />\n      )}\n    </fieldset>\n  )\n}\n\nconst UpdateAvailable = ({ serviceWorkerUpdate }) => {\n  const { shouldBecomeNavigatorController, navigatorWillReload } = serviceWorkerUpdate\n  const activateServiceWorkerUpdate = useActivateServiceWorkerUpdate()\n\n  const [updatingStatus, updatingStatusSetter] = React.useState(\"\")\n\n  const update = async () => {\n    updatingStatusSetter(\"updating\")\n    await activateServiceWorkerUpdate({\n      onActivating: () => updatingStatusSetter(\"activating\"),\n      onActivated: () => updatingStatusSetter(\"activated\"),\n      onBecomesNavigatorController: () => updatingStatusSetter(\"\"),\n    })\n  }\n\n  return (\n    <>\n      <p>\n        {updatingStatus === \"\" ? \"Mise a jour prête\" : null}\n        {updatingStatus === \"updating\" || updatingStatus === \"activating\" ? \"Mise a jour...\" : null}\n        {updatingStatus === \"activated\" && navigatorWillReload\n          ? `Mise a jour activée, la page va se recharger`\n          : null}\n        {updatingStatus === \"activated\" && !navigatorWillReload && shouldBecomeNavigatorController\n          ? `Mise a jour activée, recharger la page pour installer`\n          : null}\n        {updatingStatus === \"activated\" && !navigatorWillReload && !shouldBecomeNavigatorController\n          ? `Mise a jour activée`\n          : null}\n      </p>\n      <button disabled={Boolean(updatingStatus)} onClick={update}>\n        {navigatorWillReload ? `Recharger pour mettre a jour` : `Mettre a jour`}\n      </button>\n    </>\n  )\n}\n\nconst UpdateNotAvailable = () => {\n  const checkServiceWorkerUpdate = useCheckServiceWorkerUpdate()\n  const [updateAttemptStatus, updateAttemptStatusSetter] = React.useState(\"\")\n\n  const check = async () => {\n    updateAttemptStatusSetter(\"fetching\")\n    try {\n      const found = await checkServiceWorkerUpdate()\n      if (found) {\n        // no need to handle that case because\n        // an update is now available\n        // meaning <UpdateAvailable /> will take over.\n      } else {\n        updateAttemptStatusSetter(\"notfound\")\n      }\n    } catch (e) {\n      updateAttemptStatusSetter(\"failed\")\n      console.error(e)\n    }\n  }\n\n  return (\n    <>\n      <p>\n        {updateAttemptStatus === \"fetching\" ? \"Recherche de mise a jour...\" : null}\n        {updateAttemptStatus === \"notfound\" ? \"Pas de mise a jour disponible.\" : null}\n        {updateAttemptStatus === \"failed\" ? \"Une erreur est survenue.\" : null}\n      </p>\n      <button disabled={updateAttemptStatus === \"fetching\"} onClick={check}>\n        Chercher\n      </button>\n    </>\n  )\n}\n",
    "/* eslint-disable import/max-dependencies */\n/* eslint-disable no-nested-ternary */\nimport React from \"react\"\nimport { Stylesheet } from \"src/generic/Stylesheet.jsx\"\nimport { Dialog, useDialogState } from \"src/dialog/dialog.component.jsx\"\nimport { useAnimationsDisabled, useSoundDisabled } from \"src/main.store.js\"\nimport {\n  useDisableAnimations,\n  useEnableAnimations,\n  useDisableSound,\n  useEnableSound,\n  useCancelGame,\n} from \"src/main.actions.js\"\nimport { CloseIcon } from \"src/dialog/CloseIcon.jsx\"\nimport { symbolMonkeyUrl } from \"src/symbols/symbols.js\"\nimport { Image } from \"src/generic/Image.jsx\"\nimport { useAddToHomescreen } from \"./add-to-home-screen.hooks.js\"\nimport { UpdateApplication } from \"./UpdateApplication.jsx\"\n\nconst settingsCssUrl = new URL(\"./settings.css\", import.meta.url)\n\nexport const Settings = () => {\n  const [settingsDialogIsOpen, openSettingsDialog, closeSettingsDialog] = useDialogState()\n\n  return (\n    <>\n      <Stylesheet href={settingsCssUrl} />\n      <div\n        id=\"settings\"\n        onClick={() => {\n          openSettingsDialog()\n        }}\n      >\n        <svg className=\"settings-icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n          <path\n            fill=\"currentColor\"\n            d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\n          />\n        </svg>\n      </div>\n      <SettingsDialog\n        settingsDialogIsOpen={settingsDialogIsOpen}\n        closeSettingsDialog={closeSettingsDialog}\n      />\n    </>\n  )\n}\n\nconst SettingsDialog = ({ settingsDialogIsOpen, closeSettingsDialog }) => {\n  const animationsDisabled = useAnimationsDisabled()\n  const disableAnimations = useDisableAnimations()\n  const enableAnimations = useEnableAnimations()\n\n  // TODO later: give this an effect on sounds\n  const soundDisabled = useSoundDisabled()\n  const disableSound = useDisableSound()\n  const enableSound = useEnableSound()\n\n  const cancelGame = useCancelGame()\n\n  const [confirmCancelGameDialogIsOpen, confirmCancelGameDialogIsOpenSetter] = React.useState(false)\n  const openConfirmCancelGameDialog = () => {\n    confirmCancelGameDialogIsOpenSetter(true)\n  }\n  const closeConfirmCancelGameDialog = () => {\n    confirmCancelGameDialogIsOpenSetter(false)\n  }\n\n  const requestCancelGame = () => {\n    openConfirmCancelGameDialog()\n  }\n  const performCancelGame = () => {\n    cancelGame()\n    closeSettingsDialog()\n  }\n\n  return (\n    <Dialog\n      className=\"settings-dialog dialog-spacing-10 dialog-spacing-fluid dialog-spacing-left-fixed dialog-spacing-right-fixed\"\n      isOpen={settingsDialogIsOpen}\n      onRequestClose={closeSettingsDialog}\n      requestCloseOnClickOutside={true}\n    >\n      <div className=\"settings-dialog-content\">\n        <div className=\"dialog-close\" onClick={closeSettingsDialog}>\n          <CloseIcon />\n        </div>\n        <div className=\"dialog-simple-title\">Settings</div>\n        <div className=\"setting-element\">\n          <label>\n            <input\n              type=\"checkbox\"\n              className={animationsDisabled ? \"checked\" : \"unchecked\"}\n              checked={animationsDisabled}\n              onChange={(e) => {\n                if (e.target.checked) {\n                  disableAnimations()\n                } else {\n                  enableAnimations()\n                }\n              }}\n            />\n            {animationsDisabled && <CheckIcon />}\n            Désactiver les animations\n          </label>\n        </div>\n        <div className=\"setting-element\">\n          <label>\n            <input\n              type=\"checkbox\"\n              className={soundDisabled ? \"checked\" : \"unchecked\"}\n              checked={soundDisabled}\n              onChange={(e) => {\n                if (e.target.checked) {\n                  disableSound()\n                } else {\n                  enableSound()\n                }\n              }}\n            />\n            {soundDisabled && <CheckIcon />}\n            Couper le son\n          </label>\n        </div>\n        <div className=\"setting-element\">\n          <button\n            onClick={() => {\n              requestCancelGame()\n            }}\n          >\n            Annuler la partie\n          </button>\n        </div>\n        <AddToHomescreen />\n        <UpdateApplication settingsDialogIsOpen={settingsDialogIsOpen} />\n        <ConfirmCancelGameDialog\n          confirmCancelGameDialogIsOpen={confirmCancelGameDialogIsOpen}\n          closeConfirmCancelGameDialog={closeConfirmCancelGameDialog}\n          performCancelGame={performCancelGame}\n        />\n      </div>\n    </Dialog>\n  )\n}\n\nconst AddToHomescreen = () => {\n  const [available, prompt] = useAddToHomescreen()\n\n  if (!available) {\n    return null\n  }\n\n  return (\n    <button\n      onClick={() => {\n        prompt()\n      }}\n    >\n      Installer application\n    </button>\n  )\n}\n\nconst CheckIcon = () => (\n  <svg className=\"check-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 512 512\">\n    <path\n      fill=\"currentColor\"\n      d=\"M435.848 83.466L172.804 346.51l-96.652-96.652c-4.686-4.686-12.284-4.686-16.971 0l-28.284 28.284c-4.686 4.686-4.686 12.284 0 16.971l133.421 133.421c4.686 4.686 12.284 4.686 16.971 0l299.813-299.813c4.686-4.686 4.686-12.284 0-16.971l-28.284-28.284c-4.686-4.686-12.284-4.686-16.97 0z\"\n    ></path>\n  </svg>\n)\n\nconst ConfirmCancelGameDialog = ({\n  confirmCancelGameDialogIsOpen,\n  closeConfirmCancelGameDialog,\n  performCancelGame,\n}) => {\n  return (\n    <Dialog\n      className=\"confirm-cancel-game-dialog dialog-spacing-10 dialog-spacing-fluid dialog-spacing-left-fixed dialog-spacing-right-fixed\"\n      isOpen={confirmCancelGameDialogIsOpen}\n      onRequestClose={closeConfirmCancelGameDialog}\n      requestCloseOnClickOutside={true}\n    >\n      <div className=\"settings-dialog-content\">\n        <div className=\"dialog-close\" onClick={closeConfirmCancelGameDialog}>\n          <CloseIcon />\n        </div>\n        <div className=\"title-container\">\n          <Image className=\"illustration\" src={symbolMonkeyUrl} width=\"40\" height=\"40\" />\n          <div className=\"title\">Êtes-vous certain de vouloir annuler la partie ?</div>\n        </div>\n        <div className=\"content\">\n          Cette action irréversible effacera la progression actuelle et remettra la partie à zéro !\n        </div>\n        <div className=\"confirm-action\">\n          <button\n            onClick={() => {\n              performCancelGame()\n              closeConfirmCancelGameDialog()\n            }}\n          >\n            Confirmer\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  )\n}\n",
    "import React from \"react\"\nimport { useGameCreated } from \"src/main.store.js\"\nimport { useMainDomNodeSetter } from \"src/dom/dom.main.js\"\nimport { Home } from \"src/home/Home.jsx\"\nimport { Game } from \"src/game/Game.jsx\"\nimport { Stylesheet } from \"src/generic/Stylesheet.jsx\"\nimport { Settings } from \"src/settings/settings.component.js\"\n\nconst milleSabordsCssUrl = new URL(\"../mille-sabord.css\", import.meta.url)\n\nexport const App = (props) => {\n  return (\n    <div id=\"main\" ref={useMainDomNodeSetter()}>\n      <Stylesheet href={milleSabordsCssUrl} />\n      <Settings />\n      <AppBody {...props} />\n    </div>\n  )\n}\n\nconst AppBody = (props) => {\n  const gameCreated = useGameCreated()\n\n  if (gameCreated) {\n    return <Game {...props} />\n  }\n\n  return <Home {...props} />\n}\n"
  ]
}